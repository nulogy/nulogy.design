{"version":3,"sources":["webpack://nulogy.design/./src/pages/components/switcher.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Playground","PropsTable","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","config","parentName","propsConfig","isMDXComponent"],"mappings":"wQAUaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAaL,EAAc,cAC3BM,EAAaN,EAAc,cAC3BO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,yBACD,OAAO,QAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAI5E,+BACA,qFACA,QAACP,EAAD,iBAAgBQ,IAAhB,CAAwBD,QAAQ,iBAChC,+BACA,mBACE,cAAIE,WAAW,MAAf,yDACA,cAAIA,WAAW,MAAf,sNACA,cAAIA,WAAW,MAAf,iGAEF,qCACA,mBACE,cAAIA,WAAW,MAAf,6HACA,cAAIA,WAAW,MAAf,6GACA,cAAIA,WAAW,MAAf,gEACA,cAAIA,WAAW,MAAf,2EACA,cAAIA,WAAW,MAAf,oFAEF,6CACA,4NACA,oCACA,sRACA,4BACA,QAACR,EAAD,CAAYS,YAAaF,UAAcD,QAAQ,gBAKnDF,EAAWM,gBAAiB","file":"component---src-pages-components-switcher-mdx-63bdab15a59b10f4f88d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nulogy.design/nulogy.design/src/components/MarkdownRenderer.js\";\nimport { Switcher, Switch } from \"@nulogy/components\";\nimport { config } from \"../../playgrounds/switcher\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Playground = makeShortcode(\"Playground\");\nconst PropsTable = makeShortcode(\"PropsTable\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Switcher`}</h1>\n    <p>{`A switcher allows the user to toggle between 2 or more options.`}</p>\n    <Playground {...config} mdxType=\"Playground\" />\n    <h2>{`Use when`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Organizing, grouping, or filtering data and content.`}</li>\n      <li parentName=\"ul\">{`Needing to toggle between different ways to organize data. Such as visualizing data in a grid vs table format, group data by different facets, or to immediately filter content displayed in a section of a page.`}</li>\n      <li parentName=\"ul\">{`Giving the user a way to immediately manipulate the UI without the need of a submit button.`}</li>\n    </ul>\n    <h2>{`Don't use when`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Navigating between different sets of data or distinct sets of content that live separately. Tabs should be used instead.`}</li>\n      <li parentName=\"ul\">{`The use case calls for more than one option being selected at a time. Checkboxes should be used instead.`}</li>\n      <li parentName=\"ul\">{`Used as a form input. Radio buttons should be used instead.`}</li>\n      <li parentName=\"ul\">{`Used as an on/off selection component. Toggles should be used instead.`}</li>\n      <li parentName=\"ul\">{`The use case calls for more than 4 options, a dropdown should be used instead.`}</li>\n    </ul>\n    <h2>{`Interaction guidelines`}</h2>\n    <p>{`When a user uses a switcher, ideally, only the content being switched should be reloaded or reorganized. To prevent loss of context, the switcher and any navigation components should remain visible.`}</p>\n    <h2>{`Accessibility`}</h2>\n    <p>{`Considering the intended use of the switcher — a low-risk control component for organizing content in different ways — it can be used without a label when the set of options are descriptive enough by themselves. In this case, a hidden label should be used.`}</p>\n    <h2>{`Props`}</h2>\n    <PropsTable propsConfig={config.props} mdxType=\"PropsTable\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}