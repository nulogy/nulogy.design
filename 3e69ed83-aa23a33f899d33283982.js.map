{"version":3,"sources":["webpack://nulogy.design/./node_modules/@babel/plugin-transform-react-pure-annotations/node_modules/@babel/parser/lib/index.js"],"names":["_toConsumableArray","_slicedToArray","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createClass","_classCallCheck","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","_isNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","defineProperty","exports","beforeExpr","startsExpr","isLoop","prefix","TokenType","label","conf","undefined","keyword","rightAssociative","isAssign","postfix","binop","updateContext","keywords","Map","createKeyword","options","token","set","createBinop","types","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","_BaseParser","key","comment","loc","state","trailingComments","push","leadingComments","node","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","_i","leadingComment","type","body","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","innerComments","firstTrailingCommentIndex","findIndex","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","_CommentsParser","_super2","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","errorTemplate","_len","params","_key","raiseWithData","concat","_len2","_key2","getLocationForPosition","message","replace","_","errorRecovery","errors","error","_raise","data","_len3","_key3","errorContext","SyntaxError","isLookahead","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","scope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","id","currentVarScope","currentThisScope","FlowScope","_Scope","_super4","_this3","_len9","args","_key9","declareFunctions","FlowScopeHandler","_ScopeHandler","_super5","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","_Scope2","_super8","_this17","_len12","_key12","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","_ScopeHandler2","_super9","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","some","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","_superClass","_super3","_ref","pattern","regex","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","_get2","_this2","_len4","_key4","directiveStatements","directives","map","d","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","refExpressionErrors","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","_get3","_len5","_key5","convertPrivateNameToPrivateIdentifier","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","_get4","_len6","_key6","propertyNode","_get5","_len7","_key7","isPattern","isAccessor","shorthand","isLHS","toAssignable","_get6","_len8","_key8","optional","callee","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","_superClass3","_class2","_super7","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","_node5","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","_superClass2","_temp","_super6","_this4","_len10","_key10","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","_this$flowParseTypeAn","flowParseTypeAndPredicateInitialiser","_this$flowParseTypeAn2","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","_this5","enter","bodyNode","_bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","forEach","bodyElement","declaration","isEsModuleType","default","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","_ref2","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","_lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","_lookahead2","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","_this6","forwardNoArrowParamsConversionAt","_this$flowParseTypeAn3","_this$flowParseTypeAn4","topLevel","strict","flowParseInterface","shouldParseEnums","_node","flowParseEnumDeclaration","isValidDirective","expr","refNeedsArrowPos","_this7","tryParse","failState","clone","originalNoArrowAt","noArrowAt","_this$tryParseConditi","tryParseConditionalConsequent","consequent","failed","_this$getArrowLikeExp","getArrowLikeExpressions","_this$getArrowLikeExp2","valid","invalid","_this$tryParseConditi2","_this$getArrowLikeExp3","_this$getArrowLikeExp4","_this$tryParseConditi3","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","_this8","arrows","_node2","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","_declarationNode","_declarationNode2","_declarationNode3","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","_this9","_last","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","_get7","_len11","_key11","isThisParam","_params2","superTypeParameters","implemented","_node3","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_this10","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","_this11","_this11$flowParseType","_this11$flowParseType2","allowDuplicates","isArrowFunction","canBeArrow","_this12","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","_this13","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","_node4","flowParseTypeParameterInstantiationCallOrNew","_this14","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","_ref3","enumName","memberName","_ref4","toUpperCase","_ref5","_ref6","_ref7","suppliedType","_ref8","explicitType","_ref9","_ref10","_this15","endOfInit","literal","_literal","_literal2","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","_ref11","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","_this$flowEnumMemberR","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","add","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_ref12","_step","_iterator","flowEnumErrorStringMemberInconsistentlyInitailized","_step2","_iterator2","_member","_ref13","flowEnumErrorInvalidExplicitType","_ref14","_this16","nameLoc","flowEnumParseExplicitType","_this$flowEnumMembers","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_step3","_iterator3","_step4","_iterator4","_member2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","_superClass4","_class3","_super10","isLiteralPropertyName","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","bind","modified","disallowedModifiers","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","_this18","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","_this19","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","_this$state","labeledNode","optionalTypeNode","restNode","abstract","_this20","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","_node6","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","_node7","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","_this21","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","_braceStackCounter","tsSkipParameterStart","_this22","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","containsEsc","_this23","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","_this24","_node8","cb","oldContext","_this25","tsDoThenParseType","_this26","_this27","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","res","nany","_this28","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","_this29","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","_this30","tsInNoContext","tsIsDeclarationStart","decorators","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","_this31","isInParens","tsCheckForInvalidTypeCasts","_get8","_len13","_key13","_this32","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","_result","parseTaggedTemplateExpression","_this33","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","_this34","callParseClassMember","inAbstractClass","methodOrProp","tsParseExpressionStatement","_this35","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_get9","_len14","_key14","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_get11","_this36","_len15","_key15","_get10","_get12","_typeParameters","_get13","tsParseTypeAssertion","_this37","toAssignableParenthesizedExpression","_get14","_expr$extra2","_len16","_key16","_get15","_len17","_key17","readToken_lt_gt","_this38","baseCount","firstParam","oldIsDeclareContext","oldInAbstractClass","_get16","_len18","_key18","_get17","_len19","_key19","hasBody","v8intrinsic","_superClass6","_class5","_super12","v8IntrinsicStart","identifier","parseV8Intrinsic","placeholders","_superClass5","_class4","_super11","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","_ParserError","_super13","_this39","checkKeywordEscapes","pushToken","old","curr","_this40","clear","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","_code","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","parent","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","_i3","_Array$from","_Array$from$_i","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","_step5","_iterator5","ExpressionScope","ArrowHeadParsingScope","_ExpressionScope","_super14","_this41","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","_this42","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","_Tokenizer","_super15","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","names","_this43","join","fn","oldState","abortSignal","_failState","andThrow","shorthandAssign","doubleProto","isPrivateName","_this44","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","loopLabel","switchLabel","loneSurrogate","Parser","_StatementParser","_super20","_this58","opts","_i2","_Object$keys","getOptions","initializeScopes","_step16","pluginMap","_iterator16","_ref15","_ref16","pluginsMap","enterInitialScopes","parseTopLevel","_ExpressionParser","StatementParser","_super19","parseProgram","interpreter","parseInterpreterDirective","parseBlockBody","_i4","_Array$from2","_Array$from2$_i","isLetKeyword","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","parseDecorator","canHaveLeadingDecorator","expectOnePlugin","_node10","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","_this50","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","startsWithLet","_init","parseVar","declarations","parseForIn","isForOf","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","parseBindingAtom","simple","_this51","handler","clause","parseCatchClauseParam","finalizer","_this52","_this53","_step11","_iterator11","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","_this54","_this55","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","_this56","statement","isHangingStatement","requireId","initFunction","generator","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","_this57","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","getPrivateNameSV","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","_node$specifiers","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_step12","_iterator12","exportedName","checkLocalExport","_step13","_iterator13","_declaration","_step14","_iterator14","_step15","_iterator15","elem","nodes","surrogate","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","_LValParser","ExpressionParser","_super18","isRecord","protoRef","isObjectMethod","used","disallowIn","_this45","disallowInAnd","parseExpressionBase","allowInAnd","expressions","_this46","_this47","ownExpressionErrors","hasYield","_left2","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","_this48","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","_expr","parseAwait","checkExponentialAfterUnary","parseModuleExpression","isDelete","arg","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","_node9","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","_step9","_iterator9","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","_last4","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","_this49","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","strictModeChanged","_step10","checkClashes","_iterator10","allowEmpty","_this$state2","inStaticBlock","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","_NodeUtils","LValParser","_super17","_node$extra3","recordParenthesizedIdentifierError","_last2","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","_last3","raiseTrailingCommaAfterRest","_step6","_iterator6","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","_step7","_iterator7","_step8","_iterator8","_UtilParser","NodeUtils","_super16","processComment","locationNode","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","_step17","_iterator17","getParserClass","_options","ast","moduleError","_unused2","getExpression","tokTypes"],"mappings":"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","file":"3e69ed83-aa23a33f899d33283982.js","sourcesContent":["'use strict';\n\nvar _toConsumableArray = require(\"/home/runner/work/nulogy.design/nulogy.design/node_modules/gatsby/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"/home/runner/work/nulogy.design/nulogy.design/node_modules/gatsby/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _get = require(\"/home/runner/work/nulogy.design/nulogy.design/node_modules/gatsby/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/runner/work/nulogy.design/nulogy.design/node_modules/gatsby/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"/home/runner/work/nulogy.design/nulogy.design/node_modules/gatsby/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/runner/work/nulogy.design/nulogy.design/node_modules/gatsby/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _createClass = require(\"/home/runner/work/nulogy.design/nulogy.design/node_modules/gatsby/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/home/runner/work/nulogy.design/nulogy.design/node_modules/gatsby/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar beforeExpr = true;\nvar startsExpr = true;\nvar isLoop = true;\nvar isAssign = true;\nvar prefix = true;\nvar postfix = true;\n\nvar TokenType = function TokenType(label) {\n  var conf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  _classCallCheck(this, TokenType);\n\n  this.label = void 0;\n  this.keyword = void 0;\n  this.beforeExpr = void 0;\n  this.startsExpr = void 0;\n  this.rightAssociative = void 0;\n  this.isLoop = void 0;\n  this.isAssign = void 0;\n  this.prefix = void 0;\n  this.postfix = void 0;\n  this.binop = void 0;\n  this.updateContext = void 0;\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.rightAssociative = !!conf.rightAssociative;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop != null ? conf.binop : null;\n  this.updateContext = null;\n};\n\nvar keywords = new Map();\n\nfunction createKeyword(name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options.keyword = name;\n  var token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr: beforeExpr,\n    binop: binop\n  });\n}\n\nvar types = {\n  num: new TokenType(\"num\", {\n    startsExpr: startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr: startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr: startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr: startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr: startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr: startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr: beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr: beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr: beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr: beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr: beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr: beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr: beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr: startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr: startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr: beforeExpr,\n    isAssign: isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr: beforeExpr,\n    isAssign: isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix: prefix,\n    postfix: postfix,\n    startsExpr: startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr: beforeExpr,\n    binop: 9,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr: beforeExpr,\n    binop: 10,\n    startsExpr: startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr: beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr: beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr: beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop: isLoop,\n    beforeExpr: beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr: beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop: isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr: startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr: beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop: isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr: startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr: startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr: startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr: beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr: startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr: startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr: startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr: startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr: beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr: beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  })\n};\nvar lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nvar Position = function Position(line, col) {\n  _classCallCheck(this, Position);\n\n  this.line = void 0;\n  this.column = void 0;\n  this.line = line;\n  this.column = col;\n};\n\nvar SourceLocation = function SourceLocation(start, end) {\n  _classCallCheck(this, SourceLocation);\n\n  this.start = void 0;\n  this.end = void 0;\n  this.filename = void 0;\n  this.identifierName = void 0;\n  this.start = start;\n  this.end = end;\n};\n\nfunction getLineInfo(input, offset) {\n  var line = 1;\n  var lineStart = 0;\n  var match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nvar BaseParser = /*#__PURE__*/function () {\n  function BaseParser() {\n    _classCallCheck(this, BaseParser);\n\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  _createClass(BaseParser, [{\n    key: \"hasPlugin\",\n    value: function hasPlugin(name) {\n      return this.plugins.has(name);\n    }\n  }, {\n    key: \"getPluginOption\",\n    value: function getPluginOption(plugin, name) {\n      if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n    }\n  }]);\n\n  return BaseParser;\n}();\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nvar CommentsParser = /*#__PURE__*/function (_BaseParser) {\n  _inherits(CommentsParser, _BaseParser);\n\n  var _super = _createSuper(CommentsParser);\n\n  function CommentsParser() {\n    _classCallCheck(this, CommentsParser);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CommentsParser, [{\n    key: \"addComment\",\n    value: function addComment(comment) {\n      if (this.filename) comment.loc.filename = this.filename;\n      this.state.trailingComments.push(comment);\n      this.state.leadingComments.push(comment);\n    }\n  }, {\n    key: \"adjustCommentsAfterTrailingComma\",\n    value: function adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n      if (this.state.leadingComments.length === 0) {\n        return;\n      }\n\n      var lastElement = null;\n      var i = elements.length;\n\n      while (lastElement === null && i > 0) {\n        lastElement = elements[--i];\n      }\n\n      if (lastElement === null) {\n        return;\n      }\n\n      for (var j = 0; j < this.state.leadingComments.length; j++) {\n        if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n          this.state.leadingComments.splice(j, 1);\n          j--;\n        }\n      }\n\n      var newTrailingComments = [];\n\n      for (var _i = 0; _i < this.state.leadingComments.length; _i++) {\n        var leadingComment = this.state.leadingComments[_i];\n\n        if (leadingComment.end < node.end) {\n          newTrailingComments.push(leadingComment);\n\n          if (!takeAllComments) {\n            this.state.leadingComments.splice(_i, 1);\n            _i--;\n          }\n        } else {\n          if (node.trailingComments === undefined) {\n            node.trailingComments = [];\n          }\n\n          node.trailingComments.push(leadingComment);\n        }\n      }\n\n      if (takeAllComments) this.state.leadingComments = [];\n\n      if (newTrailingComments.length > 0) {\n        lastElement.trailingComments = newTrailingComments;\n      } else if (lastElement.trailingComments !== undefined) {\n        lastElement.trailingComments = [];\n      }\n    }\n  }, {\n    key: \"processComment\",\n    value: function processComment(node) {\n      if (node.type === \"Program\" && node.body.length > 0) return;\n      var stack = this.state.commentStack;\n      var firstChild, lastChild, trailingComments, i, j;\n\n      if (this.state.trailingComments.length > 0) {\n        if (this.state.trailingComments[0].start >= node.end) {\n          trailingComments = this.state.trailingComments;\n          this.state.trailingComments = [];\n        } else {\n          this.state.trailingComments.length = 0;\n        }\n      } else if (stack.length > 0) {\n        var lastInStack = last(stack);\n\n        if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n          trailingComments = lastInStack.trailingComments;\n          delete lastInStack.trailingComments;\n        }\n      }\n\n      if (stack.length > 0 && last(stack).start >= node.start) {\n        firstChild = stack.pop();\n      }\n\n      while (stack.length > 0 && last(stack).start >= node.start) {\n        lastChild = stack.pop();\n      }\n\n      if (!lastChild && firstChild) lastChild = firstChild;\n\n      if (firstChild) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n            this.adjustCommentsAfterTrailingComma(node, node.properties);\n            break;\n\n          case \"ObjectPattern\":\n            this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n            break;\n\n          case \"CallExpression\":\n            this.adjustCommentsAfterTrailingComma(node, node.arguments);\n            break;\n\n          case \"ArrayExpression\":\n            this.adjustCommentsAfterTrailingComma(node, node.elements);\n            break;\n\n          case \"ArrayPattern\":\n            this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n            break;\n        }\n      } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n        this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n      }\n\n      if (lastChild) {\n        if (lastChild.leadingComments) {\n          if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n            node.leadingComments = lastChild.leadingComments;\n            delete lastChild.leadingComments;\n          } else {\n            for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n              if (lastChild.leadingComments[i].end <= node.start) {\n                node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n                break;\n              }\n            }\n          }\n        }\n      } else if (this.state.leadingComments.length > 0) {\n        if (last(this.state.leadingComments).end <= node.start) {\n          if (this.state.commentPreviousNode) {\n            for (j = 0; j < this.state.leadingComments.length; j++) {\n              if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n                this.state.leadingComments.splice(j, 1);\n                j--;\n              }\n            }\n          }\n\n          if (this.state.leadingComments.length > 0) {\n            node.leadingComments = this.state.leadingComments;\n            this.state.leadingComments = [];\n          }\n        } else {\n          for (i = 0; i < this.state.leadingComments.length; i++) {\n            if (this.state.leadingComments[i].end > node.start) {\n              break;\n            }\n          }\n\n          var leadingComments = this.state.leadingComments.slice(0, i);\n\n          if (leadingComments.length) {\n            node.leadingComments = leadingComments;\n          }\n\n          trailingComments = this.state.leadingComments.slice(i);\n\n          if (trailingComments.length === 0) {\n            trailingComments = null;\n          }\n        }\n      }\n\n      this.state.commentPreviousNode = node;\n\n      if (trailingComments) {\n        if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n          node.innerComments = trailingComments;\n        } else {\n          var firstTrailingCommentIndex = trailingComments.findIndex(function (comment) {\n            return comment.end >= node.end;\n          });\n\n          if (firstTrailingCommentIndex > 0) {\n            node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n            node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n          } else {\n            node.trailingComments = trailingComments;\n          }\n        }\n      }\n\n      stack.push(node);\n    }\n  }]);\n\n  return CommentsParser;\n}(BaseParser);\n\nvar ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: \"import.meta may appear only with 'sourceType: \\\"module\\\"'\",\n  ImportOutsideModule: \"'import' and 'export' may appear only with 'sourceType: \\\"module\\\"'\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nvar ParserError = /*#__PURE__*/function (_CommentsParser) {\n  _inherits(ParserError, _CommentsParser);\n\n  var _super2 = _createSuper(ParserError);\n\n  function ParserError() {\n    _classCallCheck(this, ParserError);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ParserError, [{\n    key: \"getLocationForPosition\",\n    value: function getLocationForPosition(pos) {\n      var loc;\n      if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n      return loc;\n    }\n  }, {\n    key: \"raise\",\n    value: function raise(pos, errorTemplate) {\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n\n      return this.raiseWithData.apply(this, [pos, undefined, errorTemplate].concat(params));\n    }\n  }, {\n    key: \"raiseOverwrite\",\n    value: function raiseOverwrite(pos, errorTemplate) {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        params[_key2 - 2] = arguments[_key2];\n      }\n\n      var loc = this.getLocationForPosition(pos);\n      var message = errorTemplate.replace(/%(\\d+)/g, function (_, i) {\n        return params[i];\n      }) + \" (\".concat(loc.line, \":\").concat(loc.column, \")\");\n\n      if (this.options.errorRecovery) {\n        var errors = this.state.errors;\n\n        for (var i = errors.length - 1; i >= 0; i--) {\n          var error = errors[i];\n\n          if (error.pos === pos) {\n            return Object.assign(error, {\n              message: message\n            });\n          } else if (error.pos < pos) {\n            break;\n          }\n        }\n      }\n\n      return this._raise({\n        loc: loc,\n        pos: pos\n      }, message);\n    }\n  }, {\n    key: \"raiseWithData\",\n    value: function raiseWithData(pos, data, errorTemplate) {\n      for (var _len3 = arguments.length, params = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n        params[_key3 - 3] = arguments[_key3];\n      }\n\n      var loc = this.getLocationForPosition(pos);\n      var message = errorTemplate.replace(/%(\\d+)/g, function (_, i) {\n        return params[i];\n      }) + \" (\".concat(loc.line, \":\").concat(loc.column, \")\");\n      return this._raise(Object.assign({\n        loc: loc,\n        pos: pos\n      }, data), message);\n    }\n  }, {\n    key: \"_raise\",\n    value: function _raise(errorContext, message) {\n      var err = new SyntaxError(message);\n      Object.assign(err, errorContext);\n\n      if (this.options.errorRecovery) {\n        if (!this.isLookahead) this.state.errors.push(err);\n        return err;\n      } else {\n        throw err;\n      }\n    }\n  }]);\n\n  return ParserError;\n}(CommentsParser);\n\nvar estree = function estree(superClass) {\n  return /*#__PURE__*/function (_superClass) {\n    _inherits(_class, _superClass);\n\n    var _super3 = _createSuper(_class);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _super3.apply(this, arguments);\n    }\n\n    _createClass(_class, [{\n      key: \"estreeParseRegExpLiteral\",\n      value: function estreeParseRegExpLiteral(_ref) {\n        var pattern = _ref.pattern,\n            flags = _ref.flags;\n        var regex = null;\n\n        try {\n          regex = new RegExp(pattern, flags);\n        } catch (e) {}\n\n        var node = this.estreeParseLiteral(regex);\n        node.regex = {\n          pattern: pattern,\n          flags: flags\n        };\n        return node;\n      }\n    }, {\n      key: \"estreeParseBigIntLiteral\",\n      value: function estreeParseBigIntLiteral(value) {\n        var bigInt;\n\n        try {\n          bigInt = BigInt(value);\n        } catch (_unused) {\n          bigInt = null;\n        }\n\n        var node = this.estreeParseLiteral(bigInt);\n        node.bigint = String(node.value || value);\n        return node;\n      }\n    }, {\n      key: \"estreeParseDecimalLiteral\",\n      value: function estreeParseDecimalLiteral(value) {\n        var decimal = null;\n        var node = this.estreeParseLiteral(decimal);\n        node.decimal = String(node.value || value);\n        return node;\n      }\n    }, {\n      key: \"estreeParseLiteral\",\n      value: function estreeParseLiteral(value) {\n        return this.parseLiteral(value, \"Literal\");\n      }\n    }, {\n      key: \"directiveToStmt\",\n      value: function directiveToStmt(directive) {\n        var directiveLiteral = directive.value;\n        var stmt = this.startNodeAt(directive.start, directive.loc.start);\n        var expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n        expression.value = directiveLiteral.extra.expressionValue;\n        expression.raw = directiveLiteral.extra.raw;\n        stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n        stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n        return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n      }\n    }, {\n      key: \"initFunction\",\n      value: function initFunction(node, isAsync) {\n        _get(_getPrototypeOf(_class.prototype), \"initFunction\", this).call(this, node, isAsync);\n\n        node.expression = false;\n      }\n    }, {\n      key: \"checkDeclaration\",\n      value: function checkDeclaration(node) {\n        if (node != null && this.isObjectProperty(node)) {\n          this.checkDeclaration(node.value);\n        } else {\n          _get(_getPrototypeOf(_class.prototype), \"checkDeclaration\", this).call(this, node);\n        }\n      }\n    }, {\n      key: \"getObjectOrClassMethodParams\",\n      value: function getObjectOrClassMethodParams(method) {\n        return method.value.params;\n      }\n    }, {\n      key: \"isValidDirective\",\n      value: function isValidDirective(stmt) {\n        var _stmt$expression$extr;\n\n        return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n      }\n    }, {\n      key: \"stmtToDirective\",\n      value: function stmtToDirective(stmt) {\n        var directive = _get(_getPrototypeOf(_class.prototype), \"stmtToDirective\", this).call(this, stmt);\n\n        var value = stmt.expression.value;\n        this.addExtra(directive.value, \"expressionValue\", value);\n        return directive;\n      }\n    }, {\n      key: \"parseBlockBody\",\n      value: function parseBlockBody(node) {\n        var _get2,\n            _this2 = this;\n\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n\n        (_get2 = _get(_getPrototypeOf(_class.prototype), \"parseBlockBody\", this)).call.apply(_get2, [this, node].concat(args));\n\n        var directiveStatements = node.directives.map(function (d) {\n          return _this2.directiveToStmt(d);\n        });\n        node.body = directiveStatements.concat(node.body);\n        delete node.directives;\n      }\n    }, {\n      key: \"pushClassMethod\",\n      value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n        this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n        if (method.typeParameters) {\n          method.value.typeParameters = method.typeParameters;\n          delete method.typeParameters;\n        }\n\n        classBody.body.push(method);\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom(refExpressionErrors) {\n        switch (this.state.type) {\n          case types.num:\n          case types.string:\n            return this.estreeParseLiteral(this.state.value);\n\n          case types.regexp:\n            return this.estreeParseRegExpLiteral(this.state.value);\n\n          case types.bigint:\n            return this.estreeParseBigIntLiteral(this.state.value);\n\n          case types.decimal:\n            return this.estreeParseDecimalLiteral(this.state.value);\n\n          case types._null:\n            return this.estreeParseLiteral(null);\n\n          case types._true:\n            return this.estreeParseLiteral(true);\n\n          case types._false:\n            return this.estreeParseLiteral(false);\n\n          default:\n            return _get(_getPrototypeOf(_class.prototype), \"parseExprAtom\", this).call(this, refExpressionErrors);\n        }\n      }\n    }, {\n      key: \"parseMaybePrivateName\",\n      value: function parseMaybePrivateName() {\n        var _get3;\n\n        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n\n        var node = (_get3 = _get(_getPrototypeOf(_class.prototype), \"parseMaybePrivateName\", this)).call.apply(_get3, [this].concat(args));\n\n        if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return this.convertPrivateNameToPrivateIdentifier(node);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"convertPrivateNameToPrivateIdentifier\",\n      value: function convertPrivateNameToPrivateIdentifier(node) {\n        var name = _get(_getPrototypeOf(_class.prototype), \"getPrivateNameSV\", this).call(this, node);\n\n        node = node;\n        delete node.id;\n        node.name = name;\n        node.type = \"PrivateIdentifier\";\n        return node;\n      }\n    }, {\n      key: \"isPrivateName\",\n      value: function isPrivateName(node) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return _get(_getPrototypeOf(_class.prototype), \"isPrivateName\", this).call(this, node);\n        }\n\n        return node.type === \"PrivateIdentifier\";\n      }\n    }, {\n      key: \"getPrivateNameSV\",\n      value: function getPrivateNameSV(node) {\n        if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n          return _get(_getPrototypeOf(_class.prototype), \"getPrivateNameSV\", this).call(this, node);\n        }\n\n        return node.name;\n      }\n    }, {\n      key: \"parseLiteral\",\n      value: function parseLiteral(value, type, startPos, startLoc) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseLiteral\", this).call(this, value, type, startPos, startLoc);\n\n        node.raw = node.extra.raw;\n        delete node.extra;\n        return node;\n      }\n    }, {\n      key: \"parseFunctionBody\",\n      value: function parseFunctionBody(node, allowExpression) {\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _get(_getPrototypeOf(_class.prototype), \"parseFunctionBody\", this).call(this, node, allowExpression, isMethod);\n\n        node.expression = node.body.type !== \"BlockStatement\";\n      }\n    }, {\n      key: \"parseMethod\",\n      value: function parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type) {\n        var inClassScope = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n        var funcNode = this.startNode();\n        funcNode.kind = node.kind;\n        funcNode = _get(_getPrototypeOf(_class.prototype), \"parseMethod\", this).call(this, funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n        funcNode.type = \"FunctionExpression\";\n        delete funcNode.kind;\n        node.value = funcNode;\n\n        if (type === \"ClassPrivateMethod\") {\n          node.computed = false;\n        }\n\n        type = \"MethodDefinition\";\n        return this.finishNode(node, type);\n      }\n    }, {\n      key: \"parseClassProperty\",\n      value: function parseClassProperty() {\n        var _get4;\n\n        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          args[_key6] = arguments[_key6];\n        }\n\n        var propertyNode = (_get4 = _get(_getPrototypeOf(_class.prototype), \"parseClassProperty\", this)).call.apply(_get4, [this].concat(args));\n\n        if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n          propertyNode.type = \"PropertyDefinition\";\n        }\n\n        return propertyNode;\n      }\n    }, {\n      key: \"parseClassPrivateProperty\",\n      value: function parseClassPrivateProperty() {\n        var _get5;\n\n        for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n          args[_key7] = arguments[_key7];\n        }\n\n        var propertyNode = (_get5 = _get(_getPrototypeOf(_class.prototype), \"parseClassPrivateProperty\", this)).call.apply(_get5, [this].concat(args));\n\n        if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n          propertyNode.type = \"PropertyDefinition\";\n          propertyNode.computed = false;\n        }\n\n        return propertyNode;\n      }\n    }, {\n      key: \"parseObjectMethod\",\n      value: function parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseObjectMethod\", this).call(this, prop, isGenerator, isAsync, isPattern, isAccessor);\n\n        if (node) {\n          node.type = \"Property\";\n          if (node.kind === \"method\") node.kind = \"init\";\n          node.shorthand = false;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseObjectProperty\",\n      value: function parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseObjectProperty\", this).call(this, prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n        if (node) {\n          node.kind = \"init\";\n          node.type = \"Property\";\n        }\n\n        return node;\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (node != null && this.isObjectProperty(node)) {\n          this.toAssignable(node.value, isLHS);\n          return node;\n        }\n\n        return _get(_getPrototypeOf(_class.prototype), \"toAssignable\", this).call(this, node, isLHS);\n      }\n    }, {\n      key: \"toAssignableObjectExpressionProp\",\n      value: function toAssignableObjectExpressionProp(prop) {\n        if (prop.kind === \"get\" || prop.kind === \"set\") {\n          this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n        } else if (prop.method) {\n          this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n        } else {\n          var _get6;\n\n          for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n            args[_key8 - 1] = arguments[_key8];\n          }\n\n          (_get6 = _get(_getPrototypeOf(_class.prototype), \"toAssignableObjectExpressionProp\", this)).call.apply(_get6, [this, prop].concat(args));\n        }\n      }\n    }, {\n      key: \"finishCallExpression\",\n      value: function finishCallExpression(node, optional) {\n        _get(_getPrototypeOf(_class.prototype), \"finishCallExpression\", this).call(this, node, optional);\n\n        if (node.callee.type === \"Import\") {\n          node.type = \"ImportExpression\";\n          node.source = node.arguments[0];\n          delete node.arguments;\n          delete node.callee;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"toReferencedArguments\",\n      value: function toReferencedArguments(node) {\n        if (node.type === \"ImportExpression\") {\n          return;\n        }\n\n        _get(_getPrototypeOf(_class.prototype), \"toReferencedArguments\", this).call(this, node);\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        _get(_getPrototypeOf(_class.prototype), \"parseExport\", this).call(this, node);\n\n        switch (node.type) {\n          case \"ExportAllDeclaration\":\n            node.exported = null;\n            break;\n\n          case \"ExportNamedDeclaration\":\n            if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n              node.type = \"ExportAllDeclaration\";\n              node.exported = node.specifiers[0].exported;\n              delete node.specifiers;\n            }\n\n            break;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseSubscript\",\n      value: function parseSubscript(base, startPos, startLoc, noCalls, state) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseSubscript\", this).call(this, base, startPos, startLoc, noCalls, state);\n\n        if (state.optionalChainMember) {\n          if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n            node.type = node.type.substring(8);\n          }\n\n          if (state.stop) {\n            var chain = this.startNodeAtNode(node);\n            chain.expression = node;\n            return this.finishNode(chain, \"ChainExpression\");\n          }\n        } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n          node.optional = false;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"hasPropertyAsPrivateName\",\n      value: function hasPropertyAsPrivateName(node) {\n        if (node.type === \"ChainExpression\") {\n          node = node.expression;\n        }\n\n        return _get(_getPrototypeOf(_class.prototype), \"hasPropertyAsPrivateName\", this).call(this, node);\n      }\n    }, {\n      key: \"isOptionalChain\",\n      value: function isOptionalChain(node) {\n        return node.type === \"ChainExpression\";\n      }\n    }, {\n      key: \"isObjectProperty\",\n      value: function isObjectProperty(node) {\n        return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n      }\n    }, {\n      key: \"isObjectMethod\",\n      value: function isObjectMethod(node) {\n        return node.method || node.kind === \"get\" || node.kind === \"set\";\n      }\n    }]);\n\n    return _class;\n  }(superClass);\n};\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override) {\n  _classCallCheck(this, TokContext);\n\n  this.token = void 0;\n  this.isExpr = void 0;\n  this.preserveSpace = void 0;\n  this.override = void 0;\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n};\n\nvar types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, function (p) {\n    return p.readTmplToken();\n  }),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  var out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  var allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nvar nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nvar nonASCIIidentifierChars = \"\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF\\u1AC0\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n\n  for (var i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nvar reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nvar keywords$1 = new Set(reservedWords.keyword);\nvar reservedWordsStrictSet = new Set(reservedWords.strict);\nvar reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\n\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\n\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\n\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nvar SCOPE_OTHER = 0,\n    SCOPE_PROGRAM = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ARROW = 4,\n    SCOPE_SIMPLE_CATCH = 8,\n    SCOPE_SUPER = 16,\n    SCOPE_DIRECT_SUPER = 32,\n    SCOPE_CLASS = 64,\n    SCOPE_STATIC_BLOCK = 128,\n    SCOPE_TS_MODULE = 256,\n    SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nvar BIND_KIND_VALUE = 1,\n    BIND_KIND_TYPE = 2,\n    BIND_SCOPE_VAR = 4,\n    BIND_SCOPE_LEXICAL = 8,\n    BIND_SCOPE_FUNCTION = 16,\n    BIND_FLAGS_NONE = 64,\n    BIND_FLAGS_CLASS = 128,\n    BIND_FLAGS_TS_ENUM = 256,\n    BIND_FLAGS_TS_CONST_ENUM = 512,\n    BIND_FLAGS_TS_EXPORT_ONLY = 1024,\n    BIND_FLAGS_FLOW_DECLARE_FN = 2048;\nvar BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n    BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n    BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n    BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n    BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n    BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n    BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n    BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n    BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n    BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n    BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n    BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n    BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nvar CLASS_ELEMENT_FLAG_STATIC = 4,\n    CLASS_ELEMENT_KIND_GETTER = 2,\n    CLASS_ELEMENT_KIND_SETTER = 1,\n    CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nvar CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n    CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n    CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n    CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n    CLASS_ELEMENT_OTHER = 0;\n\nvar Scope = function Scope(flags) {\n  _classCallCheck(this, Scope);\n\n  this.flags = void 0;\n  this.var = [];\n  this.lexical = [];\n  this.functions = [];\n  this.flags = flags;\n};\n\nvar ScopeHandler = /*#__PURE__*/function () {\n  function ScopeHandler(raise, inModule) {\n    _classCallCheck(this, ScopeHandler);\n\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  _createClass(ScopeHandler, [{\n    key: \"createScope\",\n    value: function createScope(flags) {\n      return new Scope(flags);\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(flags) {\n      this.scopeStack.push(this.createScope(flags));\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      this.scopeStack.pop();\n    }\n  }, {\n    key: \"treatFunctionsAsVarInScope\",\n    value: function treatFunctionsAsVarInScope(scope) {\n      return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n    }\n  }, {\n    key: \"declareName\",\n    value: function declareName(name, bindingType, pos) {\n      var scope = this.currentScope();\n\n      if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n        if (bindingType & BIND_SCOPE_FUNCTION) {\n          scope.functions.push(name);\n        } else {\n          scope.lexical.push(name);\n        }\n\n        if (bindingType & BIND_SCOPE_LEXICAL) {\n          this.maybeExportDefined(scope, name);\n        }\n      } else if (bindingType & BIND_SCOPE_VAR) {\n        for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n          scope = this.scopeStack[i];\n          this.checkRedeclarationInScope(scope, name, bindingType, pos);\n          scope.var.push(name);\n          this.maybeExportDefined(scope, name);\n          if (scope.flags & SCOPE_VAR) break;\n        }\n      }\n\n      if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n        this.undefinedExports.delete(name);\n      }\n    }\n  }, {\n    key: \"maybeExportDefined\",\n    value: function maybeExportDefined(scope, name) {\n      if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n        this.undefinedExports.delete(name);\n      }\n    }\n  }, {\n    key: \"checkRedeclarationInScope\",\n    value: function checkRedeclarationInScope(scope, name, bindingType, pos) {\n      if (this.isRedeclaredInScope(scope, name, bindingType)) {\n        this.raise(pos, ErrorMessages.VarRedeclaration, name);\n      }\n    }\n  }, {\n    key: \"isRedeclaredInScope\",\n    value: function isRedeclaredInScope(scope, name, bindingType) {\n      if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      }\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n      }\n\n      return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n    }\n  }, {\n    key: \"checkLocalExport\",\n    value: function checkLocalExport(id) {\n      if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n        this.undefinedExports.set(id.name, id.start);\n      }\n    }\n  }, {\n    key: \"currentScope\",\n    value: function currentScope() {\n      return this.scopeStack[this.scopeStack.length - 1];\n    }\n  }, {\n    key: \"currentVarScope\",\n    value: function currentVarScope() {\n      for (var i = this.scopeStack.length - 1;; i--) {\n        var scope = this.scopeStack[i];\n\n        if (scope.flags & SCOPE_VAR) {\n          return scope;\n        }\n      }\n    }\n  }, {\n    key: \"currentThisScope\",\n    value: function currentThisScope() {\n      for (var i = this.scopeStack.length - 1;; i--) {\n        var scope = this.scopeStack[i];\n\n        if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n          return scope;\n        }\n      }\n    }\n  }, {\n    key: \"inFunction\",\n    get: function get() {\n      return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n    }\n  }, {\n    key: \"allowSuper\",\n    get: function get() {\n      return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n    }\n  }, {\n    key: \"allowDirectSuper\",\n    get: function get() {\n      return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n    }\n  }, {\n    key: \"inClass\",\n    get: function get() {\n      return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n    }\n  }, {\n    key: \"inStaticBlock\",\n    get: function get() {\n      return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n    }\n  }, {\n    key: \"inNonArrowFunction\",\n    get: function get() {\n      return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n    }\n  }, {\n    key: \"treatFunctionsAsVar\",\n    get: function get() {\n      return this.treatFunctionsAsVarInScope(this.currentScope());\n    }\n  }]);\n\n  return ScopeHandler;\n}();\n\nvar FlowScope = /*#__PURE__*/function (_Scope) {\n  _inherits(FlowScope, _Scope);\n\n  var _super4 = _createSuper(FlowScope);\n\n  function FlowScope() {\n    var _this3;\n\n    _classCallCheck(this, FlowScope);\n\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    _this3 = _super4.call.apply(_super4, [this].concat(args));\n    _this3.declareFunctions = [];\n    return _this3;\n  }\n\n  return FlowScope;\n}(Scope);\n\nvar FlowScopeHandler = /*#__PURE__*/function (_ScopeHandler) {\n  _inherits(FlowScopeHandler, _ScopeHandler);\n\n  var _super5 = _createSuper(FlowScopeHandler);\n\n  function FlowScopeHandler() {\n    _classCallCheck(this, FlowScopeHandler);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(FlowScopeHandler, [{\n    key: \"createScope\",\n    value: function createScope(flags) {\n      return new FlowScope(flags);\n    }\n  }, {\n    key: \"declareName\",\n    value: function declareName(name, bindingType, pos) {\n      var scope = this.currentScope();\n\n      if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n        scope.declareFunctions.push(name);\n        return;\n      }\n\n      _get(_getPrototypeOf(FlowScopeHandler.prototype), \"declareName\", this).apply(this, arguments);\n    }\n  }, {\n    key: \"isRedeclaredInScope\",\n    value: function isRedeclaredInScope(scope, name, bindingType) {\n      if (_get(_getPrototypeOf(FlowScopeHandler.prototype), \"isRedeclaredInScope\", this).apply(this, arguments)) return true;\n\n      if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n        return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));\n      }\n\n      return false;\n    }\n  }, {\n    key: \"checkLocalExport\",\n    value: function checkLocalExport(id) {\n      if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n        _get(_getPrototypeOf(FlowScopeHandler.prototype), \"checkLocalExport\", this).call(this, id);\n      }\n    }\n  }]);\n\n  return FlowScopeHandler;\n}(ScopeHandler);\n\nvar reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nvar FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nvar exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  var list1 = [];\n  var list2 = [];\n\n  for (var i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nvar FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\nvar flow = function flow(superClass) {\n  var _temp;\n\n  return _temp = /*#__PURE__*/function (_superClass2) {\n    _inherits(_temp, _superClass2);\n\n    var _super6 = _createSuper(_temp);\n\n    function _temp() {\n      var _this4;\n\n      _classCallCheck(this, _temp);\n\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      _this4 = _super6.call.apply(_super6, [this].concat(args));\n      _this4.flowPragma = undefined;\n      return _this4;\n    }\n\n    _createClass(_temp, [{\n      key: \"getScopeHandler\",\n      value: function getScopeHandler() {\n        return FlowScopeHandler;\n      }\n    }, {\n      key: \"shouldParseTypes\",\n      value: function shouldParseTypes() {\n        return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n      }\n    }, {\n      key: \"shouldParseEnums\",\n      value: function shouldParseEnums() {\n        return !!this.getPluginOption(\"flow\", \"enums\");\n      }\n    }, {\n      key: \"finishToken\",\n      value: function finishToken(type, val) {\n        if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n          if (this.flowPragma === undefined) {\n            this.flowPragma = null;\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"finishToken\", this).call(this, type, val);\n      }\n    }, {\n      key: \"addComment\",\n      value: function addComment(comment) {\n        if (this.flowPragma === undefined) {\n          var matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n          if (!matches) ;else if (matches[1] === \"flow\") {\n            this.flowPragma = \"flow\";\n          } else if (matches[1] === \"noflow\") {\n            this.flowPragma = \"noflow\";\n          } else {\n            throw new Error(\"Unexpected flow pragma\");\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"addComment\", this).call(this, comment);\n      }\n    }, {\n      key: \"flowParseTypeInitialiser\",\n      value: function flowParseTypeInitialiser(tok) {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        this.expect(tok || types.colon);\n        var type = this.flowParseType();\n        this.state.inType = oldInType;\n        return type;\n      }\n    }, {\n      key: \"flowParsePredicate\",\n      value: function flowParsePredicate() {\n        var node = this.startNode();\n        var moduloLoc = this.state.startLoc;\n        var moduloPos = this.state.start;\n        this.expect(types.modulo);\n        var checksLoc = this.state.startLoc;\n        this.expectContextual(\"checks\");\n\n        if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n          this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n        }\n\n        if (this.eat(types.parenL)) {\n          node.value = this.parseExpression();\n          this.expect(types.parenR);\n          return this.finishNode(node, \"DeclaredPredicate\");\n        } else {\n          return this.finishNode(node, \"InferredPredicate\");\n        }\n      }\n    }, {\n      key: \"flowParseTypeAndPredicateInitialiser\",\n      value: function flowParseTypeAndPredicateInitialiser() {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        this.expect(types.colon);\n        var type = null;\n        var predicate = null;\n\n        if (this.match(types.modulo)) {\n          this.state.inType = oldInType;\n          predicate = this.flowParsePredicate();\n        } else {\n          type = this.flowParseType();\n          this.state.inType = oldInType;\n\n          if (this.match(types.modulo)) {\n            predicate = this.flowParsePredicate();\n          }\n        }\n\n        return [type, predicate];\n      }\n    }, {\n      key: \"flowParseDeclareClass\",\n      value: function flowParseDeclareClass(node) {\n        this.next();\n        this.flowParseInterfaceish(node, true);\n        return this.finishNode(node, \"DeclareClass\");\n      }\n    }, {\n      key: \"flowParseDeclareFunction\",\n      value: function flowParseDeclareFunction(node) {\n        this.next();\n        var id = node.id = this.parseIdentifier();\n        var typeNode = this.startNode();\n        var typeContainer = this.startNode();\n\n        if (this.isRelational(\"<\")) {\n          typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          typeNode.typeParameters = null;\n        }\n\n        this.expect(types.parenL);\n        var tmp = this.flowParseFunctionTypeParams();\n        typeNode.params = tmp.params;\n        typeNode.rest = tmp.rest;\n        typeNode.this = tmp._this;\n        this.expect(types.parenR);\n\n        var _this$flowParseTypeAn = this.flowParseTypeAndPredicateInitialiser();\n\n        var _this$flowParseTypeAn2 = _slicedToArray(_this$flowParseTypeAn, 2);\n\n        typeNode.returnType = _this$flowParseTypeAn2[0];\n        node.predicate = _this$flowParseTypeAn2[1];\n        typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n        id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n        this.resetEndLocation(id);\n        this.semicolon();\n        this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n        return this.finishNode(node, \"DeclareFunction\");\n      }\n    }, {\n      key: \"flowParseDeclare\",\n      value: function flowParseDeclare(node, insideModule) {\n        if (this.match(types._class)) {\n          return this.flowParseDeclareClass(node);\n        } else if (this.match(types._function)) {\n          return this.flowParseDeclareFunction(node);\n        } else if (this.match(types._var)) {\n          return this.flowParseDeclareVariable(node);\n        } else if (this.eatContextual(\"module\")) {\n          if (this.match(types.dot)) {\n            return this.flowParseDeclareModuleExports(node);\n          } else {\n            if (insideModule) {\n              this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n            }\n\n            return this.flowParseDeclareModule(node);\n          }\n        } else if (this.isContextual(\"type\")) {\n          return this.flowParseDeclareTypeAlias(node);\n        } else if (this.isContextual(\"opaque\")) {\n          return this.flowParseDeclareOpaqueType(node);\n        } else if (this.isContextual(\"interface\")) {\n          return this.flowParseDeclareInterface(node);\n        } else if (this.match(types._export)) {\n          return this.flowParseDeclareExportDeclaration(node, insideModule);\n        } else {\n          throw this.unexpected();\n        }\n      }\n    }, {\n      key: \"flowParseDeclareVariable\",\n      value: function flowParseDeclareVariable(node) {\n        this.next();\n        node.id = this.flowParseTypeAnnotatableIdentifier(true);\n        this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n        this.semicolon();\n        return this.finishNode(node, \"DeclareVariable\");\n      }\n    }, {\n      key: \"flowParseDeclareModule\",\n      value: function flowParseDeclareModule(node) {\n        var _this5 = this;\n\n        this.scope.enter(SCOPE_OTHER);\n\n        if (this.match(types.string)) {\n          node.id = this.parseExprAtom();\n        } else {\n          node.id = this.parseIdentifier();\n        }\n\n        var bodyNode = node.body = this.startNode();\n        var body = bodyNode.body = [];\n        this.expect(types.braceL);\n\n        while (!this.match(types.braceR)) {\n          var _bodyNode = this.startNode();\n\n          if (this.match(types._import)) {\n            this.next();\n\n            if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n              this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n            }\n\n            this.parseImport(_bodyNode);\n          } else {\n            this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n            _bodyNode = this.flowParseDeclare(_bodyNode, true);\n          }\n\n          body.push(_bodyNode);\n        }\n\n        this.scope.exit();\n        this.expect(types.braceR);\n        this.finishNode(bodyNode, \"BlockStatement\");\n        var kind = null;\n        var hasModuleExport = false;\n        body.forEach(function (bodyElement) {\n          if (isEsModuleType(bodyElement)) {\n            if (kind === \"CommonJS\") {\n              _this5.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n            }\n\n            kind = \"ES\";\n          } else if (bodyElement.type === \"DeclareModuleExports\") {\n            if (hasModuleExport) {\n              _this5.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n            }\n\n            if (kind === \"ES\") {\n              _this5.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n            }\n\n            kind = \"CommonJS\";\n            hasModuleExport = true;\n          }\n        });\n        node.kind = kind || \"CommonJS\";\n        return this.finishNode(node, \"DeclareModule\");\n      }\n    }, {\n      key: \"flowParseDeclareExportDeclaration\",\n      value: function flowParseDeclareExportDeclaration(node, insideModule) {\n        this.expect(types._export);\n\n        if (this.eat(types._default)) {\n          if (this.match(types._function) || this.match(types._class)) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n          } else {\n            node.declaration = this.flowParseType();\n            this.semicolon();\n          }\n\n          node.default = true;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else {\n          if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n            var label = this.state.value;\n            var suggestion = exportSuggestions[label];\n            throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n          }\n\n          if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n        }\n\n        throw this.unexpected();\n      }\n    }, {\n      key: \"flowParseDeclareModuleExports\",\n      value: function flowParseDeclareModuleExports(node) {\n        this.next();\n        this.expectContextual(\"exports\");\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n        this.semicolon();\n        return this.finishNode(node, \"DeclareModuleExports\");\n      }\n    }, {\n      key: \"flowParseDeclareTypeAlias\",\n      value: function flowParseDeclareTypeAlias(node) {\n        this.next();\n        this.flowParseTypeAlias(node);\n        node.type = \"DeclareTypeAlias\";\n        return node;\n      }\n    }, {\n      key: \"flowParseDeclareOpaqueType\",\n      value: function flowParseDeclareOpaqueType(node) {\n        this.next();\n        this.flowParseOpaqueType(node, true);\n        node.type = \"DeclareOpaqueType\";\n        return node;\n      }\n    }, {\n      key: \"flowParseDeclareInterface\",\n      value: function flowParseDeclareInterface(node) {\n        this.next();\n        this.flowParseInterfaceish(node);\n        return this.finishNode(node, \"DeclareInterface\");\n      }\n    }, {\n      key: \"flowParseInterfaceish\",\n      value: function flowParseInterfaceish(node) {\n        var isClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n        this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          node.typeParameters = null;\n        }\n\n        node.extends = [];\n        node.implements = [];\n        node.mixins = [];\n\n        if (this.eat(types._extends)) {\n          do {\n            node.extends.push(this.flowParseInterfaceExtends());\n          } while (!isClass && this.eat(types.comma));\n        }\n\n        if (this.isContextual(\"mixins\")) {\n          this.next();\n\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(types.comma));\n        }\n\n        if (this.isContextual(\"implements\")) {\n          this.next();\n\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(types.comma));\n        }\n\n        node.body = this.flowParseObjectType({\n          allowStatic: isClass,\n          allowExact: false,\n          allowSpread: false,\n          allowProto: isClass,\n          allowInexact: false\n        });\n      }\n    }, {\n      key: \"flowParseInterfaceExtends\",\n      value: function flowParseInterfaceExtends() {\n        var node = this.startNode();\n        node.id = this.flowParseQualifiedTypeIdentifier();\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        return this.finishNode(node, \"InterfaceExtends\");\n      }\n    }, {\n      key: \"flowParseInterface\",\n      value: function flowParseInterface(node) {\n        this.flowParseInterfaceish(node);\n        return this.finishNode(node, \"InterfaceDeclaration\");\n      }\n    }, {\n      key: \"checkNotUnderscore\",\n      value: function checkNotUnderscore(word) {\n        if (word === \"_\") {\n          this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n        }\n      }\n    }, {\n      key: \"checkReservedType\",\n      value: function checkReservedType(word, startLoc, declaration) {\n        if (!reservedTypes.has(word)) return;\n        this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n      }\n    }, {\n      key: \"flowParseRestrictedIdentifier\",\n      value: function flowParseRestrictedIdentifier(liberal, declaration) {\n        this.checkReservedType(this.state.value, this.state.start, declaration);\n        return this.parseIdentifier(liberal);\n      }\n    }, {\n      key: \"flowParseTypeAlias\",\n      value: function flowParseTypeAlias(node) {\n        node.id = this.flowParseRestrictedIdentifier(false, true);\n        this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          node.typeParameters = null;\n        }\n\n        node.right = this.flowParseTypeInitialiser(types.eq);\n        this.semicolon();\n        return this.finishNode(node, \"TypeAlias\");\n      }\n    }, {\n      key: \"flowParseOpaqueType\",\n      value: function flowParseOpaqueType(node, declare) {\n        this.expectContextual(\"type\");\n        node.id = this.flowParseRestrictedIdentifier(true, true);\n        this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          node.typeParameters = null;\n        }\n\n        node.supertype = null;\n\n        if (this.match(types.colon)) {\n          node.supertype = this.flowParseTypeInitialiser(types.colon);\n        }\n\n        node.impltype = null;\n\n        if (!declare) {\n          node.impltype = this.flowParseTypeInitialiser(types.eq);\n        }\n\n        this.semicolon();\n        return this.finishNode(node, \"OpaqueType\");\n      }\n    }, {\n      key: \"flowParseTypeParameter\",\n      value: function flowParseTypeParameter() {\n        var requireDefault = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var nodeStart = this.state.start;\n        var node = this.startNode();\n        var variance = this.flowParseVariance();\n        var ident = this.flowParseTypeAnnotatableIdentifier();\n        node.name = ident.name;\n        node.variance = variance;\n        node.bound = ident.typeAnnotation;\n\n        if (this.match(types.eq)) {\n          this.eat(types.eq);\n          node.default = this.flowParseType();\n        } else {\n          if (requireDefault) {\n            this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n          }\n        }\n\n        return this.finishNode(node, \"TypeParameter\");\n      }\n    }, {\n      key: \"flowParseTypeParameterDeclaration\",\n      value: function flowParseTypeParameterDeclaration() {\n        var oldInType = this.state.inType;\n        var node = this.startNode();\n        node.params = [];\n        this.state.inType = true;\n\n        if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n          this.next();\n        } else {\n          this.unexpected();\n        }\n\n        var defaultRequired = false;\n\n        do {\n          var typeParameter = this.flowParseTypeParameter(defaultRequired);\n          node.params.push(typeParameter);\n\n          if (typeParameter.default) {\n            defaultRequired = true;\n          }\n\n          if (!this.isRelational(\">\")) {\n            this.expect(types.comma);\n          }\n        } while (!this.isRelational(\">\"));\n\n        this.expectRelational(\">\");\n        this.state.inType = oldInType;\n        return this.finishNode(node, \"TypeParameterDeclaration\");\n      }\n    }, {\n      key: \"flowParseTypeParameterInstantiation\",\n      value: function flowParseTypeParameterInstantiation() {\n        var node = this.startNode();\n        var oldInType = this.state.inType;\n        node.params = [];\n        this.state.inType = true;\n        this.expectRelational(\"<\");\n        var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = false;\n\n        while (!this.isRelational(\">\")) {\n          node.params.push(this.flowParseType());\n\n          if (!this.isRelational(\">\")) {\n            this.expect(types.comma);\n          }\n        }\n\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        this.expectRelational(\">\");\n        this.state.inType = oldInType;\n        return this.finishNode(node, \"TypeParameterInstantiation\");\n      }\n    }, {\n      key: \"flowParseTypeParameterInstantiationCallOrNew\",\n      value: function flowParseTypeParameterInstantiationCallOrNew() {\n        var node = this.startNode();\n        var oldInType = this.state.inType;\n        node.params = [];\n        this.state.inType = true;\n        this.expectRelational(\"<\");\n\n        while (!this.isRelational(\">\")) {\n          node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n          if (!this.isRelational(\">\")) {\n            this.expect(types.comma);\n          }\n        }\n\n        this.expectRelational(\">\");\n        this.state.inType = oldInType;\n        return this.finishNode(node, \"TypeParameterInstantiation\");\n      }\n    }, {\n      key: \"flowParseInterfaceType\",\n      value: function flowParseInterfaceType() {\n        var node = this.startNode();\n        this.expectContextual(\"interface\");\n        node.extends = [];\n\n        if (this.eat(types._extends)) {\n          do {\n            node.extends.push(this.flowParseInterfaceExtends());\n          } while (this.eat(types.comma));\n        }\n\n        node.body = this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: false,\n          allowProto: false,\n          allowInexact: false\n        });\n        return this.finishNode(node, \"InterfaceTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseObjectPropertyKey\",\n      value: function flowParseObjectPropertyKey() {\n        return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n      }\n    }, {\n      key: \"flowParseObjectTypeIndexer\",\n      value: function flowParseObjectTypeIndexer(node, isStatic, variance) {\n        node.static = isStatic;\n\n        if (this.lookahead().type === types.colon) {\n          node.id = this.flowParseObjectPropertyKey();\n          node.key = this.flowParseTypeInitialiser();\n        } else {\n          node.id = null;\n          node.key = this.flowParseType();\n        }\n\n        this.expect(types.bracketR);\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n        return this.finishNode(node, \"ObjectTypeIndexer\");\n      }\n    }, {\n      key: \"flowParseObjectTypeInternalSlot\",\n      value: function flowParseObjectTypeInternalSlot(node, isStatic) {\n        node.static = isStatic;\n        node.id = this.flowParseObjectPropertyKey();\n        this.expect(types.bracketR);\n        this.expect(types.bracketR);\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n          node.optional = false;\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n        } else {\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            node.optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n        }\n\n        return this.finishNode(node, \"ObjectTypeInternalSlot\");\n      }\n    }, {\n      key: \"flowParseObjectTypeMethodish\",\n      value: function flowParseObjectTypeMethodish(node) {\n        node.params = [];\n        node.rest = null;\n        node.typeParameters = null;\n        node.this = null;\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        this.expect(types.parenL);\n\n        if (this.match(types._this)) {\n          node.this = this.flowParseFunctionTypeParam(true);\n          node.this.name = null;\n\n          if (!this.match(types.parenR)) {\n            this.expect(types.comma);\n          }\n        }\n\n        while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n          node.params.push(this.flowParseFunctionTypeParam(false));\n\n          if (!this.match(types.parenR)) {\n            this.expect(types.comma);\n          }\n        }\n\n        if (this.eat(types.ellipsis)) {\n          node.rest = this.flowParseFunctionTypeParam(false);\n        }\n\n        this.expect(types.parenR);\n        node.returnType = this.flowParseTypeInitialiser();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseObjectTypeCallProperty\",\n      value: function flowParseObjectTypeCallProperty(node, isStatic) {\n        var valueNode = this.startNode();\n        node.static = isStatic;\n        node.value = this.flowParseObjectTypeMethodish(valueNode);\n        return this.finishNode(node, \"ObjectTypeCallProperty\");\n      }\n    }, {\n      key: \"flowParseObjectType\",\n      value: function flowParseObjectType(_ref2) {\n        var allowStatic = _ref2.allowStatic,\n            allowExact = _ref2.allowExact,\n            allowSpread = _ref2.allowSpread,\n            allowProto = _ref2.allowProto,\n            allowInexact = _ref2.allowInexact;\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        var nodeStart = this.startNode();\n        nodeStart.callProperties = [];\n        nodeStart.properties = [];\n        nodeStart.indexers = [];\n        nodeStart.internalSlots = [];\n        var endDelim;\n        var exact;\n        var inexact = false;\n\n        if (allowExact && this.match(types.braceBarL)) {\n          this.expect(types.braceBarL);\n          endDelim = types.braceBarR;\n          exact = true;\n        } else {\n          this.expect(types.braceL);\n          endDelim = types.braceR;\n          exact = false;\n        }\n\n        nodeStart.exact = exact;\n\n        while (!this.match(endDelim)) {\n          var isStatic = false;\n          var protoStart = null;\n          var inexactStart = null;\n          var node = this.startNode();\n\n          if (allowProto && this.isContextual(\"proto\")) {\n            var lookahead = this.lookahead();\n\n            if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n              this.next();\n              protoStart = this.state.start;\n              allowStatic = false;\n            }\n          }\n\n          if (allowStatic && this.isContextual(\"static\")) {\n            var _lookahead = this.lookahead();\n\n            if (_lookahead.type !== types.colon && _lookahead.type !== types.question) {\n              this.next();\n              isStatic = true;\n            }\n          }\n\n          var variance = this.flowParseVariance();\n\n          if (this.eat(types.bracketL)) {\n            if (protoStart != null) {\n              this.unexpected(protoStart);\n            }\n\n            if (this.eat(types.bracketL)) {\n              if (variance) {\n                this.unexpected(variance.start);\n              }\n\n              nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n            } else {\n              nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n            }\n          } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n            if (protoStart != null) {\n              this.unexpected(protoStart);\n            }\n\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n          } else {\n            var kind = \"init\";\n\n            if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n              var _lookahead2 = this.lookahead();\n\n              if (_lookahead2.type === types.name || _lookahead2.type === types.string || _lookahead2.type === types.num) {\n                kind = this.state.value;\n                this.next();\n              }\n            }\n\n            var propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n            if (propOrInexact === null) {\n              inexact = true;\n              inexactStart = this.state.lastTokStart;\n            } else {\n              nodeStart.properties.push(propOrInexact);\n            }\n          }\n\n          this.flowObjectTypeSemicolon();\n\n          if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n            this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n          }\n        }\n\n        this.expect(endDelim);\n\n        if (allowSpread) {\n          nodeStart.inexact = inexact;\n        }\n\n        var out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n        this.state.inType = oldInType;\n        return out;\n      }\n    }, {\n      key: \"flowParseObjectTypeProperty\",\n      value: function flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n        if (this.eat(types.ellipsis)) {\n          var isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n          if (isInexactToken) {\n            if (!allowSpread) {\n              this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n            } else if (!allowInexact) {\n              this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n            }\n\n            if (variance) {\n              this.raise(variance.start, FlowErrors.InexactVariance);\n            }\n\n            return null;\n          }\n\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n          }\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.SpreadVariance);\n          }\n\n          node.argument = this.flowParseType();\n          return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n        } else {\n          node.key = this.flowParseObjectPropertyKey();\n          node.static = isStatic;\n          node.proto = protoStart != null;\n          node.kind = kind;\n          var optional = false;\n\n          if (this.isRelational(\"<\") || this.match(types.parenL)) {\n            node.method = true;\n\n            if (protoStart != null) {\n              this.unexpected(protoStart);\n            }\n\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n            if (kind === \"get\" || kind === \"set\") {\n              this.flowCheckGetterSetterParams(node);\n            }\n\n            if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n              this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n            }\n          } else {\n            if (kind !== \"init\") this.unexpected();\n            node.method = false;\n\n            if (this.eat(types.question)) {\n              optional = true;\n            }\n\n            node.value = this.flowParseTypeInitialiser();\n            node.variance = variance;\n          }\n\n          node.optional = optional;\n          return this.finishNode(node, \"ObjectTypeProperty\");\n        }\n      }\n    }, {\n      key: \"flowCheckGetterSetterParams\",\n      value: function flowCheckGetterSetterParams(property) {\n        var paramCount = property.kind === \"get\" ? 0 : 1;\n        var start = property.start;\n        var length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n        if (property.value.this) {\n          this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n        }\n\n        if (length !== paramCount) {\n          if (property.kind === \"get\") {\n            this.raise(start, ErrorMessages.BadGetterArity);\n          } else {\n            this.raise(start, ErrorMessages.BadSetterArity);\n          }\n        }\n\n        if (property.kind === \"set\" && property.value.rest) {\n          this.raise(start, ErrorMessages.BadSetterRestParameter);\n        }\n      }\n    }, {\n      key: \"flowObjectTypeSemicolon\",\n      value: function flowObjectTypeSemicolon() {\n        if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.unexpected();\n        }\n      }\n    }, {\n      key: \"flowParseQualifiedTypeIdentifier\",\n      value: function flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n        startPos = startPos || this.state.start;\n        startLoc = startLoc || this.state.startLoc;\n        var node = id || this.flowParseRestrictedIdentifier(true);\n\n        while (this.eat(types.dot)) {\n          var node2 = this.startNodeAt(startPos, startLoc);\n          node2.qualification = node;\n          node2.id = this.flowParseRestrictedIdentifier(true);\n          node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"flowParseGenericType\",\n      value: function flowParseGenericType(startPos, startLoc, id) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.typeParameters = null;\n        node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        }\n\n        return this.finishNode(node, \"GenericTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseTypeofType\",\n      value: function flowParseTypeofType() {\n        var node = this.startNode();\n        this.expect(types._typeof);\n        node.argument = this.flowParsePrimaryType();\n        return this.finishNode(node, \"TypeofTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseTupleType\",\n      value: function flowParseTupleType() {\n        var node = this.startNode();\n        node.types = [];\n        this.expect(types.bracketL);\n\n        while (this.state.pos < this.length && !this.match(types.bracketR)) {\n          node.types.push(this.flowParseType());\n          if (this.match(types.bracketR)) break;\n          this.expect(types.comma);\n        }\n\n        this.expect(types.bracketR);\n        return this.finishNode(node, \"TupleTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseFunctionTypeParam\",\n      value: function flowParseFunctionTypeParam(first) {\n        var name = null;\n        var optional = false;\n        var typeAnnotation = null;\n        var node = this.startNode();\n        var lh = this.lookahead();\n        var isThis = this.state.type === types._this;\n\n        if (lh.type === types.colon || lh.type === types.question) {\n          if (isThis && !first) {\n            this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n          }\n\n          name = this.parseIdentifier(isThis);\n\n          if (this.eat(types.question)) {\n            optional = true;\n\n            if (isThis) {\n              this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n            }\n          }\n\n          typeAnnotation = this.flowParseTypeInitialiser();\n        } else {\n          typeAnnotation = this.flowParseType();\n        }\n\n        node.name = name;\n        node.optional = optional;\n        node.typeAnnotation = typeAnnotation;\n        return this.finishNode(node, \"FunctionTypeParam\");\n      }\n    }, {\n      key: \"reinterpretTypeAsFunctionTypeParam\",\n      value: function reinterpretTypeAsFunctionTypeParam(type) {\n        var node = this.startNodeAt(type.start, type.loc.start);\n        node.name = null;\n        node.optional = false;\n        node.typeAnnotation = type;\n        return this.finishNode(node, \"FunctionTypeParam\");\n      }\n    }, {\n      key: \"flowParseFunctionTypeParams\",\n      value: function flowParseFunctionTypeParams() {\n        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var rest = null;\n        var _this = null;\n\n        if (this.match(types._this)) {\n          _this = this.flowParseFunctionTypeParam(true);\n          _this.name = null;\n\n          if (!this.match(types.parenR)) {\n            this.expect(types.comma);\n          }\n        }\n\n        while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n          params.push(this.flowParseFunctionTypeParam(false));\n\n          if (!this.match(types.parenR)) {\n            this.expect(types.comma);\n          }\n        }\n\n        if (this.eat(types.ellipsis)) {\n          rest = this.flowParseFunctionTypeParam(false);\n        }\n\n        return {\n          params: params,\n          rest: rest,\n          _this: _this\n        };\n      }\n    }, {\n      key: \"flowIdentToTypeAnnotation\",\n      value: function flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n        switch (id.name) {\n          case \"any\":\n            return this.finishNode(node, \"AnyTypeAnnotation\");\n\n          case \"bool\":\n          case \"boolean\":\n            return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n          case \"mixed\":\n            return this.finishNode(node, \"MixedTypeAnnotation\");\n\n          case \"empty\":\n            return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n          case \"number\":\n            return this.finishNode(node, \"NumberTypeAnnotation\");\n\n          case \"string\":\n            return this.finishNode(node, \"StringTypeAnnotation\");\n\n          case \"symbol\":\n            return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n          default:\n            this.checkNotUnderscore(id.name);\n            return this.flowParseGenericType(startPos, startLoc, id);\n        }\n      }\n    }, {\n      key: \"flowParsePrimaryType\",\n      value: function flowParsePrimaryType() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var node = this.startNode();\n        var tmp;\n        var type;\n        var isGroupedType = false;\n        var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n        switch (this.state.type) {\n          case types.name:\n            if (this.isContextual(\"interface\")) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n          case types.braceL:\n            return this.flowParseObjectType({\n              allowStatic: false,\n              allowExact: false,\n              allowSpread: true,\n              allowProto: false,\n              allowInexact: true\n            });\n\n          case types.braceBarL:\n            return this.flowParseObjectType({\n              allowStatic: false,\n              allowExact: true,\n              allowSpread: true,\n              allowProto: false,\n              allowInexact: false\n            });\n\n          case types.bracketL:\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseTupleType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n            return type;\n\n          case types.relational:\n            if (this.state.value === \"<\") {\n              node.typeParameters = this.flowParseTypeParameterDeclaration();\n              this.expect(types.parenL);\n              tmp = this.flowParseFunctionTypeParams();\n              node.params = tmp.params;\n              node.rest = tmp.rest;\n              node.this = tmp._this;\n              this.expect(types.parenR);\n              this.expect(types.arrow);\n              node.returnType = this.flowParseType();\n              return this.finishNode(node, \"FunctionTypeAnnotation\");\n            }\n\n            break;\n\n          case types.parenL:\n            this.next();\n\n            if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n              if (this.match(types.name) || this.match(types._this)) {\n                var token = this.lookahead().type;\n                isGroupedType = token !== types.question && token !== types.colon;\n              } else {\n                isGroupedType = true;\n              }\n            }\n\n            if (isGroupedType) {\n              this.state.noAnonFunctionType = false;\n              type = this.flowParseType();\n              this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n              if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n                this.expect(types.parenR);\n                return type;\n              } else {\n                this.eat(types.comma);\n              }\n            }\n\n            if (type) {\n              tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n            } else {\n              tmp = this.flowParseFunctionTypeParams();\n            }\n\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            node.typeParameters = null;\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n          case types.string:\n            return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n          case types._true:\n          case types._false:\n            node.value = this.match(types._true);\n            this.next();\n            return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n          case types.plusMin:\n            if (this.state.value === \"-\") {\n              this.next();\n\n              if (this.match(types.num)) {\n                return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n              }\n\n              if (this.match(types.bigint)) {\n                return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n              }\n\n              throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n            }\n\n            throw this.unexpected();\n\n          case types.num:\n            return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n          case types.bigint:\n            return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n          case types._void:\n            this.next();\n            return this.finishNode(node, \"VoidTypeAnnotation\");\n\n          case types._null:\n            this.next();\n            return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n          case types._this:\n            this.next();\n            return this.finishNode(node, \"ThisTypeAnnotation\");\n\n          case types.star:\n            this.next();\n            return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n          default:\n            if (this.state.type.keyword === \"typeof\") {\n              return this.flowParseTypeofType();\n            } else if (this.state.type.keyword) {\n              var label = this.state.type.label;\n              this.next();\n              return _get(_getPrototypeOf(_temp.prototype), \"createIdentifier\", this).call(this, node, label);\n            }\n\n        }\n\n        throw this.unexpected();\n      }\n    }, {\n      key: \"flowParsePostfixType\",\n      value: function flowParsePostfixType() {\n        var startPos = this.state.start,\n            startLoc = this.state.startLoc;\n        var type = this.flowParsePrimaryType();\n\n        while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n          var node = this.startNodeAt(startPos, startLoc);\n          node.elementType = type;\n          this.expect(types.bracketL);\n          this.expect(types.bracketR);\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        }\n\n        return type;\n      }\n    }, {\n      key: \"flowParsePrefixType\",\n      value: function flowParsePrefixType() {\n        var node = this.startNode();\n\n        if (this.eat(types.question)) {\n          node.typeAnnotation = this.flowParsePrefixType();\n          return this.finishNode(node, \"NullableTypeAnnotation\");\n        } else {\n          return this.flowParsePostfixType();\n        }\n      }\n    }, {\n      key: \"flowParseAnonFunctionWithoutParens\",\n      value: function flowParseAnonFunctionWithoutParens() {\n        var param = this.flowParsePrefixType();\n\n        if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n          var node = this.startNodeAt(param.start, param.loc.start);\n          node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n          node.rest = null;\n          node.this = null;\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        return param;\n      }\n    }, {\n      key: \"flowParseIntersectionType\",\n      value: function flowParseIntersectionType() {\n        var node = this.startNode();\n        this.eat(types.bitwiseAND);\n        var type = this.flowParseAnonFunctionWithoutParens();\n        node.types = [type];\n\n        while (this.eat(types.bitwiseAND)) {\n          node.types.push(this.flowParseAnonFunctionWithoutParens());\n        }\n\n        return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseUnionType\",\n      value: function flowParseUnionType() {\n        var node = this.startNode();\n        this.eat(types.bitwiseOR);\n        var type = this.flowParseIntersectionType();\n        node.types = [type];\n\n        while (this.eat(types.bitwiseOR)) {\n          node.types.push(this.flowParseIntersectionType());\n        }\n\n        return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseType\",\n      value: function flowParseType() {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        var type = this.flowParseUnionType();\n        this.state.inType = oldInType;\n        this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n        return type;\n      }\n    }, {\n      key: \"flowParseTypeOrImplicitInstantiation\",\n      value: function flowParseTypeOrImplicitInstantiation() {\n        if (this.state.type === types.name && this.state.value === \"_\") {\n          var startPos = this.state.start;\n          var startLoc = this.state.startLoc;\n          var node = this.parseIdentifier();\n          return this.flowParseGenericType(startPos, startLoc, node);\n        } else {\n          return this.flowParseType();\n        }\n      }\n    }, {\n      key: \"flowParseTypeAnnotation\",\n      value: function flowParseTypeAnnotation() {\n        var node = this.startNode();\n        node.typeAnnotation = this.flowParseTypeInitialiser();\n        return this.finishNode(node, \"TypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseTypeAnnotatableIdentifier\",\n      value: function flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n        var ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n        if (this.match(types.colon)) {\n          ident.typeAnnotation = this.flowParseTypeAnnotation();\n          this.resetEndLocation(ident);\n        }\n\n        return ident;\n      }\n    }, {\n      key: \"typeCastToParameter\",\n      value: function typeCastToParameter(node) {\n        node.expression.typeAnnotation = node.typeAnnotation;\n        this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n        return node.expression;\n      }\n    }, {\n      key: \"flowParseVariance\",\n      value: function flowParseVariance() {\n        var variance = null;\n\n        if (this.match(types.plusMin)) {\n          variance = this.startNode();\n\n          if (this.state.value === \"+\") {\n            variance.kind = \"plus\";\n          } else {\n            variance.kind = \"minus\";\n          }\n\n          this.next();\n          this.finishNode(variance, \"Variance\");\n        }\n\n        return variance;\n      }\n    }, {\n      key: \"parseFunctionBody\",\n      value: function parseFunctionBody(node, allowExpressionBody) {\n        var _this6 = this;\n\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (allowExpressionBody) {\n          return this.forwardNoArrowParamsConversionAt(node, function () {\n            return _get(_getPrototypeOf(_temp.prototype), \"parseFunctionBody\", _this6).call(_this6, node, true, isMethod);\n          });\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseFunctionBody\", this).call(this, node, false, isMethod);\n      }\n    }, {\n      key: \"parseFunctionBodyAndFinish\",\n      value: function parseFunctionBodyAndFinish(node, type) {\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (this.match(types.colon)) {\n          var typeNode = this.startNode();\n\n          var _this$flowParseTypeAn3 = this.flowParseTypeAndPredicateInitialiser();\n\n          var _this$flowParseTypeAn4 = _slicedToArray(_this$flowParseTypeAn3, 2);\n\n          typeNode.typeAnnotation = _this$flowParseTypeAn4[0];\n          node.predicate = _this$flowParseTypeAn4[1];\n          node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseFunctionBodyAndFinish\", this).call(this, node, type, isMethod);\n      }\n    }, {\n      key: \"parseStatement\",\n      value: function parseStatement(context, topLevel) {\n        if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n          var lookahead = this.lookahead();\n\n          if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n            var node = this.startNode();\n            this.next();\n            return this.flowParseInterface(node);\n          }\n        } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n          var _node = this.startNode();\n\n          this.next();\n          return this.flowParseEnumDeclaration(_node);\n        }\n\n        var stmt = _get(_getPrototypeOf(_temp.prototype), \"parseStatement\", this).call(this, context, topLevel);\n\n        if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n          this.flowPragma = null;\n        }\n\n        return stmt;\n      }\n    }, {\n      key: \"parseExpressionStatement\",\n      value: function parseExpressionStatement(node, expr) {\n        if (expr.type === \"Identifier\") {\n          if (expr.name === \"declare\") {\n            if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n              return this.flowParseDeclare(node);\n            }\n          } else if (this.match(types.name)) {\n            if (expr.name === \"interface\") {\n              return this.flowParseInterface(node);\n            } else if (expr.name === \"type\") {\n              return this.flowParseTypeAlias(node);\n            } else if (expr.name === \"opaque\") {\n              return this.flowParseOpaqueType(node, false);\n            }\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseExpressionStatement\", this).call(this, node, expr);\n      }\n    }, {\n      key: \"shouldParseExportDeclaration\",\n      value: function shouldParseExportDeclaration() {\n        return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || _get(_getPrototypeOf(_temp.prototype), \"shouldParseExportDeclaration\", this).call(this);\n      }\n    }, {\n      key: \"isExportDefaultSpecifier\",\n      value: function isExportDefaultSpecifier() {\n        if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n          return false;\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"isExportDefaultSpecifier\", this).call(this);\n      }\n    }, {\n      key: \"parseExportDefaultExpression\",\n      value: function parseExportDefaultExpression() {\n        if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n          var node = this.startNode();\n          this.next();\n          return this.flowParseEnumDeclaration(node);\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseExportDefaultExpression\", this).call(this);\n      }\n    }, {\n      key: \"parseConditional\",\n      value: function parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n        var _this7 = this;\n\n        if (!this.match(types.question)) return expr;\n\n        if (refNeedsArrowPos) {\n          var result = this.tryParse(function () {\n            return _get(_getPrototypeOf(_temp.prototype), \"parseConditional\", _this7).call(_this7, expr, startPos, startLoc);\n          });\n\n          if (!result.node) {\n            refNeedsArrowPos.start = result.error.pos || this.state.start;\n            return expr;\n          }\n\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n\n        this.expect(types.question);\n        var state = this.state.clone();\n        var originalNoArrowAt = this.state.noArrowAt;\n        var node = this.startNodeAt(startPos, startLoc);\n\n        var _this$tryParseConditi = this.tryParseConditionalConsequent(),\n            consequent = _this$tryParseConditi.consequent,\n            failed = _this$tryParseConditi.failed;\n\n        var _this$getArrowLikeExp = this.getArrowLikeExpressions(consequent),\n            _this$getArrowLikeExp2 = _slicedToArray(_this$getArrowLikeExp, 2),\n            valid = _this$getArrowLikeExp2[0],\n            invalid = _this$getArrowLikeExp2[1];\n\n        if (failed || invalid.length > 0) {\n          var noArrowAt = _toConsumableArray(originalNoArrowAt);\n\n          if (invalid.length > 0) {\n            this.state = state;\n            this.state.noArrowAt = noArrowAt;\n\n            for (var i = 0; i < invalid.length; i++) {\n              noArrowAt.push(invalid[i].start);\n            }\n\n            var _this$tryParseConditi2 = this.tryParseConditionalConsequent();\n\n            consequent = _this$tryParseConditi2.consequent;\n            failed = _this$tryParseConditi2.failed;\n\n            var _this$getArrowLikeExp3 = this.getArrowLikeExpressions(consequent);\n\n            var _this$getArrowLikeExp4 = _slicedToArray(_this$getArrowLikeExp3, 2);\n\n            valid = _this$getArrowLikeExp4[0];\n            invalid = _this$getArrowLikeExp4[1];\n          }\n\n          if (failed && valid.length > 1) {\n            this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n          }\n\n          if (failed && valid.length === 1) {\n            this.state = state;\n            this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n\n            var _this$tryParseConditi3 = this.tryParseConditionalConsequent();\n\n            consequent = _this$tryParseConditi3.consequent;\n            failed = _this$tryParseConditi3.failed;\n          }\n        }\n\n        this.getArrowLikeExpressions(consequent, true);\n        this.state.noArrowAt = originalNoArrowAt;\n        this.expect(types.colon);\n        node.test = expr;\n        node.consequent = consequent;\n        node.alternate = this.forwardNoArrowParamsConversionAt(node, function () {\n          return _this7.parseMaybeAssign(undefined, undefined, undefined);\n        });\n        return this.finishNode(node, \"ConditionalExpression\");\n      }\n    }, {\n      key: \"tryParseConditionalConsequent\",\n      value: function tryParseConditionalConsequent() {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        var consequent = this.parseMaybeAssignAllowIn();\n        var failed = !this.match(types.colon);\n        this.state.noArrowParamsConversionAt.pop();\n        return {\n          consequent: consequent,\n          failed: failed\n        };\n      }\n    }, {\n      key: \"getArrowLikeExpressions\",\n      value: function getArrowLikeExpressions(node, disallowInvalid) {\n        var _this8 = this;\n\n        var stack = [node];\n        var arrows = [];\n\n        while (stack.length !== 0) {\n          var _node2 = stack.pop();\n\n          if (_node2.type === \"ArrowFunctionExpression\") {\n            if (_node2.typeParameters || !_node2.returnType) {\n              this.finishArrowValidation(_node2);\n            } else {\n              arrows.push(_node2);\n            }\n\n            stack.push(_node2.body);\n          } else if (_node2.type === \"ConditionalExpression\") {\n            stack.push(_node2.consequent);\n            stack.push(_node2.alternate);\n          }\n        }\n\n        if (disallowInvalid) {\n          arrows.forEach(function (node) {\n            return _this8.finishArrowValidation(node);\n          });\n          return [arrows, []];\n        }\n\n        return partition(arrows, function (node) {\n          return node.params.every(function (param) {\n            return _this8.isAssignable(param, true);\n          });\n        });\n      }\n    }, {\n      key: \"finishArrowValidation\",\n      value: function finishArrowValidation(node) {\n        var _node$extra;\n\n        this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n        this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n\n        _get(_getPrototypeOf(_temp.prototype), \"checkParams\", this).call(this, node, false, true);\n\n        this.scope.exit();\n      }\n    }, {\n      key: \"forwardNoArrowParamsConversionAt\",\n      value: function forwardNoArrowParamsConversionAt(node, parse) {\n        var result;\n\n        if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n          this.state.noArrowParamsConversionAt.push(this.state.start);\n          result = parse();\n          this.state.noArrowParamsConversionAt.pop();\n        } else {\n          result = parse();\n        }\n\n        return result;\n      }\n    }, {\n      key: \"parseParenItem\",\n      value: function parseParenItem(node, startPos, startLoc) {\n        node = _get(_getPrototypeOf(_temp.prototype), \"parseParenItem\", this).call(this, node, startPos, startLoc);\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n          this.resetEndLocation(node);\n        }\n\n        if (this.match(types.colon)) {\n          var typeCastNode = this.startNodeAt(startPos, startLoc);\n          typeCastNode.expression = node;\n          typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n          return this.finishNode(typeCastNode, \"TypeCastExpression\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"assertModuleNodeAllowed\",\n      value: function assertModuleNodeAllowed(node) {\n        if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n          return;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"assertModuleNodeAllowed\", this).call(this, node);\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        var decl = _get(_getPrototypeOf(_temp.prototype), \"parseExport\", this).call(this, node);\n\n        if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n          decl.exportKind = decl.exportKind || \"value\";\n        }\n\n        return decl;\n      }\n    }, {\n      key: \"parseExportDeclaration\",\n      value: function parseExportDeclaration(node) {\n        if (this.isContextual(\"type\")) {\n          node.exportKind = \"type\";\n          var declarationNode = this.startNode();\n          this.next();\n\n          if (this.match(types.braceL)) {\n            node.specifiers = this.parseExportSpecifiers();\n            this.parseExportFrom(node);\n            return null;\n          } else {\n            return this.flowParseTypeAlias(declarationNode);\n          }\n        } else if (this.isContextual(\"opaque\")) {\n          node.exportKind = \"type\";\n\n          var _declarationNode = this.startNode();\n\n          this.next();\n          return this.flowParseOpaqueType(_declarationNode, false);\n        } else if (this.isContextual(\"interface\")) {\n          node.exportKind = \"type\";\n\n          var _declarationNode2 = this.startNode();\n\n          this.next();\n          return this.flowParseInterface(_declarationNode2);\n        } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n          node.exportKind = \"value\";\n\n          var _declarationNode3 = this.startNode();\n\n          this.next();\n          return this.flowParseEnumDeclaration(_declarationNode3);\n        } else {\n          return _get(_getPrototypeOf(_temp.prototype), \"parseExportDeclaration\", this).call(this, node);\n        }\n      }\n    }, {\n      key: \"eatExportStar\",\n      value: function eatExportStar(node) {\n        if (_get(_getPrototypeOf(_temp.prototype), \"eatExportStar\", this).apply(this, arguments)) return true;\n\n        if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n          node.exportKind = \"type\";\n          this.next();\n          this.next();\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"maybeParseExportNamespaceSpecifier\",\n      value: function maybeParseExportNamespaceSpecifier(node) {\n        var pos = this.state.start;\n\n        var hasNamespace = _get(_getPrototypeOf(_temp.prototype), \"maybeParseExportNamespaceSpecifier\", this).call(this, node);\n\n        if (hasNamespace && node.exportKind === \"type\") {\n          this.unexpected(pos);\n        }\n\n        return hasNamespace;\n      }\n    }, {\n      key: \"parseClassId\",\n      value: function parseClassId(node, isStatement, optionalId) {\n        _get(_getPrototypeOf(_temp.prototype), \"parseClassId\", this).call(this, node, isStatement, optionalId);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n      }\n    }, {\n      key: \"parseClassMember\",\n      value: function parseClassMember(classBody, member, state) {\n        var pos = this.state.start;\n\n        if (this.isContextual(\"declare\")) {\n          if (this.parseClassMemberFromModifier(classBody, member)) {\n            return;\n          }\n\n          member.declare = true;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseClassMember\", this).call(this, classBody, member, state);\n\n        if (member.declare) {\n          if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n            this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n          }\n        }\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        var next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (code === 123 && next === 124) {\n          return this.finishOp(types.braceBarL, 2);\n        } else if (this.state.inType && (code === 62 || code === 60)) {\n          return this.finishOp(types.relational, 1);\n        } else if (this.state.inType && code === 63) {\n          return this.finishOp(types.question, 1);\n        } else if (isIteratorStart(code, next)) {\n          this.state.isIterator = true;\n          return _get(_getPrototypeOf(_temp.prototype), \"readWord\", this).call(this);\n        } else {\n          return _get(_getPrototypeOf(_temp.prototype), \"getTokenFromCode\", this).call(this, code);\n        }\n      }\n    }, {\n      key: \"isAssignable\",\n      value: function isAssignable(node, isBinding) {\n        var _this9 = this;\n\n        switch (node.type) {\n          case \"Identifier\":\n          case \"ObjectPattern\":\n          case \"ArrayPattern\":\n          case \"AssignmentPattern\":\n            return true;\n\n          case \"ObjectExpression\":\n            {\n              var _last = node.properties.length - 1;\n\n              return node.properties.every(function (prop, i) {\n                return prop.type !== \"ObjectMethod\" && (i === _last || prop.type === \"SpreadElement\") && _this9.isAssignable(prop);\n              });\n            }\n\n          case \"ObjectProperty\":\n            return this.isAssignable(node.value);\n\n          case \"SpreadElement\":\n            return this.isAssignable(node.argument);\n\n          case \"ArrayExpression\":\n            return node.elements.every(function (element) {\n              return _this9.isAssignable(element);\n            });\n\n          case \"AssignmentExpression\":\n            return node.operator === \"=\";\n\n          case \"ParenthesizedExpression\":\n          case \"TypeCastExpression\":\n            return this.isAssignable(node.expression);\n\n          case \"MemberExpression\":\n          case \"OptionalMemberExpression\":\n            return !isBinding;\n\n          default:\n            return false;\n        }\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (node.type === \"TypeCastExpression\") {\n          return _get(_getPrototypeOf(_temp.prototype), \"toAssignable\", this).call(this, this.typeCastToParameter(node), isLHS);\n        } else {\n          return _get(_getPrototypeOf(_temp.prototype), \"toAssignable\", this).call(this, node, isLHS);\n        }\n      }\n    }, {\n      key: \"toAssignableList\",\n      value: function toAssignableList(exprList, trailingCommaPos, isLHS) {\n        for (var i = 0; i < exprList.length; i++) {\n          var expr = exprList[i];\n\n          if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n            exprList[i] = this.typeCastToParameter(expr);\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"toAssignableList\", this).call(this, exprList, trailingCommaPos, isLHS);\n      }\n    }, {\n      key: \"toReferencedList\",\n      value: function toReferencedList(exprList, isParenthesizedExpr) {\n        for (var i = 0; i < exprList.length; i++) {\n          var _expr$extra;\n\n          var expr = exprList[i];\n\n          if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n            this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n          }\n        }\n\n        return exprList;\n      }\n    }, {\n      key: \"parseArrayLike\",\n      value: function parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n        var node = _get(_getPrototypeOf(_temp.prototype), \"parseArrayLike\", this).call(this, close, canBePattern, isTuple, refExpressionErrors);\n\n        if (canBePattern && !this.state.maybeInArrowParameters) {\n          this.toReferencedList(node.elements);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr) {\n        if (expr.type !== \"TypeCastExpression\") {\n          var _get7;\n\n          for (var _len11 = arguments.length, args = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n            args[_key11 - 1] = arguments[_key11];\n          }\n\n          return (_get7 = _get(_getPrototypeOf(_temp.prototype), \"checkLVal\", this)).call.apply(_get7, [this, expr].concat(args));\n        }\n      }\n    }, {\n      key: \"parseClassProperty\",\n      value: function parseClassProperty(node) {\n        if (this.match(types.colon)) {\n          node.typeAnnotation = this.flowParseTypeAnnotation();\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseClassProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"parseClassPrivateProperty\",\n      value: function parseClassPrivateProperty(node) {\n        if (this.match(types.colon)) {\n          node.typeAnnotation = this.flowParseTypeAnnotation();\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseClassPrivateProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"isClassMethod\",\n      value: function isClassMethod() {\n        return this.isRelational(\"<\") || _get(_getPrototypeOf(_temp.prototype), \"isClassMethod\", this).call(this);\n      }\n    }, {\n      key: \"isClassProperty\",\n      value: function isClassProperty() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_temp.prototype), \"isClassProperty\", this).call(this);\n      }\n    }, {\n      key: \"isNonstaticConstructor\",\n      value: function isNonstaticConstructor(method) {\n        return !this.match(types.colon) && _get(_getPrototypeOf(_temp.prototype), \"isNonstaticConstructor\", this).call(this, method);\n      }\n    }, {\n      key: \"isThisParam\",\n      value: function isThisParam(param) {\n        return param.type === \"Identifier\" && param.name === \"this\";\n      }\n    }, {\n      key: \"pushClassMethod\",\n      value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n        if (method.variance) {\n          this.unexpected(method.variance.start);\n        }\n\n        delete method.variance;\n\n        if (this.isRelational(\"<\")) {\n          method.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"pushClassMethod\", this).call(this, classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n        if (method.params && isConstructor) {\n          var params = method.params;\n\n          if (params.length > 0 && this.isThisParam(params[0])) {\n            this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n          var _params2 = method.value.params;\n\n          if (_params2.length > 0 && this.isThisParam(_params2[0])) {\n            this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n          }\n        }\n      }\n    }, {\n      key: \"pushClassPrivateMethod\",\n      value: function pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n        if (method.variance) {\n          this.unexpected(method.variance.start);\n        }\n\n        delete method.variance;\n\n        if (this.isRelational(\"<\")) {\n          method.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"pushClassPrivateMethod\", this).call(this, classBody, method, isGenerator, isAsync);\n      }\n    }, {\n      key: \"parseClassSuper\",\n      value: function parseClassSuper(node) {\n        _get(_getPrototypeOf(_temp.prototype), \"parseClassSuper\", this).call(this, node);\n\n        if (node.superClass && this.isRelational(\"<\")) {\n          node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n        }\n\n        if (this.isContextual(\"implements\")) {\n          this.next();\n          var implemented = node.implements = [];\n\n          do {\n            var _node3 = this.startNode();\n\n            _node3.id = this.flowParseRestrictedIdentifier(true);\n\n            if (this.isRelational(\"<\")) {\n              _node3.typeParameters = this.flowParseTypeParameterInstantiation();\n            } else {\n              _node3.typeParameters = null;\n            }\n\n            implemented.push(this.finishNode(_node3, \"ClassImplements\"));\n          } while (this.eat(types.comma));\n        }\n      }\n    }, {\n      key: \"checkGetterSetterParams\",\n      value: function checkGetterSetterParams(method) {\n        _get(_getPrototypeOf(_temp.prototype), \"checkGetterSetterParams\", this).call(this, method);\n\n        var params = this.getObjectOrClassMethodParams(method);\n\n        if (params.length > 0) {\n          var param = params[0];\n\n          if (this.isThisParam(param) && method.kind === \"get\") {\n            this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n          } else if (this.isThisParam(param)) {\n            this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n          }\n        }\n      }\n    }, {\n      key: \"parsePropertyName\",\n      value: function parsePropertyName(node, isPrivateNameAllowed) {\n        var variance = this.flowParseVariance();\n\n        var key = _get(_getPrototypeOf(_temp.prototype), \"parsePropertyName\", this).call(this, node, isPrivateNameAllowed);\n\n        node.variance = variance;\n        return key;\n      }\n    }, {\n      key: \"parseObjPropValue\",\n      value: function parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n        if (prop.variance) {\n          this.unexpected(prop.variance.start);\n        }\n\n        delete prop.variance;\n        var typeParameters;\n\n        if (this.isRelational(\"<\") && !isAccessor) {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          if (!this.match(types.parenL)) this.unexpected();\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseObjPropValue\", this).call(this, prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n        if (typeParameters) {\n          (prop.value || prop).typeParameters = typeParameters;\n        }\n      }\n    }, {\n      key: \"parseAssignableListItemTypes\",\n      value: function parseAssignableListItemTypes(param) {\n        if (this.eat(types.question)) {\n          if (param.type !== \"Identifier\") {\n            this.raise(param.start, FlowErrors.OptionalBindingPattern);\n          }\n\n          if (this.isThisParam(param)) {\n            this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n\n          param.optional = true;\n        }\n\n        if (this.match(types.colon)) {\n          param.typeAnnotation = this.flowParseTypeAnnotation();\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n        }\n\n        if (this.match(types.eq) && this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamNoDefault);\n        }\n\n        this.resetEndLocation(param);\n        return param;\n      }\n    }, {\n      key: \"parseMaybeDefault\",\n      value: function parseMaybeDefault(startPos, startLoc, left) {\n        var node = _get(_getPrototypeOf(_temp.prototype), \"parseMaybeDefault\", this).call(this, startPos, startLoc, left);\n\n        if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n          this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"shouldParseDefaultImport\",\n      value: function shouldParseDefaultImport(node) {\n        if (!hasTypeImportKind(node)) {\n          return _get(_getPrototypeOf(_temp.prototype), \"shouldParseDefaultImport\", this).call(this, node);\n        }\n\n        return isMaybeDefaultImport(this.state);\n      }\n    }, {\n      key: \"parseImportSpecifierLocal\",\n      value: function parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n        specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n        this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n        node.specifiers.push(this.finishNode(specifier, type));\n      }\n    }, {\n      key: \"maybeParseDefaultImportSpecifier\",\n      value: function maybeParseDefaultImportSpecifier(node) {\n        node.importKind = \"value\";\n        var kind = null;\n\n        if (this.match(types._typeof)) {\n          kind = \"typeof\";\n        } else if (this.isContextual(\"type\")) {\n          kind = \"type\";\n        }\n\n        if (kind) {\n          var lh = this.lookahead();\n\n          if (kind === \"type\" && lh.type === types.star) {\n            this.unexpected(lh.start);\n          }\n\n          if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n            this.next();\n            node.importKind = kind;\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"maybeParseDefaultImportSpecifier\", this).call(this, node);\n      }\n    }, {\n      key: \"parseImportSpecifier\",\n      value: function parseImportSpecifier(node) {\n        var specifier = this.startNode();\n        var firstIdentLoc = this.state.start;\n        var firstIdent = this.parseModuleExportName();\n        var specifierTypeKind = null;\n\n        if (firstIdent.type === \"Identifier\") {\n          if (firstIdent.name === \"type\") {\n            specifierTypeKind = \"type\";\n          } else if (firstIdent.name === \"typeof\") {\n            specifierTypeKind = \"typeof\";\n          }\n        }\n\n        var isBinding = false;\n\n        if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n          var as_ident = this.parseIdentifier(true);\n\n          if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n            specifier.imported = as_ident;\n            specifier.importKind = specifierTypeKind;\n            specifier.local = as_ident.__clone();\n          } else {\n            specifier.imported = firstIdent;\n            specifier.importKind = null;\n            specifier.local = this.parseIdentifier();\n          }\n        } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n\n          if (this.eatContextual(\"as\")) {\n            specifier.local = this.parseIdentifier();\n          } else {\n            isBinding = true;\n            specifier.local = specifier.imported.__clone();\n          }\n        } else {\n          if (firstIdent.type === \"StringLiteral\") {\n            throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n          }\n\n          isBinding = true;\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = specifier.imported.__clone();\n        }\n\n        var nodeIsTypeImport = hasTypeImportKind(node);\n        var specifierIsTypeImport = hasTypeImportKind(specifier);\n\n        if (nodeIsTypeImport && specifierIsTypeImport) {\n          this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n        }\n\n        if (nodeIsTypeImport || specifierIsTypeImport) {\n          this.checkReservedType(specifier.local.name, specifier.local.start, true);\n        }\n\n        if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n          this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n        }\n\n        this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n        node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n      }\n    }, {\n      key: \"parseBindingAtom\",\n      value: function parseBindingAtom() {\n        switch (this.state.type) {\n          case types._this:\n            return this.parseIdentifier(true);\n\n          default:\n            return _get(_getPrototypeOf(_temp.prototype), \"parseBindingAtom\", this).call(this);\n        }\n      }\n    }, {\n      key: \"parseFunctionParams\",\n      value: function parseFunctionParams(node, allowModifiers) {\n        var kind = node.kind;\n\n        if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseFunctionParams\", this).call(this, node, allowModifiers);\n      }\n    }, {\n      key: \"parseVarId\",\n      value: function parseVarId(decl, kind) {\n        _get(_getPrototypeOf(_temp.prototype), \"parseVarId\", this).call(this, decl, kind);\n\n        if (this.match(types.colon)) {\n          decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n          this.resetEndLocation(decl.id);\n        }\n      }\n    }, {\n      key: \"parseAsyncArrowFromCallExpression\",\n      value: function parseAsyncArrowFromCallExpression(node, call) {\n        if (this.match(types.colon)) {\n          var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          node.returnType = this.flowParseTypeAnnotation();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseAsyncArrowFromCallExpression\", this).call(this, node, call);\n      }\n    }, {\n      key: \"shouldParseAsyncArrow\",\n      value: function shouldParseAsyncArrow() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_temp.prototype), \"shouldParseAsyncArrow\", this).call(this);\n      }\n    }, {\n      key: \"parseMaybeAssign\",\n      value: function parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n        var _this10 = this;\n\n        var _jsx;\n\n        var state = null;\n        var jsx;\n\n        if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n          state = this.state.clone();\n          jsx = this.tryParse(function () {\n            return _get(_getPrototypeOf(_temp.prototype), \"parseMaybeAssign\", _this10).call(_this10, refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          }, state);\n          if (!jsx.error) return jsx.node;\n          var context = this.state.context;\n\n          if (context[context.length - 1] === types$1.j_oTag) {\n            context.length -= 2;\n          } else if (context[context.length - 1] === types$1.j_expr) {\n            context.length -= 1;\n          }\n        }\n\n        if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n          var _jsx2, _jsx3;\n\n          state = state || this.state.clone();\n          var typeParameters;\n          var arrow = this.tryParse(function (abort) {\n            var _arrowExpression$extr;\n\n            typeParameters = _this10.flowParseTypeParameterDeclaration();\n\n            var arrowExpression = _this10.forwardNoArrowParamsConversionAt(typeParameters, function () {\n              var result = _get(_getPrototypeOf(_temp.prototype), \"parseMaybeAssign\", _this10).call(_this10, refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n\n              _this10.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            });\n\n            if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n              abort();\n            }\n\n            var expr = _this10.maybeUnwrapTypeCastExpression(arrowExpression);\n\n            expr.typeParameters = typeParameters;\n\n            _this10.resetStartLocationFromNode(expr, typeParameters);\n\n            return arrowExpression;\n          }, state);\n          var arrowExpression = null;\n\n          if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n            if (!arrow.error && !arrow.aborted) {\n              if (arrow.node.async) {\n                this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n              }\n\n              return arrow.node;\n            }\n\n            arrowExpression = arrow.node;\n          }\n\n          if ((_jsx2 = jsx) != null && _jsx2.node) {\n            this.state = jsx.failState;\n            return jsx.node;\n          }\n\n          if (arrowExpression) {\n            this.state = arrow.failState;\n            return arrowExpression;\n          }\n\n          if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n          if (arrow.thrown) throw arrow.error;\n          throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseMaybeAssign\", this).call(this, refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n      }\n    }, {\n      key: \"parseArrow\",\n      value: function parseArrow(node) {\n        var _this11 = this;\n\n        if (this.match(types.colon)) {\n          var result = this.tryParse(function () {\n            var oldNoAnonFunctionType = _this11.state.noAnonFunctionType;\n            _this11.state.noAnonFunctionType = true;\n\n            var typeNode = _this11.startNode();\n\n            var _this11$flowParseType = _this11.flowParseTypeAndPredicateInitialiser();\n\n            var _this11$flowParseType2 = _slicedToArray(_this11$flowParseType, 2);\n\n            typeNode.typeAnnotation = _this11$flowParseType2[0];\n            node.predicate = _this11$flowParseType2[1];\n            _this11.state.noAnonFunctionType = oldNoAnonFunctionType;\n            if (_this11.canInsertSemicolon()) _this11.unexpected();\n            if (!_this11.match(types.arrow)) _this11.unexpected();\n            return typeNode;\n          });\n          if (result.thrown) return null;\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseArrow\", this).call(this, node);\n      }\n    }, {\n      key: \"shouldParseArrow\",\n      value: function shouldParseArrow() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_temp.prototype), \"shouldParseArrow\", this).call(this);\n      }\n    }, {\n      key: \"setArrowFunctionParameters\",\n      value: function setArrowFunctionParameters(node, params) {\n        if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n          node.params = params;\n        } else {\n          _get(_getPrototypeOf(_temp.prototype), \"setArrowFunctionParameters\", this).call(this, node, params);\n        }\n      }\n    }, {\n      key: \"checkParams\",\n      value: function checkParams(node, allowDuplicates, isArrowFunction) {\n        if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n          return;\n        }\n\n        for (var i = 0; i < node.params.length; i++) {\n          if (this.isThisParam(node.params[i]) && i > 0) {\n            this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"checkParams\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseParenAndDistinguishExpression\",\n      value: function parseParenAndDistinguishExpression(canBeArrow) {\n        return _get(_getPrototypeOf(_temp.prototype), \"parseParenAndDistinguishExpression\", this).call(this, canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n      }\n    }, {\n      key: \"parseSubscripts\",\n      value: function parseSubscripts(base, startPos, startLoc, noCalls) {\n        var _this12 = this;\n\n        if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n          this.next();\n          var node = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          base = this.finishNode(node, \"CallExpression\");\n        } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n          var state = this.state.clone();\n          var arrow = this.tryParse(function (abort) {\n            return _this12.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort();\n          }, state);\n          if (!arrow.error && !arrow.aborted) return arrow.node;\n          var result = this.tryParse(function () {\n            return _get(_getPrototypeOf(_temp.prototype), \"parseSubscripts\", _this12).call(_this12, base, startPos, startLoc, noCalls);\n          }, state);\n          if (result.node && !result.error) return result.node;\n\n          if (arrow.node) {\n            this.state = arrow.failState;\n            return arrow.node;\n          }\n\n          if (result.node) {\n            this.state = result.failState;\n            return result.node;\n          }\n\n          throw arrow.error || result.error;\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseSubscripts\", this).call(this, base, startPos, startLoc, noCalls);\n      }\n    }, {\n      key: \"parseSubscript\",\n      value: function parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n        var _this13 = this;\n\n        if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n          subscriptState.optionalChainMember = true;\n\n          if (noCalls) {\n            subscriptState.stop = true;\n            return base;\n          }\n\n          this.next();\n          var node = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n          node.typeArguments = this.flowParseTypeParameterInstantiation();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          node.optional = true;\n          return this.finishCallExpression(node, true);\n        } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n          var _node4 = this.startNodeAt(startPos, startLoc);\n\n          _node4.callee = base;\n          var result = this.tryParse(function () {\n            _node4.typeArguments = _this13.flowParseTypeParameterInstantiationCallOrNew();\n\n            _this13.expect(types.parenL);\n\n            _node4.arguments = _this13.parseCallExpressionArguments(types.parenR, false);\n            if (subscriptState.optionalChainMember) _node4.optional = false;\n            return _this13.finishCallExpression(_node4, subscriptState.optionalChainMember);\n          });\n\n          if (result.node) {\n            if (result.error) this.state = result.failState;\n            return result.node;\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseSubscript\", this).call(this, base, startPos, startLoc, noCalls, subscriptState);\n      }\n    }, {\n      key: \"parseNewArguments\",\n      value: function parseNewArguments(node) {\n        var _this14 = this;\n\n        var targs = null;\n\n        if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n          targs = this.tryParse(function () {\n            return _this14.flowParseTypeParameterInstantiationCallOrNew();\n          }).node;\n        }\n\n        node.typeArguments = targs;\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseNewArguments\", this).call(this, node);\n      }\n    }, {\n      key: \"parseAsyncArrowWithTypeParameters\",\n      value: function parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n        this.parseFunctionParams(node);\n        if (!this.parseArrow(node)) return;\n        return this.parseArrowExpression(node, undefined, true);\n      }\n    }, {\n      key: \"readToken_mult_modulo\",\n      value: function readToken_mult_modulo(code) {\n        var next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (code === 42 && next === 47 && this.state.hasFlowComment) {\n          this.state.hasFlowComment = false;\n          this.state.pos += 2;\n          this.nextToken();\n          return;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"readToken_mult_modulo\", this).call(this, code);\n      }\n    }, {\n      key: \"readToken_pipe_amp\",\n      value: function readToken_pipe_amp(code) {\n        var next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (code === 124 && next === 125) {\n          this.finishOp(types.braceBarR, 2);\n          return;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"readToken_pipe_amp\", this).call(this, code);\n      }\n    }, {\n      key: \"parseTopLevel\",\n      value: function parseTopLevel(file, program) {\n        var fileNode = _get(_getPrototypeOf(_temp.prototype), \"parseTopLevel\", this).call(this, file, program);\n\n        if (this.state.hasFlowComment) {\n          this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n        }\n\n        return fileNode;\n      }\n    }, {\n      key: \"skipBlockComment\",\n      value: function skipBlockComment() {\n        if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n          if (this.state.hasFlowComment) {\n            this.unexpected(null, FlowErrors.NestedFlowComment);\n          }\n\n          this.hasFlowCommentCompletion();\n          this.state.pos += this.skipFlowComment();\n          this.state.hasFlowComment = true;\n          return;\n        }\n\n        if (this.state.hasFlowComment) {\n          var end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n          if (end === -1) {\n            throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n          }\n\n          this.state.pos = end + 3;\n          return;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"skipBlockComment\", this).call(this);\n      }\n    }, {\n      key: \"skipFlowComment\",\n      value: function skipFlowComment() {\n        var pos = this.state.pos;\n        var shiftToFirstNonWhiteSpace = 2;\n\n        while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n          shiftToFirstNonWhiteSpace++;\n        }\n\n        var ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n        var ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n        if (ch2 === 58 && ch3 === 58) {\n          return shiftToFirstNonWhiteSpace + 2;\n        }\n\n        if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n          return shiftToFirstNonWhiteSpace + 12;\n        }\n\n        if (ch2 === 58 && ch3 !== 58) {\n          return shiftToFirstNonWhiteSpace;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"hasFlowCommentCompletion\",\n      value: function hasFlowCommentCompletion() {\n        var end = this.input.indexOf(\"*/\", this.state.pos);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n        }\n      }\n    }, {\n      key: \"flowEnumErrorBooleanMemberNotInitialized\",\n      value: function flowEnumErrorBooleanMemberNotInitialized(pos, _ref3) {\n        var enumName = _ref3.enumName,\n            memberName = _ref3.memberName;\n        this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorInvalidMemberName\",\n      value: function flowEnumErrorInvalidMemberName(pos, _ref4) {\n        var enumName = _ref4.enumName,\n            memberName = _ref4.memberName;\n        var suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n        this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorDuplicateMemberName\",\n      value: function flowEnumErrorDuplicateMemberName(pos, _ref5) {\n        var enumName = _ref5.enumName,\n            memberName = _ref5.memberName;\n        this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorInconsistentMemberValues\",\n      value: function flowEnumErrorInconsistentMemberValues(pos, _ref6) {\n        var enumName = _ref6.enumName;\n        this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorInvalidExplicitType\",\n      value: function flowEnumErrorInvalidExplicitType(pos, _ref7) {\n        var enumName = _ref7.enumName,\n            suppliedType = _ref7.suppliedType;\n        return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n      }\n    }, {\n      key: \"flowEnumErrorInvalidMemberInitializer\",\n      value: function flowEnumErrorInvalidMemberInitializer(pos, _ref8) {\n        var enumName = _ref8.enumName,\n            explicitType = _ref8.explicitType,\n            memberName = _ref8.memberName;\n        var message = null;\n\n        switch (explicitType) {\n          case \"boolean\":\n          case \"number\":\n          case \"string\":\n            message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n            break;\n\n          case \"symbol\":\n            message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n            break;\n\n          default:\n            message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n        }\n\n        return this.raise(pos, message, enumName, memberName, explicitType);\n      }\n    }, {\n      key: \"flowEnumErrorNumberMemberNotInitialized\",\n      value: function flowEnumErrorNumberMemberNotInitialized(pos, _ref9) {\n        var enumName = _ref9.enumName,\n            memberName = _ref9.memberName;\n        this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n      }\n    }, {\n      key: \"flowEnumErrorStringMemberInconsistentlyInitailized\",\n      value: function flowEnumErrorStringMemberInconsistentlyInitailized(pos, _ref10) {\n        var enumName = _ref10.enumName;\n        this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n      }\n    }, {\n      key: \"flowEnumMemberInit\",\n      value: function flowEnumMemberInit() {\n        var _this15 = this;\n\n        var startPos = this.state.start;\n\n        var endOfInit = function endOfInit() {\n          return _this15.match(types.comma) || _this15.match(types.braceR);\n        };\n\n        switch (this.state.type) {\n          case types.num:\n            {\n              var literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n              if (endOfInit()) {\n                return {\n                  type: \"number\",\n                  pos: literal.start,\n                  value: literal\n                };\n              }\n\n              return {\n                type: \"invalid\",\n                pos: startPos\n              };\n            }\n\n          case types.string:\n            {\n              var _literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n              if (endOfInit()) {\n                return {\n                  type: \"string\",\n                  pos: _literal.start,\n                  value: _literal\n                };\n              }\n\n              return {\n                type: \"invalid\",\n                pos: startPos\n              };\n            }\n\n          case types._true:\n          case types._false:\n            {\n              var _literal2 = this.parseBooleanLiteral();\n\n              if (endOfInit()) {\n                return {\n                  type: \"boolean\",\n                  pos: _literal2.start,\n                  value: _literal2\n                };\n              }\n\n              return {\n                type: \"invalid\",\n                pos: startPos\n              };\n            }\n\n          default:\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n        }\n      }\n    }, {\n      key: \"flowEnumMemberRaw\",\n      value: function flowEnumMemberRaw() {\n        var pos = this.state.start;\n        var id = this.parseIdentifier(true);\n        var init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n          type: \"none\",\n          pos: pos\n        };\n        return {\n          id: id,\n          init: init\n        };\n      }\n    }, {\n      key: \"flowEnumCheckExplicitTypeMismatch\",\n      value: function flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n        var explicitType = context.explicitType;\n\n        if (explicitType === null) {\n          return;\n        }\n\n        if (explicitType !== expectedType) {\n          this.flowEnumErrorInvalidMemberInitializer(pos, context);\n        }\n      }\n    }, {\n      key: \"flowEnumMembers\",\n      value: function flowEnumMembers(_ref11) {\n        var enumName = _ref11.enumName,\n            explicitType = _ref11.explicitType;\n        var seenNames = new Set();\n        var members = {\n          booleanMembers: [],\n          numberMembers: [],\n          stringMembers: [],\n          defaultedMembers: []\n        };\n        var hasUnknownMembers = false;\n\n        while (!this.match(types.braceR)) {\n          if (this.eat(types.ellipsis)) {\n            hasUnknownMembers = true;\n            break;\n          }\n\n          var memberNode = this.startNode();\n\n          var _this$flowEnumMemberR = this.flowEnumMemberRaw(),\n              id = _this$flowEnumMemberR.id,\n              init = _this$flowEnumMemberR.init;\n\n          var memberName = id.name;\n\n          if (memberName === \"\") {\n            continue;\n          }\n\n          if (/^[a-z]/.test(memberName)) {\n            this.flowEnumErrorInvalidMemberName(id.start, {\n              enumName: enumName,\n              memberName: memberName\n            });\n          }\n\n          if (seenNames.has(memberName)) {\n            this.flowEnumErrorDuplicateMemberName(id.start, {\n              enumName: enumName,\n              memberName: memberName\n            });\n          }\n\n          seenNames.add(memberName);\n          var context = {\n            enumName: enumName,\n            explicitType: explicitType,\n            memberName: memberName\n          };\n          memberNode.id = id;\n\n          switch (init.type) {\n            case \"boolean\":\n              {\n                this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n                memberNode.init = init.value;\n                members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n                break;\n              }\n\n            case \"number\":\n              {\n                this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n                memberNode.init = init.value;\n                members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n                break;\n              }\n\n            case \"string\":\n              {\n                this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n                memberNode.init = init.value;\n                members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n                break;\n              }\n\n            case \"invalid\":\n              {\n                throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n              }\n\n            case \"none\":\n              {\n                switch (explicitType) {\n                  case \"boolean\":\n                    this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                    break;\n\n                  case \"number\":\n                    this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                    break;\n\n                  default:\n                    members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n                }\n              }\n          }\n\n          if (!this.match(types.braceR)) {\n            this.expect(types.comma);\n          }\n        }\n\n        return {\n          members: members,\n          hasUnknownMembers: hasUnknownMembers\n        };\n      }\n    }, {\n      key: \"flowEnumStringMembers\",\n      value: function flowEnumStringMembers(initializedMembers, defaultedMembers, _ref12) {\n        var enumName = _ref12.enumName;\n\n        if (initializedMembers.length === 0) {\n          return defaultedMembers;\n        } else if (defaultedMembers.length === 0) {\n          return initializedMembers;\n        } else if (defaultedMembers.length > initializedMembers.length) {\n          var _iterator = _createForOfIteratorHelper(initializedMembers),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var member = _step.value;\n              this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n                enumName: enumName\n              });\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return defaultedMembers;\n        } else {\n          var _iterator2 = _createForOfIteratorHelper(defaultedMembers),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _member = _step2.value;\n              this.flowEnumErrorStringMemberInconsistentlyInitailized(_member.start, {\n                enumName: enumName\n              });\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          return initializedMembers;\n        }\n      }\n    }, {\n      key: \"flowEnumParseExplicitType\",\n      value: function flowEnumParseExplicitType(_ref13) {\n        var enumName = _ref13.enumName;\n\n        if (this.eatContextual(\"of\")) {\n          if (!this.match(types.name)) {\n            throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n              enumName: enumName,\n              suppliedType: null\n            });\n          }\n\n          var value = this.state.value;\n          this.next();\n\n          if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n            this.flowEnumErrorInvalidExplicitType(this.state.start, {\n              enumName: enumName,\n              suppliedType: value\n            });\n          }\n\n          return value;\n        }\n\n        return null;\n      }\n    }, {\n      key: \"flowEnumBody\",\n      value: function flowEnumBody(node, _ref14) {\n        var _this16 = this;\n\n        var enumName = _ref14.enumName,\n            nameLoc = _ref14.nameLoc;\n        var explicitType = this.flowEnumParseExplicitType({\n          enumName: enumName\n        });\n        this.expect(types.braceL);\n\n        var _this$flowEnumMembers = this.flowEnumMembers({\n          enumName: enumName,\n          explicitType: explicitType\n        }),\n            members = _this$flowEnumMembers.members,\n            hasUnknownMembers = _this$flowEnumMembers.hasUnknownMembers;\n\n        node.hasUnknownMembers = hasUnknownMembers;\n\n        switch (explicitType) {\n          case \"boolean\":\n            node.explicitType = true;\n            node.members = members.booleanMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n\n          case \"number\":\n            node.explicitType = true;\n            node.members = members.numberMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n\n          case \"string\":\n            node.explicitType = true;\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName: enumName\n            });\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n\n          case \"symbol\":\n            node.members = members.defaultedMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumSymbolBody\");\n\n          default:\n            {\n              var empty = function empty() {\n                node.members = [];\n\n                _this16.expect(types.braceR);\n\n                return _this16.finishNode(node, \"EnumStringBody\");\n              };\n\n              node.explicitType = false;\n              var boolsLen = members.booleanMembers.length;\n              var numsLen = members.numberMembers.length;\n              var strsLen = members.stringMembers.length;\n              var defaultedLen = members.defaultedMembers.length;\n\n              if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n                return empty();\n              } else if (!boolsLen && !numsLen) {\n                node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                  enumName: enumName\n                });\n                this.expect(types.braceR);\n                return this.finishNode(node, \"EnumStringBody\");\n              } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n                var _iterator3 = _createForOfIteratorHelper(members.defaultedMembers),\n                    _step3;\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    var member = _step3.value;\n                    this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                      enumName: enumName,\n                      memberName: member.id.name\n                    });\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n                node.members = members.booleanMembers;\n                this.expect(types.braceR);\n                return this.finishNode(node, \"EnumBooleanBody\");\n              } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n                var _iterator4 = _createForOfIteratorHelper(members.defaultedMembers),\n                    _step4;\n\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    var _member2 = _step4.value;\n                    this.flowEnumErrorNumberMemberNotInitialized(_member2.start, {\n                      enumName: enumName,\n                      memberName: _member2.id.name\n                    });\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n\n                node.members = members.numberMembers;\n                this.expect(types.braceR);\n                return this.finishNode(node, \"EnumNumberBody\");\n              } else {\n                this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                  enumName: enumName\n                });\n                return empty();\n              }\n            }\n        }\n      }\n    }, {\n      key: \"flowParseEnumDeclaration\",\n      value: function flowParseEnumDeclaration(node) {\n        var id = this.parseIdentifier();\n        node.id = id;\n        node.body = this.flowEnumBody(this.startNode(), {\n          enumName: id.name,\n          nameLoc: id.start\n        });\n        return this.finishNode(node, \"EnumDeclaration\");\n      }\n    }, {\n      key: \"updateContext\",\n      value: function updateContext(prevType) {\n        if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n          this.state.exprAllowed = false;\n        } else {\n          _get(_getPrototypeOf(_temp.prototype), \"updateContext\", this).call(this, prevType);\n        }\n      }\n    }, {\n      key: \"isLookaheadToken_lt\",\n      value: function isLookaheadToken_lt() {\n        var next = this.nextTokenStart();\n\n        if (this.input.charCodeAt(next) === 60) {\n          var afterNext = this.input.charCodeAt(next + 1);\n          return afterNext !== 60 && afterNext !== 61;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"maybeUnwrapTypeCastExpression\",\n      value: function maybeUnwrapTypeCastExpression(node) {\n        return node.type === \"TypeCastExpression\" ? node.expression : node;\n      }\n    }]);\n\n    return _temp;\n  }(superClass), _temp;\n};\n\nvar entities = {\n  quot: \"\\\"\",\n  amp: \"&\",\n  apos: \"'\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\xA0\",\n  iexcl: \"\\xA1\",\n  cent: \"\\xA2\",\n  pound: \"\\xA3\",\n  curren: \"\\xA4\",\n  yen: \"\\xA5\",\n  brvbar: \"\\xA6\",\n  sect: \"\\xA7\",\n  uml: \"\\xA8\",\n  copy: \"\\xA9\",\n  ordf: \"\\xAA\",\n  laquo: \"\\xAB\",\n  not: \"\\xAC\",\n  shy: \"\\xAD\",\n  reg: \"\\xAE\",\n  macr: \"\\xAF\",\n  deg: \"\\xB0\",\n  plusmn: \"\\xB1\",\n  sup2: \"\\xB2\",\n  sup3: \"\\xB3\",\n  acute: \"\\xB4\",\n  micro: \"\\xB5\",\n  para: \"\\xB6\",\n  middot: \"\\xB7\",\n  cedil: \"\\xB8\",\n  sup1: \"\\xB9\",\n  ordm: \"\\xBA\",\n  raquo: \"\\xBB\",\n  frac14: \"\\xBC\",\n  frac12: \"\\xBD\",\n  frac34: \"\\xBE\",\n  iquest: \"\\xBF\",\n  Agrave: \"\\xC0\",\n  Aacute: \"\\xC1\",\n  Acirc: \"\\xC2\",\n  Atilde: \"\\xC3\",\n  Auml: \"\\xC4\",\n  Aring: \"\\xC5\",\n  AElig: \"\\xC6\",\n  Ccedil: \"\\xC7\",\n  Egrave: \"\\xC8\",\n  Eacute: \"\\xC9\",\n  Ecirc: \"\\xCA\",\n  Euml: \"\\xCB\",\n  Igrave: \"\\xCC\",\n  Iacute: \"\\xCD\",\n  Icirc: \"\\xCE\",\n  Iuml: \"\\xCF\",\n  ETH: \"\\xD0\",\n  Ntilde: \"\\xD1\",\n  Ograve: \"\\xD2\",\n  Oacute: \"\\xD3\",\n  Ocirc: \"\\xD4\",\n  Otilde: \"\\xD5\",\n  Ouml: \"\\xD6\",\n  times: \"\\xD7\",\n  Oslash: \"\\xD8\",\n  Ugrave: \"\\xD9\",\n  Uacute: \"\\xDA\",\n  Ucirc: \"\\xDB\",\n  Uuml: \"\\xDC\",\n  Yacute: \"\\xDD\",\n  THORN: \"\\xDE\",\n  szlig: \"\\xDF\",\n  agrave: \"\\xE0\",\n  aacute: \"\\xE1\",\n  acirc: \"\\xE2\",\n  atilde: \"\\xE3\",\n  auml: \"\\xE4\",\n  aring: \"\\xE5\",\n  aelig: \"\\xE6\",\n  ccedil: \"\\xE7\",\n  egrave: \"\\xE8\",\n  eacute: \"\\xE9\",\n  ecirc: \"\\xEA\",\n  euml: \"\\xEB\",\n  igrave: \"\\xEC\",\n  iacute: \"\\xED\",\n  icirc: \"\\xEE\",\n  iuml: \"\\xEF\",\n  eth: \"\\xF0\",\n  ntilde: \"\\xF1\",\n  ograve: \"\\xF2\",\n  oacute: \"\\xF3\",\n  ocirc: \"\\xF4\",\n  otilde: \"\\xF5\",\n  ouml: \"\\xF6\",\n  divide: \"\\xF7\",\n  oslash: \"\\xF8\",\n  ugrave: \"\\xF9\",\n  uacute: \"\\xFA\",\n  ucirc: \"\\xFB\",\n  uuml: \"\\xFC\",\n  yacute: \"\\xFD\",\n  thorn: \"\\xFE\",\n  yuml: \"\\xFF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\nvar HEX_NUMBER = /^[\\da-fA-F]+$/;\nvar DECIMAL_NUMBER = /^\\d+$/;\nvar JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  var out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = function jsx(superClass) {\n  return /*#__PURE__*/function (_superClass3) {\n    _inherits(_class2, _superClass3);\n\n    var _super7 = _createSuper(_class2);\n\n    function _class2() {\n      _classCallCheck(this, _class2);\n\n      return _super7.apply(this, arguments);\n    }\n\n    _createClass(_class2, [{\n      key: \"jsxReadToken\",\n      value: function jsxReadToken() {\n        var out = \"\";\n        var chunkStart = this.state.pos;\n\n        for (;;) {\n          if (this.state.pos >= this.length) {\n            throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n          }\n\n          var ch = this.input.charCodeAt(this.state.pos);\n\n          switch (ch) {\n            case 60:\n            case 123:\n              if (this.state.pos === this.state.start) {\n                if (ch === 60 && this.state.exprAllowed) {\n                  ++this.state.pos;\n                  return this.finishToken(types.jsxTagStart);\n                }\n\n                return _get(_getPrototypeOf(_class2.prototype), \"getTokenFromCode\", this).call(this, ch);\n              }\n\n              out += this.input.slice(chunkStart, this.state.pos);\n              return this.finishToken(types.jsxText, out);\n\n            case 38:\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadEntity();\n              chunkStart = this.state.pos;\n              break;\n\n            case 62:\n            case 125:\n            default:\n              if (isNewLine(ch)) {\n                out += this.input.slice(chunkStart, this.state.pos);\n                out += this.jsxReadNewLine(true);\n                chunkStart = this.state.pos;\n              } else {\n                ++this.state.pos;\n              }\n\n          }\n        }\n      }\n    }, {\n      key: \"jsxReadNewLine\",\n      value: function jsxReadNewLine(normalizeCRLF) {\n        var ch = this.input.charCodeAt(this.state.pos);\n        var out;\n        ++this.state.pos;\n\n        if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n          out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n        } else {\n          out = String.fromCharCode(ch);\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        return out;\n      }\n    }, {\n      key: \"jsxReadString\",\n      value: function jsxReadString(quote) {\n        var out = \"\";\n        var chunkStart = ++this.state.pos;\n\n        for (;;) {\n          if (this.state.pos >= this.length) {\n            throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n          }\n\n          var ch = this.input.charCodeAt(this.state.pos);\n          if (ch === quote) break;\n\n          if (ch === 38) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n          } else if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(false);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos++);\n        return this.finishToken(types.string, out);\n      }\n    }, {\n      key: \"jsxReadEntity\",\n      value: function jsxReadEntity() {\n        var str = \"\";\n        var count = 0;\n        var entity;\n        var ch = this.input[this.state.pos];\n        var startPos = ++this.state.pos;\n\n        while (this.state.pos < this.length && count++ < 10) {\n          ch = this.input[this.state.pos++];\n\n          if (ch === \";\") {\n            if (str[0] === \"#\") {\n              if (str[1] === \"x\") {\n                str = str.substr(2);\n\n                if (HEX_NUMBER.test(str)) {\n                  entity = String.fromCodePoint(parseInt(str, 16));\n                }\n              } else {\n                str = str.substr(1);\n\n                if (DECIMAL_NUMBER.test(str)) {\n                  entity = String.fromCodePoint(parseInt(str, 10));\n                }\n              }\n            } else {\n              entity = entities[str];\n            }\n\n            break;\n          }\n\n          str += ch;\n        }\n\n        if (!entity) {\n          this.state.pos = startPos;\n          return \"&\";\n        }\n\n        return entity;\n      }\n    }, {\n      key: \"jsxReadWord\",\n      value: function jsxReadWord() {\n        var ch;\n        var start = this.state.pos;\n\n        do {\n          ch = this.input.charCodeAt(++this.state.pos);\n        } while (isIdentifierChar(ch) || ch === 45);\n\n        return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n      }\n    }, {\n      key: \"jsxParseIdentifier\",\n      value: function jsxParseIdentifier() {\n        var node = this.startNode();\n\n        if (this.match(types.jsxName)) {\n          node.name = this.state.value;\n        } else if (this.state.type.keyword) {\n          node.name = this.state.type.keyword;\n        } else {\n          this.unexpected();\n        }\n\n        this.next();\n        return this.finishNode(node, \"JSXIdentifier\");\n      }\n    }, {\n      key: \"jsxParseNamespacedName\",\n      value: function jsxParseNamespacedName() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var name = this.jsxParseIdentifier();\n        if (!this.eat(types.colon)) return name;\n        var node = this.startNodeAt(startPos, startLoc);\n        node.namespace = name;\n        node.name = this.jsxParseIdentifier();\n        return this.finishNode(node, \"JSXNamespacedName\");\n      }\n    }, {\n      key: \"jsxParseElementName\",\n      value: function jsxParseElementName() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var node = this.jsxParseNamespacedName();\n\n        if (node.type === \"JSXNamespacedName\") {\n          return node;\n        }\n\n        while (this.eat(types.dot)) {\n          var newNode = this.startNodeAt(startPos, startLoc);\n          newNode.object = node;\n          newNode.property = this.jsxParseIdentifier();\n          node = this.finishNode(newNode, \"JSXMemberExpression\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"jsxParseAttributeValue\",\n      value: function jsxParseAttributeValue() {\n        var node;\n\n        switch (this.state.type) {\n          case types.braceL:\n            node = this.startNode();\n            this.next();\n            node = this.jsxParseExpressionContainer(node);\n\n            if (node.expression.type === \"JSXEmptyExpression\") {\n              this.raise(node.start, JsxErrors.AttributeIsEmpty);\n            }\n\n            return node;\n\n          case types.jsxTagStart:\n          case types.string:\n            return this.parseExprAtom();\n\n          default:\n            throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n        }\n      }\n    }, {\n      key: \"jsxParseEmptyExpression\",\n      value: function jsxParseEmptyExpression() {\n        var node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n        return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n      }\n    }, {\n      key: \"jsxParseSpreadChild\",\n      value: function jsxParseSpreadChild(node) {\n        this.next();\n        node.expression = this.parseExpression();\n        this.expect(types.braceR);\n        return this.finishNode(node, \"JSXSpreadChild\");\n      }\n    }, {\n      key: \"jsxParseExpressionContainer\",\n      value: function jsxParseExpressionContainer(node) {\n        if (this.match(types.braceR)) {\n          node.expression = this.jsxParseEmptyExpression();\n        } else {\n          var expression = this.parseExpression();\n          node.expression = expression;\n        }\n\n        this.expect(types.braceR);\n        return this.finishNode(node, \"JSXExpressionContainer\");\n      }\n    }, {\n      key: \"jsxParseAttribute\",\n      value: function jsxParseAttribute() {\n        var node = this.startNode();\n\n        if (this.eat(types.braceL)) {\n          this.expect(types.ellipsis);\n          node.argument = this.parseMaybeAssignAllowIn();\n          this.expect(types.braceR);\n          return this.finishNode(node, \"JSXSpreadAttribute\");\n        }\n\n        node.name = this.jsxParseNamespacedName();\n        node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n        return this.finishNode(node, \"JSXAttribute\");\n      }\n    }, {\n      key: \"jsxParseOpeningElementAt\",\n      value: function jsxParseOpeningElementAt(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n\n        if (this.match(types.jsxTagEnd)) {\n          this.expect(types.jsxTagEnd);\n          return this.finishNode(node, \"JSXOpeningFragment\");\n        }\n\n        node.name = this.jsxParseElementName();\n        return this.jsxParseOpeningElementAfterName(node);\n      }\n    }, {\n      key: \"jsxParseOpeningElementAfterName\",\n      value: function jsxParseOpeningElementAfterName(node) {\n        var attributes = [];\n\n        while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n          attributes.push(this.jsxParseAttribute());\n        }\n\n        node.attributes = attributes;\n        node.selfClosing = this.eat(types.slash);\n        this.expect(types.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningElement\");\n      }\n    }, {\n      key: \"jsxParseClosingElementAt\",\n      value: function jsxParseClosingElementAt(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n\n        if (this.match(types.jsxTagEnd)) {\n          this.expect(types.jsxTagEnd);\n          return this.finishNode(node, \"JSXClosingFragment\");\n        }\n\n        node.name = this.jsxParseElementName();\n        this.expect(types.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingElement\");\n      }\n    }, {\n      key: \"jsxParseElementAt\",\n      value: function jsxParseElementAt(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n        var children = [];\n        var openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n        var closingElement = null;\n\n        if (!openingElement.selfClosing) {\n          contents: for (;;) {\n            switch (this.state.type) {\n              case types.jsxTagStart:\n                startPos = this.state.start;\n                startLoc = this.state.startLoc;\n                this.next();\n\n                if (this.eat(types.slash)) {\n                  closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n                  break contents;\n                }\n\n                children.push(this.jsxParseElementAt(startPos, startLoc));\n                break;\n\n              case types.jsxText:\n                children.push(this.parseExprAtom());\n                break;\n\n              case types.braceL:\n                {\n                  var _node5 = this.startNode();\n\n                  this.next();\n\n                  if (this.match(types.ellipsis)) {\n                    children.push(this.jsxParseSpreadChild(_node5));\n                  } else {\n                    children.push(this.jsxParseExpressionContainer(_node5));\n                  }\n\n                  break;\n                }\n\n              default:\n                throw this.unexpected();\n            }\n          }\n\n          if (isFragment(openingElement) && !isFragment(closingElement)) {\n            this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n          } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n            this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n          } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n            if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n              this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n            }\n          }\n        }\n\n        if (isFragment(openingElement)) {\n          node.openingFragment = openingElement;\n          node.closingFragment = closingElement;\n        } else {\n          node.openingElement = openingElement;\n          node.closingElement = closingElement;\n        }\n\n        node.children = children;\n\n        if (this.isRelational(\"<\")) {\n          throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n        }\n\n        return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n      }\n    }, {\n      key: \"jsxParseElement\",\n      value: function jsxParseElement() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        this.next();\n        return this.jsxParseElementAt(startPos, startLoc);\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom(refExpressionErrors) {\n        if (this.match(types.jsxText)) {\n          return this.parseLiteral(this.state.value, \"JSXText\");\n        } else if (this.match(types.jsxTagStart)) {\n          return this.jsxParseElement();\n        } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n          this.finishToken(types.jsxTagStart);\n          return this.jsxParseElement();\n        } else {\n          return _get(_getPrototypeOf(_class2.prototype), \"parseExprAtom\", this).call(this, refExpressionErrors);\n        }\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        if (this.state.inPropertyName) return _get(_getPrototypeOf(_class2.prototype), \"getTokenFromCode\", this).call(this, code);\n        var context = this.curContext();\n\n        if (context === types$1.j_expr) {\n          return this.jsxReadToken();\n        }\n\n        if (context === types$1.j_oTag || context === types$1.j_cTag) {\n          if (isIdentifierStart(code)) {\n            return this.jsxReadWord();\n          }\n\n          if (code === 62) {\n            ++this.state.pos;\n            return this.finishToken(types.jsxTagEnd);\n          }\n\n          if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n            return this.jsxReadString(code);\n          }\n        }\n\n        if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n          ++this.state.pos;\n          return this.finishToken(types.jsxTagStart);\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"getTokenFromCode\", this).call(this, code);\n      }\n    }, {\n      key: \"updateContext\",\n      value: function updateContext(prevType) {\n        if (this.match(types.braceL)) {\n          var curContext = this.curContext();\n\n          if (curContext === types$1.j_oTag) {\n            this.state.context.push(types$1.braceExpression);\n          } else if (curContext === types$1.j_expr) {\n            this.state.context.push(types$1.templateQuasi);\n          } else {\n            _get(_getPrototypeOf(_class2.prototype), \"updateContext\", this).call(this, prevType);\n          }\n\n          this.state.exprAllowed = true;\n        } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n          this.state.context.length -= 2;\n          this.state.context.push(types$1.j_cTag);\n          this.state.exprAllowed = false;\n        } else {\n          return _get(_getPrototypeOf(_class2.prototype), \"updateContext\", this).call(this, prevType);\n        }\n      }\n    }]);\n\n    return _class2;\n  }(superClass);\n};\n\nvar TypeScriptScope = /*#__PURE__*/function (_Scope2) {\n  _inherits(TypeScriptScope, _Scope2);\n\n  var _super8 = _createSuper(TypeScriptScope);\n\n  function TypeScriptScope() {\n    var _this17;\n\n    _classCallCheck(this, TypeScriptScope);\n\n    for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n      args[_key12] = arguments[_key12];\n    }\n\n    _this17 = _super8.call.apply(_super8, [this].concat(args));\n    _this17.types = [];\n    _this17.enums = [];\n    _this17.constEnums = [];\n    _this17.classes = [];\n    _this17.exportOnlyBindings = [];\n    return _this17;\n  }\n\n  return TypeScriptScope;\n}(Scope);\n\nvar TypeScriptScopeHandler = /*#__PURE__*/function (_ScopeHandler2) {\n  _inherits(TypeScriptScopeHandler, _ScopeHandler2);\n\n  var _super9 = _createSuper(TypeScriptScopeHandler);\n\n  function TypeScriptScopeHandler() {\n    _classCallCheck(this, TypeScriptScopeHandler);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(TypeScriptScopeHandler, [{\n    key: \"createScope\",\n    value: function createScope(flags) {\n      return new TypeScriptScope(flags);\n    }\n  }, {\n    key: \"declareName\",\n    value: function declareName(name, bindingType, pos) {\n      var scope = this.currentScope();\n\n      if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n        this.maybeExportDefined(scope, name);\n        scope.exportOnlyBindings.push(name);\n        return;\n      }\n\n      _get(_getPrototypeOf(TypeScriptScopeHandler.prototype), \"declareName\", this).apply(this, arguments);\n\n      if (bindingType & BIND_KIND_TYPE) {\n        if (!(bindingType & BIND_KIND_VALUE)) {\n          this.checkRedeclarationInScope(scope, name, bindingType, pos);\n          this.maybeExportDefined(scope, name);\n        }\n\n        scope.types.push(name);\n      }\n\n      if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n      if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n      if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n    }\n  }, {\n    key: \"isRedeclaredInScope\",\n    value: function isRedeclaredInScope(scope, name, bindingType) {\n      if (scope.enums.indexOf(name) > -1) {\n        if (bindingType & BIND_FLAGS_TS_ENUM) {\n          var isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n          var wasConst = scope.constEnums.indexOf(name) > -1;\n          return isConst !== wasConst;\n        }\n\n        return true;\n      }\n\n      if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n        if (scope.lexical.indexOf(name) > -1) {\n          return !!(bindingType & BIND_KIND_VALUE);\n        } else {\n          return false;\n        }\n      }\n\n      if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n        return true;\n      }\n\n      return _get(_getPrototypeOf(TypeScriptScopeHandler.prototype), \"isRedeclaredInScope\", this).apply(this, arguments);\n    }\n  }, {\n    key: \"checkLocalExport\",\n    value: function checkLocalExport(id) {\n      if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n        _get(_getPrototypeOf(TypeScriptScopeHandler.prototype), \"checkLocalExport\", this).call(this, id);\n      }\n    }\n  }]);\n\n  return TypeScriptScopeHandler;\n}(ScopeHandler);\n\nvar PARAM = 0,\n    PARAM_YIELD = 1,\n    PARAM_AWAIT = 2,\n    PARAM_RETURN = 4,\n    PARAM_IN = 8;\n\nvar ProductionParameterHandler = /*#__PURE__*/function () {\n  function ProductionParameterHandler() {\n    _classCallCheck(this, ProductionParameterHandler);\n\n    this.stacks = [];\n  }\n\n  _createClass(ProductionParameterHandler, [{\n    key: \"enter\",\n    value: function enter(flags) {\n      this.stacks.push(flags);\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      this.stacks.pop();\n    }\n  }, {\n    key: \"currentFlags\",\n    value: function currentFlags() {\n      return this.stacks[this.stacks.length - 1];\n    }\n  }, {\n    key: \"hasAwait\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_AWAIT) > 0;\n    }\n  }, {\n    key: \"hasYield\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_YIELD) > 0;\n    }\n  }, {\n    key: \"hasReturn\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_RETURN) > 0;\n    }\n  }, {\n    key: \"hasIn\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_IN) > 0;\n    }\n  }]);\n\n  return ProductionParameterHandler;\n}();\n\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(\"Unexpected \".concat(x, \" value.\"));\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nvar TSErrors = Object.freeze({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = function typescript(superClass) {\n  return /*#__PURE__*/function (_superClass4) {\n    _inherits(_class3, _superClass4);\n\n    var _super10 = _createSuper(_class3);\n\n    function _class3() {\n      _classCallCheck(this, _class3);\n\n      return _super10.apply(this, arguments);\n    }\n\n    _createClass(_class3, [{\n      key: \"getScopeHandler\",\n      value: function getScopeHandler() {\n        return TypeScriptScopeHandler;\n      }\n    }, {\n      key: \"tsIsIdentifier\",\n      value: function tsIsIdentifier() {\n        return this.match(types.name);\n      }\n    }, {\n      key: \"tsNextTokenCanFollowModifier\",\n      value: function tsNextTokenCanFollowModifier() {\n        this.next();\n        return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n      }\n    }, {\n      key: \"tsParseModifier\",\n      value: function tsParseModifier(allowedModifiers) {\n        if (!this.match(types.name)) {\n          return undefined;\n        }\n\n        var modifier = this.state.value;\n\n        if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n\n        return undefined;\n      }\n    }, {\n      key: \"tsParseModifiers\",\n      value: function tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n        for (;;) {\n          var startPos = this.state.start;\n          var modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n          if (!modifier) break;\n\n          if (tsIsAccessModifier(modifier)) {\n            if (modified.accessibility) {\n              this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n            } else {\n              modified.accessibility = modifier;\n            }\n          } else {\n            if (Object.hasOwnProperty.call(modified, modifier)) {\n              this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n            }\n\n            modified[modifier] = true;\n          }\n\n          if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n            this.raise(startPos, errorTemplate, modifier);\n          }\n        }\n      }\n    }, {\n      key: \"tsIsListTerminator\",\n      value: function tsIsListTerminator(kind) {\n        switch (kind) {\n          case \"EnumMembers\":\n          case \"TypeMembers\":\n            return this.match(types.braceR);\n\n          case \"HeritageClauseElement\":\n            return this.match(types.braceL);\n\n          case \"TupleElementTypes\":\n            return this.match(types.bracketR);\n\n          case \"TypeParametersOrArguments\":\n            return this.isRelational(\">\");\n        }\n\n        throw new Error(\"Unreachable\");\n      }\n    }, {\n      key: \"tsParseList\",\n      value: function tsParseList(kind, parseElement) {\n        var result = [];\n\n        while (!this.tsIsListTerminator(kind)) {\n          result.push(parseElement());\n        }\n\n        return result;\n      }\n    }, {\n      key: \"tsParseDelimitedList\",\n      value: function tsParseDelimitedList(kind, parseElement) {\n        return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n      }\n    }, {\n      key: \"tsParseDelimitedListWorker\",\n      value: function tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n        var result = [];\n\n        for (;;) {\n          if (this.tsIsListTerminator(kind)) {\n            break;\n          }\n\n          var element = parseElement();\n\n          if (element == null) {\n            return undefined;\n          }\n\n          result.push(element);\n\n          if (this.eat(types.comma)) {\n            continue;\n          }\n\n          if (this.tsIsListTerminator(kind)) {\n            break;\n          }\n\n          if (expectSuccess) {\n            this.expect(types.comma);\n          }\n\n          return undefined;\n        }\n\n        return result;\n      }\n    }, {\n      key: \"tsParseBracketedList\",\n      value: function tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n        if (!skipFirstToken) {\n          if (bracket) {\n            this.expect(types.bracketL);\n          } else {\n            this.expectRelational(\"<\");\n          }\n        }\n\n        var result = this.tsParseDelimitedList(kind, parseElement);\n\n        if (bracket) {\n          this.expect(types.bracketR);\n        } else {\n          this.expectRelational(\">\");\n        }\n\n        return result;\n      }\n    }, {\n      key: \"tsParseImportType\",\n      value: function tsParseImportType() {\n        var node = this.startNode();\n        this.expect(types._import);\n        this.expect(types.parenL);\n\n        if (!this.match(types.string)) {\n          this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n        }\n\n        node.argument = this.parseExprAtom();\n        this.expect(types.parenR);\n\n        if (this.eat(types.dot)) {\n          node.qualifier = this.tsParseEntityName(true);\n        }\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n\n        return this.finishNode(node, \"TSImportType\");\n      }\n    }, {\n      key: \"tsParseEntityName\",\n      value: function tsParseEntityName(allowReservedWords) {\n        var entity = this.parseIdentifier();\n\n        while (this.eat(types.dot)) {\n          var node = this.startNodeAtNode(entity);\n          node.left = entity;\n          node.right = this.parseIdentifier(allowReservedWords);\n          entity = this.finishNode(node, \"TSQualifiedName\");\n        }\n\n        return entity;\n      }\n    }, {\n      key: \"tsParseTypeReference\",\n      value: function tsParseTypeReference() {\n        var node = this.startNode();\n        node.typeName = this.tsParseEntityName(false);\n\n        if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n\n        return this.finishNode(node, \"TSTypeReference\");\n      }\n    }, {\n      key: \"tsParseThisTypePredicate\",\n      value: function tsParseThisTypePredicate(lhs) {\n        this.next();\n        var node = this.startNodeAtNode(lhs);\n        node.parameterName = lhs;\n        node.typeAnnotation = this.tsParseTypeAnnotation(false);\n        node.asserts = false;\n        return this.finishNode(node, \"TSTypePredicate\");\n      }\n    }, {\n      key: \"tsParseThisTypeNode\",\n      value: function tsParseThisTypeNode() {\n        var node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSThisType\");\n      }\n    }, {\n      key: \"tsParseTypeQuery\",\n      value: function tsParseTypeQuery() {\n        var node = this.startNode();\n        this.expect(types._typeof);\n\n        if (this.match(types._import)) {\n          node.exprName = this.tsParseImportType();\n        } else {\n          node.exprName = this.tsParseEntityName(true);\n        }\n\n        return this.finishNode(node, \"TSTypeQuery\");\n      }\n    }, {\n      key: \"tsParseTypeParameter\",\n      value: function tsParseTypeParameter() {\n        var node = this.startNode();\n        node.name = this.parseIdentifierName(node.start);\n        node.constraint = this.tsEatThenParseType(types._extends);\n        node.default = this.tsEatThenParseType(types.eq);\n        return this.finishNode(node, \"TSTypeParameter\");\n      }\n    }, {\n      key: \"tsTryParseTypeParameters\",\n      value: function tsTryParseTypeParameters() {\n        if (this.isRelational(\"<\")) {\n          return this.tsParseTypeParameters();\n        }\n      }\n    }, {\n      key: \"tsParseTypeParameters\",\n      value: function tsParseTypeParameters() {\n        var node = this.startNode();\n\n        if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n          this.next();\n        } else {\n          this.unexpected();\n        }\n\n        node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n        if (node.params.length === 0) {\n          this.raise(node.start, TSErrors.EmptyTypeParameters);\n        }\n\n        return this.finishNode(node, \"TSTypeParameterDeclaration\");\n      }\n    }, {\n      key: \"tsTryNextParseConstantContext\",\n      value: function tsTryNextParseConstantContext() {\n        if (this.lookahead().type === types._const) {\n          this.next();\n          return this.tsParseTypeReference();\n        }\n\n        return null;\n      }\n    }, {\n      key: \"tsFillSignature\",\n      value: function tsFillSignature(returnToken, signature) {\n        var returnTokenRequired = returnToken === types.arrow;\n        signature.typeParameters = this.tsTryParseTypeParameters();\n        this.expect(types.parenL);\n        signature.parameters = this.tsParseBindingListForSignature();\n\n        if (returnTokenRequired) {\n          signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n        } else if (this.match(returnToken)) {\n          signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n        }\n      }\n    }, {\n      key: \"tsParseBindingListForSignature\",\n      value: function tsParseBindingListForSignature() {\n        var _this18 = this;\n\n        return this.parseBindingList(types.parenR, 41).map(function (pattern) {\n          if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n            _this18.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n          }\n\n          return pattern;\n        });\n      }\n    }, {\n      key: \"tsParseTypeMemberSemicolon\",\n      value: function tsParseTypeMemberSemicolon() {\n        if (!this.eat(types.comma)) {\n          this.semicolon();\n        }\n      }\n    }, {\n      key: \"tsParseSignatureMember\",\n      value: function tsParseSignatureMember(kind, node) {\n        this.tsFillSignature(types.colon, node);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(node, kind);\n      }\n    }, {\n      key: \"tsIsUnambiguouslyIndexSignature\",\n      value: function tsIsUnambiguouslyIndexSignature() {\n        this.next();\n        return this.eat(types.name) && this.match(types.colon);\n      }\n    }, {\n      key: \"tsTryParseIndexSignature\",\n      value: function tsTryParseIndexSignature(node) {\n        if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n          return undefined;\n        }\n\n        this.expect(types.bracketL);\n        var id = this.parseIdentifier();\n        id.typeAnnotation = this.tsParseTypeAnnotation();\n        this.resetEndLocation(id);\n        this.expect(types.bracketR);\n        node.parameters = [id];\n        var type = this.tsTryParseTypeAnnotation();\n        if (type) node.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(node, \"TSIndexSignature\");\n      }\n    }, {\n      key: \"tsParsePropertyOrMethodSignature\",\n      value: function tsParsePropertyOrMethodSignature(node, readonly) {\n        if (this.eat(types.question)) node.optional = true;\n        var nodeAny = node;\n\n        if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          if (readonly) {\n            this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n          }\n\n          var method = nodeAny;\n          this.tsFillSignature(types.colon, method);\n          this.tsParseTypeMemberSemicolon();\n          return this.finishNode(method, \"TSMethodSignature\");\n        } else {\n          var property = nodeAny;\n          if (readonly) property.readonly = true;\n          var type = this.tsTryParseTypeAnnotation();\n          if (type) property.typeAnnotation = type;\n          this.tsParseTypeMemberSemicolon();\n          return this.finishNode(property, \"TSPropertySignature\");\n        }\n      }\n    }, {\n      key: \"tsParseTypeMember\",\n      value: function tsParseTypeMember() {\n        var node = this.startNode();\n\n        if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n        }\n\n        if (this.match(types._new)) {\n          var id = this.startNode();\n          this.next();\n\n          if (this.match(types.parenL) || this.isRelational(\"<\")) {\n            return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n          } else {\n            node.key = this.createIdentifier(id, \"new\");\n            return this.tsParsePropertyOrMethodSignature(node, false);\n          }\n        }\n\n        this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"], TSErrors.InvalidModifierOnTypeMember);\n        var idx = this.tsTryParseIndexSignature(node);\n\n        if (idx) {\n          return idx;\n        }\n\n        this.parsePropertyName(node, false);\n        return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n      }\n    }, {\n      key: \"tsParseTypeLiteral\",\n      value: function tsParseTypeLiteral() {\n        var node = this.startNode();\n        node.members = this.tsParseObjectTypeMembers();\n        return this.finishNode(node, \"TSTypeLiteral\");\n      }\n    }, {\n      key: \"tsParseObjectTypeMembers\",\n      value: function tsParseObjectTypeMembers() {\n        this.expect(types.braceL);\n        var members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n        this.expect(types.braceR);\n        return members;\n      }\n    }, {\n      key: \"tsIsStartOfMappedType\",\n      value: function tsIsStartOfMappedType() {\n        this.next();\n\n        if (this.eat(types.plusMin)) {\n          return this.isContextual(\"readonly\");\n        }\n\n        if (this.isContextual(\"readonly\")) {\n          this.next();\n        }\n\n        if (!this.match(types.bracketL)) {\n          return false;\n        }\n\n        this.next();\n\n        if (!this.tsIsIdentifier()) {\n          return false;\n        }\n\n        this.next();\n        return this.match(types._in);\n      }\n    }, {\n      key: \"tsParseMappedTypeParameter\",\n      value: function tsParseMappedTypeParameter() {\n        var node = this.startNode();\n        node.name = this.parseIdentifierName(node.start);\n        node.constraint = this.tsExpectThenParseType(types._in);\n        return this.finishNode(node, \"TSTypeParameter\");\n      }\n    }, {\n      key: \"tsParseMappedType\",\n      value: function tsParseMappedType() {\n        var node = this.startNode();\n        this.expect(types.braceL);\n\n        if (this.match(types.plusMin)) {\n          node.readonly = this.state.value;\n          this.next();\n          this.expectContextual(\"readonly\");\n        } else if (this.eatContextual(\"readonly\")) {\n          node.readonly = true;\n        }\n\n        this.expect(types.bracketL);\n        node.typeParameter = this.tsParseMappedTypeParameter();\n        node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n        this.expect(types.bracketR);\n\n        if (this.match(types.plusMin)) {\n          node.optional = this.state.value;\n          this.next();\n          this.expect(types.question);\n        } else if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.typeAnnotation = this.tsTryParseType();\n        this.semicolon();\n        this.expect(types.braceR);\n        return this.finishNode(node, \"TSMappedType\");\n      }\n    }, {\n      key: \"tsParseTupleType\",\n      value: function tsParseTupleType() {\n        var _this19 = this;\n\n        var node = this.startNode();\n        node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n        var seenOptionalElement = false;\n        var labeledElements = null;\n        node.elementTypes.forEach(function (elementNode) {\n          var _labeledElements;\n\n          var _elementNode = elementNode,\n              type = _elementNode.type;\n\n          if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n            _this19.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n          }\n\n          seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n          if (type === \"TSRestType\") {\n            elementNode = elementNode.typeAnnotation;\n            type = elementNode.type;\n          }\n\n          var isLabeled = type === \"TSNamedTupleMember\";\n          labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n          if (labeledElements !== isLabeled) {\n            _this19.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n          }\n        });\n        return this.finishNode(node, \"TSTupleType\");\n      }\n    }, {\n      key: \"tsParseTupleElementType\",\n      value: function tsParseTupleElementType() {\n        var _this$state = this.state,\n            startPos = _this$state.start,\n            startLoc = _this$state.startLoc;\n        var rest = this.eat(types.ellipsis);\n        var type = this.tsParseType();\n        var optional = this.eat(types.question);\n        var labeled = this.eat(types.colon);\n\n        if (labeled) {\n          var labeledNode = this.startNodeAtNode(type);\n          labeledNode.optional = optional;\n\n          if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n            labeledNode.label = type.typeName;\n          } else {\n            this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n            labeledNode.label = type;\n          }\n\n          labeledNode.elementType = this.tsParseType();\n          type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n        } else if (optional) {\n          var optionalTypeNode = this.startNodeAtNode(type);\n          optionalTypeNode.typeAnnotation = type;\n          type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n        }\n\n        if (rest) {\n          var restNode = this.startNodeAt(startPos, startLoc);\n          restNode.typeAnnotation = type;\n          type = this.finishNode(restNode, \"TSRestType\");\n        }\n\n        return type;\n      }\n    }, {\n      key: \"tsParseParenthesizedType\",\n      value: function tsParseParenthesizedType() {\n        var node = this.startNode();\n        this.expect(types.parenL);\n        node.typeAnnotation = this.tsParseType();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"TSParenthesizedType\");\n      }\n    }, {\n      key: \"tsParseFunctionOrConstructorType\",\n      value: function tsParseFunctionOrConstructorType(type, abstract) {\n        var node = this.startNode();\n\n        if (type === \"TSConstructorType\") {\n          node.abstract = !!abstract;\n          if (abstract) this.next();\n          this.next();\n        }\n\n        this.tsFillSignature(types.arrow, node);\n        return this.finishNode(node, type);\n      }\n    }, {\n      key: \"tsParseLiteralTypeNode\",\n      value: function tsParseLiteralTypeNode() {\n        var _this20 = this;\n\n        var node = this.startNode();\n\n        node.literal = function () {\n          switch (_this20.state.type) {\n            case types.num:\n            case types.bigint:\n            case types.string:\n            case types._true:\n            case types._false:\n              return _this20.parseExprAtom();\n\n            default:\n              throw _this20.unexpected();\n          }\n        }();\n\n        return this.finishNode(node, \"TSLiteralType\");\n      }\n    }, {\n      key: \"tsParseTemplateLiteralType\",\n      value: function tsParseTemplateLiteralType() {\n        var node = this.startNode();\n        node.literal = this.parseTemplate(false);\n        return this.finishNode(node, \"TSLiteralType\");\n      }\n    }, {\n      key: \"parseTemplateSubstitution\",\n      value: function parseTemplateSubstitution() {\n        if (this.state.inType) return this.tsParseType();\n        return _get(_getPrototypeOf(_class3.prototype), \"parseTemplateSubstitution\", this).call(this);\n      }\n    }, {\n      key: \"tsParseThisTypeOrThisTypePredicate\",\n      value: function tsParseThisTypeOrThisTypePredicate() {\n        var thisKeyword = this.tsParseThisTypeNode();\n\n        if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n          return this.tsParseThisTypePredicate(thisKeyword);\n        } else {\n          return thisKeyword;\n        }\n      }\n    }, {\n      key: \"tsParseNonArrayType\",\n      value: function tsParseNonArrayType() {\n        switch (this.state.type) {\n          case types.name:\n          case types._void:\n          case types._null:\n            {\n              var type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n              if (type !== undefined && this.lookaheadCharCode() !== 46) {\n                var node = this.startNode();\n                this.next();\n                return this.finishNode(node, type);\n              }\n\n              return this.tsParseTypeReference();\n            }\n\n          case types.string:\n          case types.num:\n          case types.bigint:\n          case types._true:\n          case types._false:\n            return this.tsParseLiteralTypeNode();\n\n          case types.plusMin:\n            if (this.state.value === \"-\") {\n              var _node6 = this.startNode();\n\n              var nextToken = this.lookahead();\n\n              if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n                throw this.unexpected();\n              }\n\n              _node6.literal = this.parseMaybeUnary();\n              return this.finishNode(_node6, \"TSLiteralType\");\n            }\n\n            break;\n\n          case types._this:\n            return this.tsParseThisTypeOrThisTypePredicate();\n\n          case types._typeof:\n            return this.tsParseTypeQuery();\n\n          case types._import:\n            return this.tsParseImportType();\n\n          case types.braceL:\n            return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n          case types.bracketL:\n            return this.tsParseTupleType();\n\n          case types.parenL:\n            return this.tsParseParenthesizedType();\n\n          case types.backQuote:\n            return this.tsParseTemplateLiteralType();\n        }\n\n        throw this.unexpected();\n      }\n    }, {\n      key: \"tsParseArrayTypeOrHigher\",\n      value: function tsParseArrayTypeOrHigher() {\n        var type = this.tsParseNonArrayType();\n\n        while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n          if (this.match(types.bracketR)) {\n            var node = this.startNodeAtNode(type);\n            node.elementType = type;\n            this.expect(types.bracketR);\n            type = this.finishNode(node, \"TSArrayType\");\n          } else {\n            var _node7 = this.startNodeAtNode(type);\n\n            _node7.objectType = type;\n            _node7.indexType = this.tsParseType();\n            this.expect(types.bracketR);\n            type = this.finishNode(_node7, \"TSIndexedAccessType\");\n          }\n        }\n\n        return type;\n      }\n    }, {\n      key: \"tsParseTypeOperator\",\n      value: function tsParseTypeOperator(operator) {\n        var node = this.startNode();\n        this.expectContextual(operator);\n        node.operator = operator;\n        node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n        if (operator === \"readonly\") {\n          this.tsCheckTypeAnnotationForReadOnly(node);\n        }\n\n        return this.finishNode(node, \"TSTypeOperator\");\n      }\n    }, {\n      key: \"tsCheckTypeAnnotationForReadOnly\",\n      value: function tsCheckTypeAnnotationForReadOnly(node) {\n        switch (node.typeAnnotation.type) {\n          case \"TSTupleType\":\n          case \"TSArrayType\":\n            return;\n\n          default:\n            this.raise(node.start, TSErrors.UnexpectedReadonly);\n        }\n      }\n    }, {\n      key: \"tsParseInferType\",\n      value: function tsParseInferType() {\n        var node = this.startNode();\n        this.expectContextual(\"infer\");\n        var typeParameter = this.startNode();\n        typeParameter.name = this.parseIdentifierName(typeParameter.start);\n        node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n        return this.finishNode(node, \"TSInferType\");\n      }\n    }, {\n      key: \"tsParseTypeOperatorOrHigher\",\n      value: function tsParseTypeOperatorOrHigher() {\n        var _this21 = this;\n\n        var operator = [\"keyof\", \"unique\", \"readonly\"].find(function (kw) {\n          return _this21.isContextual(kw);\n        });\n        return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n      }\n    }, {\n      key: \"tsParseUnionOrIntersectionType\",\n      value: function tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n        var node = this.startNode();\n        var hasLeadingOperator = this.eat(operator);\n        var types = [];\n\n        do {\n          types.push(parseConstituentType());\n        } while (this.eat(operator));\n\n        if (types.length === 1 && !hasLeadingOperator) {\n          return types[0];\n        }\n\n        node.types = types;\n        return this.finishNode(node, kind);\n      }\n    }, {\n      key: \"tsParseIntersectionTypeOrHigher\",\n      value: function tsParseIntersectionTypeOrHigher() {\n        return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n      }\n    }, {\n      key: \"tsParseUnionTypeOrHigher\",\n      value: function tsParseUnionTypeOrHigher() {\n        return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n      }\n    }, {\n      key: \"tsIsStartOfFunctionType\",\n      value: function tsIsStartOfFunctionType() {\n        if (this.isRelational(\"<\")) {\n          return true;\n        }\n\n        return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n      }\n    }, {\n      key: \"tsSkipParameterStart\",\n      value: function tsSkipParameterStart() {\n        if (this.match(types.name) || this.match(types._this)) {\n          this.next();\n          return true;\n        }\n\n        if (this.match(types.braceL)) {\n          var braceStackCounter = 1;\n          this.next();\n\n          while (braceStackCounter > 0) {\n            if (this.match(types.braceL)) {\n              ++braceStackCounter;\n            } else if (this.match(types.braceR)) {\n              --braceStackCounter;\n            }\n\n            this.next();\n          }\n\n          return true;\n        }\n\n        if (this.match(types.bracketL)) {\n          var _braceStackCounter = 1;\n          this.next();\n\n          while (_braceStackCounter > 0) {\n            if (this.match(types.bracketL)) {\n              ++_braceStackCounter;\n            } else if (this.match(types.bracketR)) {\n              --_braceStackCounter;\n            }\n\n            this.next();\n          }\n\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"tsIsUnambiguouslyStartOfFunctionType\",\n      value: function tsIsUnambiguouslyStartOfFunctionType() {\n        this.next();\n\n        if (this.match(types.parenR) || this.match(types.ellipsis)) {\n          return true;\n        }\n\n        if (this.tsSkipParameterStart()) {\n          if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n            return true;\n          }\n\n          if (this.match(types.parenR)) {\n            this.next();\n\n            if (this.match(types.arrow)) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: \"tsParseTypeOrTypePredicateAnnotation\",\n      value: function tsParseTypeOrTypePredicateAnnotation(returnToken) {\n        var _this22 = this;\n\n        return this.tsInType(function () {\n          var t = _this22.startNode();\n\n          _this22.expect(returnToken);\n\n          var node = _this22.startNode();\n\n          var asserts = !!_this22.tsTryParse(_this22.tsParseTypePredicateAsserts.bind(_this22));\n\n          if (asserts && _this22.match(types._this)) {\n            var thisTypePredicate = _this22.tsParseThisTypeOrThisTypePredicate();\n\n            if (thisTypePredicate.type === \"TSThisType\") {\n              node.parameterName = thisTypePredicate;\n              node.asserts = true;\n              thisTypePredicate = _this22.finishNode(node, \"TSTypePredicate\");\n            } else {\n              _this22.resetStartLocationFromNode(thisTypePredicate, node);\n\n              thisTypePredicate.asserts = true;\n            }\n\n            t.typeAnnotation = thisTypePredicate;\n            return _this22.finishNode(t, \"TSTypeAnnotation\");\n          }\n\n          var typePredicateVariable = _this22.tsIsIdentifier() && _this22.tsTryParse(_this22.tsParseTypePredicatePrefix.bind(_this22));\n\n          if (!typePredicateVariable) {\n            if (!asserts) {\n              return _this22.tsParseTypeAnnotation(false, t);\n            }\n\n            node.parameterName = _this22.parseIdentifier();\n            node.asserts = asserts;\n            t.typeAnnotation = _this22.finishNode(node, \"TSTypePredicate\");\n            return _this22.finishNode(t, \"TSTypeAnnotation\");\n          }\n\n          var type = _this22.tsParseTypeAnnotation(false);\n\n          node.parameterName = typePredicateVariable;\n          node.typeAnnotation = type;\n          node.asserts = asserts;\n          t.typeAnnotation = _this22.finishNode(node, \"TSTypePredicate\");\n          return _this22.finishNode(t, \"TSTypeAnnotation\");\n        });\n      }\n    }, {\n      key: \"tsTryParseTypeOrTypePredicateAnnotation\",\n      value: function tsTryParseTypeOrTypePredicateAnnotation() {\n        return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n      }\n    }, {\n      key: \"tsTryParseTypeAnnotation\",\n      value: function tsTryParseTypeAnnotation() {\n        return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n      }\n    }, {\n      key: \"tsTryParseType\",\n      value: function tsTryParseType() {\n        return this.tsEatThenParseType(types.colon);\n      }\n    }, {\n      key: \"tsParseTypePredicatePrefix\",\n      value: function tsParseTypePredicatePrefix() {\n        var id = this.parseIdentifier();\n\n        if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n          this.next();\n          return id;\n        }\n      }\n    }, {\n      key: \"tsParseTypePredicateAsserts\",\n      value: function tsParseTypePredicateAsserts() {\n        if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n          return false;\n        }\n\n        var containsEsc = this.state.containsEsc;\n        this.next();\n\n        if (!this.match(types.name) && !this.match(types._this)) {\n          return false;\n        }\n\n        if (containsEsc) {\n          this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n        }\n\n        return true;\n      }\n    }, {\n      key: \"tsParseTypeAnnotation\",\n      value: function tsParseTypeAnnotation() {\n        var _this23 = this;\n\n        var eatColon = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.startNode();\n        this.tsInType(function () {\n          if (eatColon) _this23.expect(types.colon);\n          t.typeAnnotation = _this23.tsParseType();\n        });\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n    }, {\n      key: \"tsParseType\",\n      value: function tsParseType() {\n        assert(this.state.inType);\n        var type = this.tsParseNonConditionalType();\n\n        if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n          return type;\n        }\n\n        var node = this.startNodeAtNode(type);\n        node.checkType = type;\n        node.extendsType = this.tsParseNonConditionalType();\n        this.expect(types.question);\n        node.trueType = this.tsParseType();\n        this.expect(types.colon);\n        node.falseType = this.tsParseType();\n        return this.finishNode(node, \"TSConditionalType\");\n      }\n    }, {\n      key: \"isAbstractConstructorSignature\",\n      value: function isAbstractConstructorSignature() {\n        return this.isContextual(\"abstract\") && this.lookahead().type === types._new;\n      }\n    }, {\n      key: \"tsParseNonConditionalType\",\n      value: function tsParseNonConditionalType() {\n        if (this.tsIsStartOfFunctionType()) {\n          return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n        }\n\n        if (this.match(types._new)) {\n          return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n        } else if (this.isAbstractConstructorSignature()) {\n          return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n        }\n\n        return this.tsParseUnionTypeOrHigher();\n      }\n    }, {\n      key: \"tsParseTypeAssertion\",\n      value: function tsParseTypeAssertion() {\n        var node = this.startNode();\n\n        var _const = this.tsTryNextParseConstantContext();\n\n        node.typeAnnotation = _const || this.tsNextThenParseType();\n        this.expectRelational(\">\");\n        node.expression = this.parseMaybeUnary();\n        return this.finishNode(node, \"TSTypeAssertion\");\n      }\n    }, {\n      key: \"tsParseHeritageClause\",\n      value: function tsParseHeritageClause(descriptor) {\n        var originalStart = this.state.start;\n        var delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n        if (!delimitedList.length) {\n          this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n        }\n\n        return delimitedList;\n      }\n    }, {\n      key: \"tsParseExpressionWithTypeArguments\",\n      value: function tsParseExpressionWithTypeArguments() {\n        var node = this.startNode();\n        node.expression = this.tsParseEntityName(false);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n\n        return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n      }\n    }, {\n      key: \"tsParseInterfaceDeclaration\",\n      value: function tsParseInterfaceDeclaration(node) {\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n        node.typeParameters = this.tsTryParseTypeParameters();\n\n        if (this.eat(types._extends)) {\n          node.extends = this.tsParseHeritageClause(\"extends\");\n        }\n\n        var body = this.startNode();\n        body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n        node.body = this.finishNode(body, \"TSInterfaceBody\");\n        return this.finishNode(node, \"TSInterfaceDeclaration\");\n      }\n    }, {\n      key: \"tsParseTypeAliasDeclaration\",\n      value: function tsParseTypeAliasDeclaration(node) {\n        var _this24 = this;\n\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n        node.typeParameters = this.tsTryParseTypeParameters();\n        node.typeAnnotation = this.tsInType(function () {\n          _this24.expect(types.eq);\n\n          if (_this24.isContextual(\"intrinsic\") && _this24.lookahead().type !== types.dot) {\n            var _node8 = _this24.startNode();\n\n            _this24.next();\n\n            return _this24.finishNode(_node8, \"TSIntrinsicKeyword\");\n          }\n\n          return _this24.tsParseType();\n        });\n        this.semicolon();\n        return this.finishNode(node, \"TSTypeAliasDeclaration\");\n      }\n    }, {\n      key: \"tsInNoContext\",\n      value: function tsInNoContext(cb) {\n        var oldContext = this.state.context;\n        this.state.context = [oldContext[0]];\n\n        try {\n          return cb();\n        } finally {\n          this.state.context = oldContext;\n        }\n      }\n    }, {\n      key: \"tsInType\",\n      value: function tsInType(cb) {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n\n        try {\n          return cb();\n        } finally {\n          this.state.inType = oldInType;\n        }\n      }\n    }, {\n      key: \"tsEatThenParseType\",\n      value: function tsEatThenParseType(token) {\n        return !this.match(token) ? undefined : this.tsNextThenParseType();\n      }\n    }, {\n      key: \"tsExpectThenParseType\",\n      value: function tsExpectThenParseType(token) {\n        var _this25 = this;\n\n        return this.tsDoThenParseType(function () {\n          return _this25.expect(token);\n        });\n      }\n    }, {\n      key: \"tsNextThenParseType\",\n      value: function tsNextThenParseType() {\n        var _this26 = this;\n\n        return this.tsDoThenParseType(function () {\n          return _this26.next();\n        });\n      }\n    }, {\n      key: \"tsDoThenParseType\",\n      value: function tsDoThenParseType(cb) {\n        var _this27 = this;\n\n        return this.tsInType(function () {\n          cb();\n          return _this27.tsParseType();\n        });\n      }\n    }, {\n      key: \"tsParseEnumMember\",\n      value: function tsParseEnumMember() {\n        var node = this.startNode();\n        node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n        if (this.eat(types.eq)) {\n          node.initializer = this.parseMaybeAssignAllowIn();\n        }\n\n        return this.finishNode(node, \"TSEnumMember\");\n      }\n    }, {\n      key: \"tsParseEnumDeclaration\",\n      value: function tsParseEnumDeclaration(node, isConst) {\n        if (isConst) node.const = true;\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n        this.expect(types.braceL);\n        node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n        this.expect(types.braceR);\n        return this.finishNode(node, \"TSEnumDeclaration\");\n      }\n    }, {\n      key: \"tsParseModuleBlock\",\n      value: function tsParseModuleBlock() {\n        var node = this.startNode();\n        this.scope.enter(SCOPE_OTHER);\n        this.expect(types.braceL);\n        this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n        this.scope.exit();\n        return this.finishNode(node, \"TSModuleBlock\");\n      }\n    }, {\n      key: \"tsParseModuleOrNamespaceDeclaration\",\n      value: function tsParseModuleOrNamespaceDeclaration(node) {\n        var nested = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        node.id = this.parseIdentifier();\n\n        if (!nested) {\n          this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n        }\n\n        if (this.eat(types.dot)) {\n          var inner = this.startNode();\n          this.tsParseModuleOrNamespaceDeclaration(inner, true);\n          node.body = inner;\n        } else {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          node.body = this.tsParseModuleBlock();\n          this.prodParam.exit();\n          this.scope.exit();\n        }\n\n        return this.finishNode(node, \"TSModuleDeclaration\");\n      }\n    }, {\n      key: \"tsParseAmbientExternalModuleDeclaration\",\n      value: function tsParseAmbientExternalModuleDeclaration(node) {\n        if (this.isContextual(\"global\")) {\n          node.global = true;\n          node.id = this.parseIdentifier();\n        } else if (this.match(types.string)) {\n          node.id = this.parseExprAtom();\n        } else {\n          this.unexpected();\n        }\n\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          node.body = this.tsParseModuleBlock();\n          this.prodParam.exit();\n          this.scope.exit();\n        } else {\n          this.semicolon();\n        }\n\n        return this.finishNode(node, \"TSModuleDeclaration\");\n      }\n    }, {\n      key: \"tsParseImportEqualsDeclaration\",\n      value: function tsParseImportEqualsDeclaration(node, isExport) {\n        node.isExport = isExport || false;\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n        this.expect(types.eq);\n        var moduleReference = this.tsParseModuleReference();\n\n        if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n          this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n        }\n\n        node.moduleReference = moduleReference;\n        this.semicolon();\n        return this.finishNode(node, \"TSImportEqualsDeclaration\");\n      }\n    }, {\n      key: \"tsIsExternalModuleReference\",\n      value: function tsIsExternalModuleReference() {\n        return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n      }\n    }, {\n      key: \"tsParseModuleReference\",\n      value: function tsParseModuleReference() {\n        return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n      }\n    }, {\n      key: \"tsParseExternalModuleReference\",\n      value: function tsParseExternalModuleReference() {\n        var node = this.startNode();\n        this.expectContextual(\"require\");\n        this.expect(types.parenL);\n\n        if (!this.match(types.string)) {\n          throw this.unexpected();\n        }\n\n        node.expression = this.parseExprAtom();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"TSExternalModuleReference\");\n      }\n    }, {\n      key: \"tsLookAhead\",\n      value: function tsLookAhead(f) {\n        var state = this.state.clone();\n        var res = f();\n        this.state = state;\n        return res;\n      }\n    }, {\n      key: \"tsTryParseAndCatch\",\n      value: function tsTryParseAndCatch(f) {\n        var result = this.tryParse(function (abort) {\n          return f() || abort();\n        });\n        if (result.aborted || !result.node) return undefined;\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }, {\n      key: \"tsTryParse\",\n      value: function tsTryParse(f) {\n        var state = this.state.clone();\n        var result = f();\n\n        if (result !== undefined && result !== false) {\n          return result;\n        } else {\n          this.state = state;\n          return undefined;\n        }\n      }\n    }, {\n      key: \"tsTryParseDeclare\",\n      value: function tsTryParseDeclare(nany) {\n        var _this28 = this;\n\n        if (this.isLineTerminator()) {\n          return;\n        }\n\n        var starttype = this.state.type;\n        var kind;\n\n        if (this.isContextual(\"let\")) {\n          starttype = types._var;\n          kind = \"let\";\n        }\n\n        return this.tsInDeclareContext(function () {\n          switch (starttype) {\n            case types._function:\n              nany.declare = true;\n              return _this28.parseFunctionStatement(nany, false, true);\n\n            case types._class:\n              nany.declare = true;\n              return _this28.parseClass(nany, true, false);\n\n            case types._const:\n              if (_this28.match(types._const) && _this28.isLookaheadContextual(\"enum\")) {\n                _this28.expect(types._const);\n\n                _this28.expectContextual(\"enum\");\n\n                return _this28.tsParseEnumDeclaration(nany, true);\n              }\n\n            case types._var:\n              kind = kind || _this28.state.value;\n              return _this28.parseVarStatement(nany, kind);\n\n            case types.name:\n              {\n                var value = _this28.state.value;\n\n                if (value === \"global\") {\n                  return _this28.tsParseAmbientExternalModuleDeclaration(nany);\n                } else {\n                  return _this28.tsParseDeclaration(nany, value, true);\n                }\n              }\n          }\n        });\n      }\n    }, {\n      key: \"tsTryParseExportDeclaration\",\n      value: function tsTryParseExportDeclaration() {\n        return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      }\n    }, {\n      key: \"tsParseExpressionStatement\",\n      value: function tsParseExpressionStatement(node, expr) {\n        switch (expr.name) {\n          case \"declare\":\n            {\n              var declaration = this.tsTryParseDeclare(node);\n\n              if (declaration) {\n                declaration.declare = true;\n                return declaration;\n              }\n\n              break;\n            }\n\n          case \"global\":\n            if (this.match(types.braceL)) {\n              this.scope.enter(SCOPE_TS_MODULE);\n              this.prodParam.enter(PARAM);\n              var mod = node;\n              mod.global = true;\n              mod.id = expr;\n              mod.body = this.tsParseModuleBlock();\n              this.scope.exit();\n              this.prodParam.exit();\n              return this.finishNode(mod, \"TSModuleDeclaration\");\n            }\n\n            break;\n\n          default:\n            return this.tsParseDeclaration(node, expr.name, false);\n        }\n      }\n    }, {\n      key: \"tsParseDeclaration\",\n      value: function tsParseDeclaration(node, value, next) {\n        switch (value) {\n          case \"abstract\":\n            if (this.tsCheckLineTerminator(next) && (this.match(types._class) || this.match(types.name))) {\n              return this.tsParseAbstractDeclaration(node);\n            }\n\n            break;\n\n          case \"enum\":\n            if (next || this.match(types.name)) {\n              if (next) this.next();\n              return this.tsParseEnumDeclaration(node, false);\n            }\n\n            break;\n\n          case \"interface\":\n            if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n              return this.tsParseInterfaceDeclaration(node);\n            }\n\n            break;\n\n          case \"module\":\n            if (this.tsCheckLineTerminator(next)) {\n              if (this.match(types.string)) {\n                return this.tsParseAmbientExternalModuleDeclaration(node);\n              } else if (this.match(types.name)) {\n                return this.tsParseModuleOrNamespaceDeclaration(node);\n              }\n            }\n\n            break;\n\n          case \"namespace\":\n            if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n\n            break;\n\n          case \"type\":\n            if (this.tsCheckLineTerminator(next) && this.match(types.name)) {\n              return this.tsParseTypeAliasDeclaration(node);\n            }\n\n            break;\n        }\n      }\n    }, {\n      key: \"tsCheckLineTerminator\",\n      value: function tsCheckLineTerminator(next) {\n        if (next) {\n          if (this.hasFollowingLineBreak()) return false;\n          this.next();\n          return true;\n        }\n\n        return !this.isLineTerminator();\n      }\n    }, {\n      key: \"tsTryParseGenericAsyncArrowFunction\",\n      value: function tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n        var _this29 = this;\n\n        if (!this.isRelational(\"<\")) {\n          return undefined;\n        }\n\n        var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n        this.state.maybeInArrowParameters = true;\n        var res = this.tsTryParseAndCatch(function () {\n          var node = _this29.startNodeAt(startPos, startLoc);\n\n          node.typeParameters = _this29.tsParseTypeParameters();\n\n          _get(_getPrototypeOf(_class3.prototype), \"parseFunctionParams\", _this29).call(_this29, node);\n\n          node.returnType = _this29.tsTryParseTypeOrTypePredicateAnnotation();\n\n          _this29.expect(types.arrow);\n\n          return node;\n        });\n        this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n        if (!res) {\n          return undefined;\n        }\n\n        return this.parseArrowExpression(res, null, true);\n      }\n    }, {\n      key: \"tsParseTypeArguments\",\n      value: function tsParseTypeArguments() {\n        var _this30 = this;\n\n        var node = this.startNode();\n        node.params = this.tsInType(function () {\n          return _this30.tsInNoContext(function () {\n            _this30.expectRelational(\"<\");\n\n            return _this30.tsParseDelimitedList(\"TypeParametersOrArguments\", _this30.tsParseType.bind(_this30));\n          });\n        });\n\n        if (node.params.length === 0) {\n          this.raise(node.start, TSErrors.EmptyTypeArguments);\n        }\n\n        this.state.exprAllowed = false;\n        this.expectRelational(\">\");\n        return this.finishNode(node, \"TSTypeParameterInstantiation\");\n      }\n    }, {\n      key: \"tsIsDeclarationStart\",\n      value: function tsIsDeclarationStart() {\n        if (this.match(types.name)) {\n          switch (this.state.value) {\n            case \"abstract\":\n            case \"declare\":\n            case \"enum\":\n            case \"interface\":\n            case \"module\":\n            case \"namespace\":\n            case \"type\":\n              return true;\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: \"isExportDefaultSpecifier\",\n      value: function isExportDefaultSpecifier() {\n        if (this.tsIsDeclarationStart()) return false;\n        return _get(_getPrototypeOf(_class3.prototype), \"isExportDefaultSpecifier\", this).call(this);\n      }\n    }, {\n      key: \"parseAssignableListItem\",\n      value: function parseAssignableListItem(allowModifiers, decorators) {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var accessibility;\n        var readonly = false;\n\n        if (allowModifiers !== undefined) {\n          accessibility = this.parseAccessModifier();\n          readonly = !!this.tsParseModifier([\"readonly\"]);\n\n          if (allowModifiers === false && (accessibility || readonly)) {\n            this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n          }\n        }\n\n        var left = this.parseMaybeDefault();\n        this.parseAssignableListItemTypes(left);\n        var elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n        if (accessibility || readonly) {\n          var pp = this.startNodeAt(startPos, startLoc);\n\n          if (decorators.length) {\n            pp.decorators = decorators;\n          }\n\n          if (accessibility) pp.accessibility = accessibility;\n          if (readonly) pp.readonly = readonly;\n\n          if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n            this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n          }\n\n          pp.parameter = elt;\n          return this.finishNode(pp, \"TSParameterProperty\");\n        }\n\n        if (decorators.length) {\n          left.decorators = decorators;\n        }\n\n        return elt;\n      }\n    }, {\n      key: \"parseFunctionBodyAndFinish\",\n      value: function parseFunctionBodyAndFinish(node, type) {\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (this.match(types.colon)) {\n          node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        }\n\n        var bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n        if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n          this.finishNode(node, bodilessType);\n          return;\n        }\n\n        if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n          this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n          if (node.declare) {\n            _get(_getPrototypeOf(_class3.prototype), \"parseFunctionBodyAndFinish\", this).call(this, node, bodilessType, isMethod);\n\n            return;\n          }\n        }\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseFunctionBodyAndFinish\", this).call(this, node, type, isMethod);\n      }\n    }, {\n      key: \"registerFunctionStatementId\",\n      value: function registerFunctionStatementId(node) {\n        if (!node.body && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n        } else {\n          _get(_getPrototypeOf(_class3.prototype), \"registerFunctionStatementId\", this).apply(this, arguments);\n        }\n      }\n    }, {\n      key: \"tsCheckForInvalidTypeCasts\",\n      value: function tsCheckForInvalidTypeCasts(items) {\n        var _this31 = this;\n\n        items.forEach(function (node) {\n          if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n            _this31.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n          }\n        });\n      }\n    }, {\n      key: \"toReferencedList\",\n      value: function toReferencedList(exprList, isInParens) {\n        this.tsCheckForInvalidTypeCasts(exprList);\n        return exprList;\n      }\n    }, {\n      key: \"parseArrayLike\",\n      value: function parseArrayLike() {\n        var _get8;\n\n        for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n          args[_key13] = arguments[_key13];\n        }\n\n        var node = (_get8 = _get(_getPrototypeOf(_class3.prototype), \"parseArrayLike\", this)).call.apply(_get8, [this].concat(args));\n\n        if (node.type === \"ArrayExpression\") {\n          this.tsCheckForInvalidTypeCasts(node.elements);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseSubscript\",\n      value: function parseSubscript(base, startPos, startLoc, noCalls, state) {\n        var _this32 = this;\n\n        if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n          this.state.exprAllowed = false;\n          this.next();\n          var nonNullExpression = this.startNodeAt(startPos, startLoc);\n          nonNullExpression.expression = base;\n          return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n        }\n\n        if (this.isRelational(\"<\")) {\n          var result = this.tsTryParseAndCatch(function () {\n            if (!noCalls && _this32.atPossibleAsyncArrow(base)) {\n              var asyncArrowFn = _this32.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n              if (asyncArrowFn) {\n                return asyncArrowFn;\n              }\n            }\n\n            var node = _this32.startNodeAt(startPos, startLoc);\n\n            node.callee = base;\n\n            var typeArguments = _this32.tsParseTypeArguments();\n\n            if (typeArguments) {\n              if (!noCalls && _this32.eat(types.parenL)) {\n                node.arguments = _this32.parseCallExpressionArguments(types.parenR, false);\n\n                _this32.tsCheckForInvalidTypeCasts(node.arguments);\n\n                node.typeParameters = typeArguments;\n\n                if (state.optionalChainMember) {\n                  node.optional = false;\n                }\n\n                return _this32.finishCallExpression(node, state.optionalChainMember);\n              } else if (_this32.match(types.backQuote)) {\n                var _result = _this32.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n\n                _result.typeParameters = typeArguments;\n                return _result;\n              }\n            }\n\n            _this32.unexpected();\n          });\n          if (result) return result;\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseSubscript\", this).call(this, base, startPos, startLoc, noCalls, state);\n      }\n    }, {\n      key: \"parseNewArguments\",\n      value: function parseNewArguments(node) {\n        var _this33 = this;\n\n        if (this.isRelational(\"<\")) {\n          var typeParameters = this.tsTryParseAndCatch(function () {\n            var args = _this33.tsParseTypeArguments();\n\n            if (!_this33.match(types.parenL)) _this33.unexpected();\n            return args;\n          });\n\n          if (typeParameters) {\n            node.typeParameters = typeParameters;\n          }\n        }\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseNewArguments\", this).call(this, node);\n      }\n    }, {\n      key: \"parseExprOp\",\n      value: function parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n        if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n          var node = this.startNodeAt(leftStartPos, leftStartLoc);\n          node.expression = left;\n\n          var _const = this.tsTryNextParseConstantContext();\n\n          if (_const) {\n            node.typeAnnotation = _const;\n          } else {\n            node.typeAnnotation = this.tsNextThenParseType();\n          }\n\n          this.finishNode(node, \"TSAsExpression\");\n          this.reScan_lt_gt();\n          return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseExprOp\", this).call(this, left, leftStartPos, leftStartLoc, minPrec);\n      }\n    }, {\n      key: \"checkReservedWord\",\n      value: function checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n    }, {\n      key: \"checkDuplicateExports\",\n      value: function checkDuplicateExports() {}\n    }, {\n      key: \"parseImport\",\n      value: function parseImport(node) {\n        node.importKind = \"value\";\n\n        if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n          var ahead = this.lookahead();\n\n          if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\") && ahead.type !== types.eq) {\n            node.importKind = \"type\";\n            this.next();\n            ahead = this.lookahead();\n          }\n\n          if (this.match(types.name) && ahead.type === types.eq) {\n            return this.tsParseImportEqualsDeclaration(node);\n          }\n        }\n\n        var importNode = _get(_getPrototypeOf(_class3.prototype), \"parseImport\", this).call(this, node);\n\n        if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n          this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n        }\n\n        return importNode;\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        if (this.match(types._import)) {\n          this.next();\n\n          if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n            node.importKind = \"type\";\n            this.next();\n          } else {\n            node.importKind = \"value\";\n          }\n\n          return this.tsParseImportEqualsDeclaration(node, true);\n        } else if (this.eat(types.eq)) {\n          var assign = node;\n          assign.expression = this.parseExpression();\n          this.semicolon();\n          return this.finishNode(assign, \"TSExportAssignment\");\n        } else if (this.eatContextual(\"as\")) {\n          var decl = node;\n          this.expectContextual(\"namespace\");\n          decl.id = this.parseIdentifier();\n          this.semicolon();\n          return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n        } else {\n          if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n            this.next();\n            node.exportKind = \"type\";\n          } else {\n            node.exportKind = \"value\";\n          }\n\n          return _get(_getPrototypeOf(_class3.prototype), \"parseExport\", this).call(this, node);\n        }\n      }\n    }, {\n      key: \"isAbstractClass\",\n      value: function isAbstractClass() {\n        return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n      }\n    }, {\n      key: \"parseExportDefaultExpression\",\n      value: function parseExportDefaultExpression() {\n        if (this.isAbstractClass()) {\n          var cls = this.startNode();\n          this.next();\n          cls.abstract = true;\n          this.parseClass(cls, true, true);\n          return cls;\n        }\n\n        if (this.state.value === \"interface\") {\n          var result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n          if (result) return result;\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseExportDefaultExpression\", this).call(this);\n      }\n    }, {\n      key: \"parseStatementContent\",\n      value: function parseStatementContent(context, topLevel) {\n        if (this.state.type === types._const) {\n          var ahead = this.lookahead();\n\n          if (ahead.type === types.name && ahead.value === \"enum\") {\n            var node = this.startNode();\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(node, true);\n          }\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseStatementContent\", this).call(this, context, topLevel);\n      }\n    }, {\n      key: \"parseAccessModifier\",\n      value: function parseAccessModifier() {\n        return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n      }\n    }, {\n      key: \"parseClassMember\",\n      value: function parseClassMember(classBody, member, state) {\n        var _this34 = this;\n\n        this.tsParseModifiers(member, [\"declare\", \"private\", \"public\", \"protected\"]);\n\n        var callParseClassMember = function callParseClassMember() {\n          _get(_getPrototypeOf(_class3.prototype), \"parseClassMember\", _this34).call(_this34, classBody, member, state);\n        };\n\n        if (member.declare) {\n          this.tsInDeclareContext(callParseClassMember);\n        } else {\n          callParseClassMember();\n        }\n      }\n    }, {\n      key: \"parseClassMemberWithIsStatic\",\n      value: function parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n        this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n        var idx = this.tsTryParseIndexSignature(member);\n\n        if (idx) {\n          classBody.body.push(idx);\n\n          if (member.abstract) {\n            this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n          }\n\n          if (isStatic) {\n            this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n          }\n\n          if (member.accessibility) {\n            this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n          }\n\n          if (member.declare) {\n            this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n          }\n\n          return;\n        }\n\n        if (!this.state.inAbstractClass && member.abstract) {\n          this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n        }\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseClassMemberWithIsStatic\", this).call(this, classBody, member, state, isStatic);\n      }\n    }, {\n      key: \"parsePostMemberNameModifiers\",\n      value: function parsePostMemberNameModifiers(methodOrProp) {\n        var optional = this.eat(types.question);\n        if (optional) methodOrProp.optional = true;\n\n        if (methodOrProp.readonly && this.match(types.parenL)) {\n          this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n        }\n\n        if (methodOrProp.declare && this.match(types.parenL)) {\n          this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n        }\n      }\n    }, {\n      key: \"parseExpressionStatement\",\n      value: function parseExpressionStatement(node, expr) {\n        var decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n        return decl || _get(_getPrototypeOf(_class3.prototype), \"parseExpressionStatement\", this).call(this, node, expr);\n      }\n    }, {\n      key: \"shouldParseExportDeclaration\",\n      value: function shouldParseExportDeclaration() {\n        if (this.tsIsDeclarationStart()) return true;\n        return _get(_getPrototypeOf(_class3.prototype), \"shouldParseExportDeclaration\", this).call(this);\n      }\n    }, {\n      key: \"parseConditional\",\n      value: function parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n        var _this35 = this;\n\n        if (!refNeedsArrowPos || !this.match(types.question)) {\n          return _get(_getPrototypeOf(_class3.prototype), \"parseConditional\", this).call(this, expr, startPos, startLoc, refNeedsArrowPos);\n        }\n\n        var result = this.tryParse(function () {\n          return _get(_getPrototypeOf(_class3.prototype), \"parseConditional\", _this35).call(_this35, expr, startPos, startLoc);\n        });\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }, {\n      key: \"parseParenItem\",\n      value: function parseParenItem(node, startPos, startLoc) {\n        node = _get(_getPrototypeOf(_class3.prototype), \"parseParenItem\", this).call(this, node, startPos, startLoc);\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n          this.resetEndLocation(node);\n        }\n\n        if (this.match(types.colon)) {\n          var typeCastNode = this.startNodeAt(startPos, startLoc);\n          typeCastNode.expression = node;\n          typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n          return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseExportDeclaration\",\n      value: function parseExportDeclaration(node) {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var isDeclare = this.eatContextual(\"declare\");\n\n        if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n          throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n        }\n\n        var declaration;\n\n        if (this.match(types.name)) {\n          declaration = this.tsTryParseExportDeclaration();\n        }\n\n        if (!declaration) {\n          declaration = _get(_getPrototypeOf(_class3.prototype), \"parseExportDeclaration\", this).call(this, node);\n        }\n\n        if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n          node.exportKind = \"type\";\n        }\n\n        if (declaration && isDeclare) {\n          this.resetStartLocation(declaration, startPos, startLoc);\n          declaration.declare = true;\n        }\n\n        return declaration;\n      }\n    }, {\n      key: \"parseClassId\",\n      value: function parseClassId(node, isStatement, optionalId) {\n        if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n          return;\n        }\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseClassId\", this).call(this, node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) node.typeParameters = typeParameters;\n      }\n    }, {\n      key: \"parseClassPropertyAnnotation\",\n      value: function parseClassPropertyAnnotation(node) {\n        if (!node.optional && this.eat(types.bang)) {\n          node.definite = true;\n        }\n\n        var type = this.tsTryParseTypeAnnotation();\n        if (type) node.typeAnnotation = type;\n      }\n    }, {\n      key: \"parseClassProperty\",\n      value: function parseClassProperty(node) {\n        this.parseClassPropertyAnnotation(node);\n\n        if (this.state.isDeclareContext && this.match(types.eq)) {\n          this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseClassProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"parseClassPrivateProperty\",\n      value: function parseClassPrivateProperty(node) {\n        if (node.abstract) {\n          this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n        }\n\n        if (node.accessibility) {\n          this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n        }\n\n        this.parseClassPropertyAnnotation(node);\n        return _get(_getPrototypeOf(_class3.prototype), \"parseClassPrivateProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"pushClassMethod\",\n      value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n        var typeParameters = this.tsTryParseTypeParameters();\n\n        if (typeParameters && isConstructor) {\n          this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n        }\n\n        if (typeParameters) method.typeParameters = typeParameters;\n\n        _get(_getPrototypeOf(_class3.prototype), \"pushClassMethod\", this).call(this, classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n      }\n    }, {\n      key: \"pushClassPrivateMethod\",\n      value: function pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) method.typeParameters = typeParameters;\n\n        _get(_getPrototypeOf(_class3.prototype), \"pushClassPrivateMethod\", this).call(this, classBody, method, isGenerator, isAsync);\n      }\n    }, {\n      key: \"parseClassSuper\",\n      value: function parseClassSuper(node) {\n        _get(_getPrototypeOf(_class3.prototype), \"parseClassSuper\", this).call(this, node);\n\n        if (node.superClass && this.isRelational(\"<\")) {\n          node.superTypeParameters = this.tsParseTypeArguments();\n        }\n\n        if (this.eatContextual(\"implements\")) {\n          node.implements = this.tsParseHeritageClause(\"implements\");\n        }\n      }\n    }, {\n      key: \"parseObjPropValue\",\n      value: function parseObjPropValue(prop) {\n        var _get9;\n\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) prop.typeParameters = typeParameters;\n\n        for (var _len14 = arguments.length, args = new Array(_len14 > 1 ? _len14 - 1 : 0), _key14 = 1; _key14 < _len14; _key14++) {\n          args[_key14 - 1] = arguments[_key14];\n        }\n\n        (_get9 = _get(_getPrototypeOf(_class3.prototype), \"parseObjPropValue\", this)).call.apply(_get9, [this, prop].concat(args));\n      }\n    }, {\n      key: \"parseFunctionParams\",\n      value: function parseFunctionParams(node, allowModifiers) {\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) node.typeParameters = typeParameters;\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseFunctionParams\", this).call(this, node, allowModifiers);\n      }\n    }, {\n      key: \"parseVarId\",\n      value: function parseVarId(decl, kind) {\n        _get(_getPrototypeOf(_class3.prototype), \"parseVarId\", this).call(this, decl, kind);\n\n        if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n          decl.definite = true;\n        }\n\n        var type = this.tsTryParseTypeAnnotation();\n\n        if (type) {\n          decl.id.typeAnnotation = type;\n          this.resetEndLocation(decl.id);\n        }\n      }\n    }, {\n      key: \"parseAsyncArrowFromCallExpression\",\n      value: function parseAsyncArrowFromCallExpression(node, call) {\n        if (this.match(types.colon)) {\n          node.returnType = this.tsParseTypeAnnotation();\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseAsyncArrowFromCallExpression\", this).call(this, node, call);\n      }\n    }, {\n      key: \"parseMaybeAssign\",\n      value: function parseMaybeAssign() {\n        var _this36 = this;\n\n        for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n          args[_key15] = arguments[_key15];\n        }\n\n        var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n        var state;\n        var jsx;\n        var typeCast;\n\n        if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n          state = this.state.clone();\n          jsx = this.tryParse(function () {\n            var _get10;\n\n            return (_get10 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeAssign\", _this36)).call.apply(_get10, [_this36].concat(args));\n          }, state);\n          if (!jsx.error) return jsx.node;\n          var context = this.state.context;\n\n          if (context[context.length - 1] === types$1.j_oTag) {\n            context.length -= 2;\n          } else if (context[context.length - 1] === types$1.j_expr) {\n            context.length -= 1;\n          }\n        }\n\n        if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n          var _get11;\n\n          return (_get11 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeAssign\", this)).call.apply(_get11, [this].concat(args));\n        }\n\n        var typeParameters;\n        state = state || this.state.clone();\n        var arrow = this.tryParse(function (abort) {\n          var _get12;\n\n          var _expr$extra, _typeParameters;\n\n          typeParameters = _this36.tsParseTypeParameters();\n\n          var expr = (_get12 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeAssign\", _this36)).call.apply(_get12, [_this36].concat(args));\n\n          if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n            abort();\n          }\n\n          if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n            _this36.resetStartLocationFromNode(expr, typeParameters);\n          }\n\n          expr.typeParameters = typeParameters;\n          return expr;\n        }, state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        if (!jsx) {\n          assert(!this.hasPlugin(\"jsx\"));\n          typeCast = this.tryParse(function () {\n            var _get13;\n\n            return (_get13 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeAssign\", _this36)).call.apply(_get13, [_this36].concat(args));\n          }, state);\n          if (!typeCast.error) return typeCast.node;\n        }\n\n        if ((_jsx2 = jsx) != null && _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if ((_typeCast = typeCast) != null && _typeCast.node) {\n          this.state = typeCast.failState;\n          return typeCast.node;\n        }\n\n        if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n        throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n      }\n    }, {\n      key: \"parseMaybeUnary\",\n      value: function parseMaybeUnary(refExpressionErrors) {\n        if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n          return this.tsParseTypeAssertion();\n        } else {\n          return _get(_getPrototypeOf(_class3.prototype), \"parseMaybeUnary\", this).call(this, refExpressionErrors);\n        }\n      }\n    }, {\n      key: \"parseArrow\",\n      value: function parseArrow(node) {\n        var _this37 = this;\n\n        if (this.match(types.colon)) {\n          var result = this.tryParse(function (abort) {\n            var returnType = _this37.tsParseTypeOrTypePredicateAnnotation(types.colon);\n\n            if (_this37.canInsertSemicolon() || !_this37.match(types.arrow)) abort();\n            return returnType;\n          });\n          if (result.aborted) return;\n\n          if (!result.thrown) {\n            if (result.error) this.state = result.failState;\n            node.returnType = result.node;\n          }\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseArrow\", this).call(this, node);\n      }\n    }, {\n      key: \"parseAssignableListItemTypes\",\n      value: function parseAssignableListItemTypes(param) {\n        if (this.eat(types.question)) {\n          if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n            this.raise(param.start, TSErrors.PatternIsOptional);\n          }\n\n          param.optional = true;\n        }\n\n        var type = this.tsTryParseTypeAnnotation();\n        if (type) param.typeAnnotation = type;\n        this.resetEndLocation(param);\n        return param;\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        switch (node.type) {\n          case \"TSTypeCastExpression\":\n            return _get(_getPrototypeOf(_class3.prototype), \"toAssignable\", this).call(this, this.typeCastToParameter(node), isLHS);\n\n          case \"TSParameterProperty\":\n            return _get(_getPrototypeOf(_class3.prototype), \"toAssignable\", this).call(this, node, isLHS);\n\n          case \"ParenthesizedExpression\":\n            return this.toAssignableParenthesizedExpression(node, isLHS);\n\n          case \"TSAsExpression\":\n          case \"TSNonNullExpression\":\n          case \"TSTypeAssertion\":\n            node.expression = this.toAssignable(node.expression, isLHS);\n            return node;\n\n          default:\n            return _get(_getPrototypeOf(_class3.prototype), \"toAssignable\", this).call(this, node, isLHS);\n        }\n      }\n    }, {\n      key: \"toAssignableParenthesizedExpression\",\n      value: function toAssignableParenthesizedExpression(node, isLHS) {\n        switch (node.expression.type) {\n          case \"TSAsExpression\":\n          case \"TSNonNullExpression\":\n          case \"TSTypeAssertion\":\n          case \"ParenthesizedExpression\":\n            node.expression = this.toAssignable(node.expression, isLHS);\n            return node;\n\n          default:\n            return _get(_getPrototypeOf(_class3.prototype), \"toAssignable\", this).call(this, node, isLHS);\n        }\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr, contextDescription) {\n        var _get14;\n\n        var _expr$extra2;\n\n        for (var _len16 = arguments.length, args = new Array(_len16 > 2 ? _len16 - 2 : 0), _key16 = 2; _key16 < _len16; _key16++) {\n          args[_key16 - 2] = arguments[_key16];\n        }\n\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            return;\n\n          case \"TSParameterProperty\":\n            this.checkLVal.apply(this, [expr.parameter, \"parameter property\"].concat(args));\n            return;\n\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n              this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n              break;\n            }\n\n            this.checkLVal.apply(this, [expr.expression, \"parenthesized expression\"].concat(args));\n            return;\n\n          case \"TSNonNullExpression\":\n            this.checkLVal.apply(this, [expr.expression, contextDescription].concat(args));\n            return;\n\n          default:\n            (_get14 = _get(_getPrototypeOf(_class3.prototype), \"checkLVal\", this)).call.apply(_get14, [this, expr, contextDescription].concat(args));\n\n            return;\n        }\n      }\n    }, {\n      key: \"parseBindingAtom\",\n      value: function parseBindingAtom() {\n        switch (this.state.type) {\n          case types._this:\n            return this.parseIdentifier(true);\n\n          default:\n            return _get(_getPrototypeOf(_class3.prototype), \"parseBindingAtom\", this).call(this);\n        }\n      }\n    }, {\n      key: \"parseMaybeDecoratorArguments\",\n      value: function parseMaybeDecoratorArguments(expr) {\n        if (this.isRelational(\"<\")) {\n          var typeArguments = this.tsParseTypeArguments();\n\n          if (this.match(types.parenL)) {\n            var call = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeDecoratorArguments\", this).call(this, expr);\n\n            call.typeParameters = typeArguments;\n            return call;\n          }\n\n          this.unexpected(this.state.start, types.parenL);\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseMaybeDecoratorArguments\", this).call(this, expr);\n      }\n    }, {\n      key: \"checkCommaAfterRest\",\n      value: function checkCommaAfterRest(close) {\n        if (this.state.isDeclareContext && this.match(types.comma) && this.lookaheadCharCode() === close) {\n          this.next();\n        } else {\n          _get(_getPrototypeOf(_class3.prototype), \"checkCommaAfterRest\", this).call(this, close);\n        }\n      }\n    }, {\n      key: \"isClassMethod\",\n      value: function isClassMethod() {\n        return this.isRelational(\"<\") || _get(_getPrototypeOf(_class3.prototype), \"isClassMethod\", this).call(this);\n      }\n    }, {\n      key: \"isClassProperty\",\n      value: function isClassProperty() {\n        return this.match(types.bang) || this.match(types.colon) || _get(_getPrototypeOf(_class3.prototype), \"isClassProperty\", this).call(this);\n      }\n    }, {\n      key: \"parseMaybeDefault\",\n      value: function parseMaybeDefault() {\n        var _get15;\n\n        for (var _len17 = arguments.length, args = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n          args[_key17] = arguments[_key17];\n        }\n\n        var node = (_get15 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeDefault\", this)).call.apply(_get15, [this].concat(args));\n\n        if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n          this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        if (this.state.inType && (code === 62 || code === 60)) {\n          return this.finishOp(types.relational, 1);\n        } else {\n          return _get(_getPrototypeOf(_class3.prototype), \"getTokenFromCode\", this).call(this, code);\n        }\n      }\n    }, {\n      key: \"reScan_lt_gt\",\n      value: function reScan_lt_gt() {\n        if (this.match(types.relational)) {\n          var code = this.input.charCodeAt(this.state.start);\n\n          if (code === 60 || code === 62) {\n            this.state.pos -= 1;\n            this.readToken_lt_gt(code);\n          }\n        }\n      }\n    }, {\n      key: \"toAssignableList\",\n      value: function toAssignableList(exprList) {\n        for (var i = 0; i < exprList.length; i++) {\n          var expr = exprList[i];\n          if (!expr) continue;\n\n          switch (expr.type) {\n            case \"TSTypeCastExpression\":\n              exprList[i] = this.typeCastToParameter(expr);\n              break;\n\n            case \"TSAsExpression\":\n            case \"TSTypeAssertion\":\n              if (!this.state.maybeInArrowParameters) {\n                exprList[i] = this.typeCastToParameter(expr);\n              } else {\n                this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n              }\n\n              break;\n          }\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"toAssignableList\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"typeCastToParameter\",\n      value: function typeCastToParameter(node) {\n        node.expression.typeAnnotation = node.typeAnnotation;\n        this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n        return node.expression;\n      }\n    }, {\n      key: \"shouldParseArrow\",\n      value: function shouldParseArrow() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_class3.prototype), \"shouldParseArrow\", this).call(this);\n      }\n    }, {\n      key: \"shouldParseAsyncArrow\",\n      value: function shouldParseAsyncArrow() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_class3.prototype), \"shouldParseAsyncArrow\", this).call(this);\n      }\n    }, {\n      key: \"canHaveLeadingDecorator\",\n      value: function canHaveLeadingDecorator() {\n        return _get(_getPrototypeOf(_class3.prototype), \"canHaveLeadingDecorator\", this).call(this) || this.isAbstractClass();\n      }\n    }, {\n      key: \"jsxParseOpeningElementAfterName\",\n      value: function jsxParseOpeningElementAfterName(node) {\n        var _this38 = this;\n\n        if (this.isRelational(\"<\")) {\n          var typeArguments = this.tsTryParseAndCatch(function () {\n            return _this38.tsParseTypeArguments();\n          });\n          if (typeArguments) node.typeParameters = typeArguments;\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"jsxParseOpeningElementAfterName\", this).call(this, node);\n      }\n    }, {\n      key: \"getGetterSetterExpectedParamCount\",\n      value: function getGetterSetterExpectedParamCount(method) {\n        var baseCount = _get(_getPrototypeOf(_class3.prototype), \"getGetterSetterExpectedParamCount\", this).call(this, method);\n\n        var params = this.getObjectOrClassMethodParams(method);\n        var firstParam = params[0];\n        var hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n        return hasContextParam ? baseCount + 1 : baseCount;\n      }\n    }, {\n      key: \"parseCatchClauseParam\",\n      value: function parseCatchClauseParam() {\n        var param = _get(_getPrototypeOf(_class3.prototype), \"parseCatchClauseParam\", this).call(this);\n\n        var type = this.tsTryParseTypeAnnotation();\n\n        if (type) {\n          param.typeAnnotation = type;\n          this.resetEndLocation(param);\n        }\n\n        return param;\n      }\n    }, {\n      key: \"tsInDeclareContext\",\n      value: function tsInDeclareContext(cb) {\n        var oldIsDeclareContext = this.state.isDeclareContext;\n        this.state.isDeclareContext = true;\n\n        try {\n          return cb();\n        } finally {\n          this.state.isDeclareContext = oldIsDeclareContext;\n        }\n      }\n    }, {\n      key: \"parseClass\",\n      value: function parseClass(node) {\n        var oldInAbstractClass = this.state.inAbstractClass;\n        this.state.inAbstractClass = !!node.abstract;\n\n        try {\n          var _get16;\n\n          for (var _len18 = arguments.length, args = new Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {\n            args[_key18 - 1] = arguments[_key18];\n          }\n\n          return (_get16 = _get(_getPrototypeOf(_class3.prototype), \"parseClass\", this)).call.apply(_get16, [this, node].concat(args));\n        } finally {\n          this.state.inAbstractClass = oldInAbstractClass;\n        }\n      }\n    }, {\n      key: \"tsParseAbstractDeclaration\",\n      value: function tsParseAbstractDeclaration(node) {\n        if (this.match(types._class)) {\n          node.abstract = true;\n          return this.parseClass(node, true, false);\n        } else if (this.isContextual(\"interface\")) {\n          if (!this.hasFollowingLineBreak()) {\n            node.abstract = true;\n            this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n            this.next();\n            return this.tsParseInterfaceDeclaration(node);\n          }\n        } else {\n          this.unexpected(null, types._class);\n        }\n      }\n    }, {\n      key: \"parseMethod\",\n      value: function parseMethod() {\n        var _get17;\n\n        for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n          args[_key19] = arguments[_key19];\n        }\n\n        var method = (_get17 = _get(_getPrototypeOf(_class3.prototype), \"parseMethod\", this)).call.apply(_get17, [this].concat(args));\n\n        if (method.abstract) {\n          var hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n          if (hasBody) {\n            var key = method.key;\n            this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : \"[\".concat(this.input.slice(key.start, key.end), \"]\"));\n          }\n        }\n\n        return method;\n      }\n    }]);\n\n    return _class3;\n  }(superClass);\n};\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\n\nvar placeholders = function placeholders(superClass) {\n  return /*#__PURE__*/function (_superClass5) {\n    _inherits(_class4, _superClass5);\n\n    var _super11 = _createSuper(_class4);\n\n    function _class4() {\n      _classCallCheck(this, _class4);\n\n      return _super11.apply(this, arguments);\n    }\n\n    _createClass(_class4, [{\n      key: \"parsePlaceholder\",\n      value: function parsePlaceholder(expectedNode) {\n        if (this.match(types.placeholder)) {\n          var node = this.startNode();\n          this.next();\n          this.assertNoSpace(\"Unexpected space in placeholder.\");\n          node.name = _get(_getPrototypeOf(_class4.prototype), \"parseIdentifier\", this).call(this, true);\n          this.assertNoSpace(\"Unexpected space in placeholder.\");\n          this.expect(types.placeholder);\n          return this.finishPlaceholder(node, expectedNode);\n        }\n      }\n    }, {\n      key: \"finishPlaceholder\",\n      value: function finishPlaceholder(node, expectedNode) {\n        var isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n        node.expectedNode = expectedNode;\n        return isFinished ? node : this.finishNode(node, \"Placeholder\");\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n          return this.finishOp(types.placeholder, 2);\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"getTokenFromCode\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom() {\n        return this.parsePlaceholder(\"Expression\") || _get(_getPrototypeOf(_class4.prototype), \"parseExprAtom\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseIdentifier\",\n      value: function parseIdentifier() {\n        return this.parsePlaceholder(\"Identifier\") || _get(_getPrototypeOf(_class4.prototype), \"parseIdentifier\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"checkReservedWord\",\n      value: function checkReservedWord(word) {\n        if (word !== undefined) _get(_getPrototypeOf(_class4.prototype), \"checkReservedWord\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseBindingAtom\",\n      value: function parseBindingAtom() {\n        return this.parsePlaceholder(\"Pattern\") || _get(_getPrototypeOf(_class4.prototype), \"parseBindingAtom\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr) {\n        if (expr.type !== \"Placeholder\") _get(_getPrototypeOf(_class4.prototype), \"checkLVal\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n          node.expectedNode = \"Pattern\";\n          return node;\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"toAssignable\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"isLet\",\n      value: function isLet(context) {\n        if (_get(_getPrototypeOf(_class4.prototype), \"isLet\", this).call(this, context)) {\n          return true;\n        }\n\n        if (!this.isContextual(\"let\")) {\n          return false;\n        }\n\n        if (context) return false;\n        var nextToken = this.lookahead();\n\n        if (nextToken.type === types.placeholder) {\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"verifyBreakContinue\",\n      value: function verifyBreakContinue(node) {\n        if (node.label && node.label.type === \"Placeholder\") return;\n\n        _get(_getPrototypeOf(_class4.prototype), \"verifyBreakContinue\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseExpressionStatement\",\n      value: function parseExpressionStatement(node, expr) {\n        if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n          return _get(_getPrototypeOf(_class4.prototype), \"parseExpressionStatement\", this).apply(this, arguments);\n        }\n\n        if (this.match(types.colon)) {\n          var stmt = node;\n          stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n          this.next();\n          stmt.body = this.parseStatement(\"label\");\n          return this.finishNode(stmt, \"LabeledStatement\");\n        }\n\n        this.semicolon();\n        node.name = expr.name;\n        return this.finishPlaceholder(node, \"Statement\");\n      }\n    }, {\n      key: \"parseBlock\",\n      value: function parseBlock() {\n        return this.parsePlaceholder(\"BlockStatement\") || _get(_getPrototypeOf(_class4.prototype), \"parseBlock\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseFunctionId\",\n      value: function parseFunctionId() {\n        return this.parsePlaceholder(\"Identifier\") || _get(_getPrototypeOf(_class4.prototype), \"parseFunctionId\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseClass\",\n      value: function parseClass(node, isStatement, optionalId) {\n        var type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n        this.next();\n        this.takeDecorators(node);\n        var oldStrict = this.state.strict;\n        var placeholder = this.parsePlaceholder(\"Identifier\");\n\n        if (placeholder) {\n          if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n            node.id = placeholder;\n          } else if (optionalId || !isStatement) {\n            node.id = null;\n            node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n            return this.finishNode(node, type);\n          } else {\n            this.unexpected(null, \"A class name is required\");\n          }\n        } else {\n          this.parseClassId(node, isStatement, optionalId);\n        }\n\n        this.parseClassSuper(node);\n        node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n        return this.finishNode(node, type);\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        var placeholder = this.parsePlaceholder(\"Identifier\");\n        if (!placeholder) return _get(_getPrototypeOf(_class4.prototype), \"parseExport\", this).apply(this, arguments);\n\n        if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n          node.specifiers = [];\n          node.source = null;\n          node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n          return this.finishNode(node, \"ExportNamedDeclaration\");\n        }\n\n        this.expectPlugin(\"exportDefaultFrom\");\n        var specifier = this.startNode();\n        specifier.exported = placeholder;\n        node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n        return _get(_getPrototypeOf(_class4.prototype), \"parseExport\", this).call(this, node);\n      }\n    }, {\n      key: \"isExportDefaultSpecifier\",\n      value: function isExportDefaultSpecifier() {\n        if (this.match(types._default)) {\n          var next = this.nextTokenStart();\n\n          if (this.isUnparsedContextual(next, \"from\")) {\n            if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n              return true;\n            }\n          }\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"isExportDefaultSpecifier\", this).call(this);\n      }\n    }, {\n      key: \"maybeParseExportDefaultSpecifier\",\n      value: function maybeParseExportDefaultSpecifier(node) {\n        if (node.specifiers && node.specifiers.length > 0) {\n          return true;\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"maybeParseExportDefaultSpecifier\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"checkExport\",\n      value: function checkExport(node) {\n        var specifiers = node.specifiers;\n\n        if (specifiers != null && specifiers.length) {\n          node.specifiers = specifiers.filter(function (node) {\n            return node.exported.type === \"Placeholder\";\n          });\n        }\n\n        _get(_getPrototypeOf(_class4.prototype), \"checkExport\", this).call(this, node);\n\n        node.specifiers = specifiers;\n      }\n    }, {\n      key: \"parseImport\",\n      value: function parseImport(node) {\n        var placeholder = this.parsePlaceholder(\"Identifier\");\n        if (!placeholder) return _get(_getPrototypeOf(_class4.prototype), \"parseImport\", this).apply(this, arguments);\n        node.specifiers = [];\n\n        if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n          node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n          this.semicolon();\n          return this.finishNode(node, \"ImportDeclaration\");\n        }\n\n        var specifier = this.startNodeAtNode(placeholder);\n        specifier.local = placeholder;\n        this.finishNode(specifier, \"ImportDefaultSpecifier\");\n        node.specifiers.push(specifier);\n\n        if (this.eat(types.comma)) {\n          var hasStarImport = this.maybeParseStarImportSpecifier(node);\n          if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n        }\n\n        this.expectContextual(\"from\");\n        node.source = this.parseImportSource();\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n    }, {\n      key: \"parseImportSource\",\n      value: function parseImportSource() {\n        return this.parsePlaceholder(\"StringLiteral\") || _get(_getPrototypeOf(_class4.prototype), \"parseImportSource\", this).apply(this, arguments);\n      }\n    }]);\n\n    return _class4;\n  }(superClass);\n};\n\nvar v8intrinsic = function v8intrinsic(superClass) {\n  return /*#__PURE__*/function (_superClass6) {\n    _inherits(_class5, _superClass6);\n\n    var _super12 = _createSuper(_class5);\n\n    function _class5() {\n      _classCallCheck(this, _class5);\n\n      return _super12.apply(this, arguments);\n    }\n\n    _createClass(_class5, [{\n      key: \"parseV8Intrinsic\",\n      value: function parseV8Intrinsic() {\n        if (this.match(types.modulo)) {\n          var v8IntrinsicStart = this.state.start;\n          var node = this.startNode();\n          this.eat(types.modulo);\n\n          if (this.match(types.name)) {\n            var name = this.parseIdentifierName(this.state.start);\n            var identifier = this.createIdentifier(node, name);\n            identifier.type = \"V8IntrinsicIdentifier\";\n\n            if (this.match(types.parenL)) {\n              return identifier;\n            }\n          }\n\n          this.unexpected(v8IntrinsicStart);\n        }\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom() {\n        return this.parseV8Intrinsic() || _get(_getPrototypeOf(_class5.prototype), \"parseExprAtom\", this).apply(this, arguments);\n      }\n    }]);\n\n    return _class5;\n  }(superClass);\n};\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(function (plugin) {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nfunction getPluginOption(plugins, name, option) {\n  var plugin = plugins.find(function (plugin) {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nvar PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nvar RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    var decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(function (p) {\n      return \"'\".concat(p, \"'\");\n    }).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    var moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(function (p) {\n      return \"'\".concat(p, \"'\");\n    }).join(\", \"));\n  }\n}\n\nvar mixinPlugins = {\n  estree: estree,\n  jsx: jsx,\n  flow: flow,\n  typescript: typescript,\n  v8intrinsic: v8intrinsic,\n  placeholders: placeholders\n};\nvar mixinPluginNames = Object.keys(mixinPlugins);\nvar defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var _i2 = 0, _Object$keys = Object.keys(defaultOptions); _i2 < _Object$keys.length; _i2++) {\n    var key = _Object$keys[_i2];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar State = /*#__PURE__*/function () {\n  function State() {\n    _classCallCheck(this, State);\n\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  _createClass(State, [{\n    key: \"init\",\n    value: function init(options) {\n      this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n      this.curLine = options.startLine;\n      this.startLoc = this.endLoc = this.curPosition();\n    }\n  }, {\n    key: \"curPosition\",\n    value: function curPosition() {\n      return new Position(this.curLine, this.pos - this.lineStart);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(skipArrays) {\n      var state = new State();\n      var keys = Object.keys(this);\n\n      for (var i = 0, length = keys.length; i < length; i++) {\n        var key = keys[i];\n        var val = this[key];\n\n        if (!skipArrays && Array.isArray(val)) {\n          val = val.slice();\n        }\n\n        state[key] = val;\n      }\n\n      return state;\n    }\n  }]);\n\n  return State;\n}();\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\n\nvar VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nvar forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nvar allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [].concat(_toConsumableArray(allowedNumericSeparatorSiblings.bin), [50, 51, 52, 53, 54, 55]);\nallowedNumericSeparatorSiblings.dec = [].concat(_toConsumableArray(allowedNumericSeparatorSiblings.oct), [56, 57]);\nallowedNumericSeparatorSiblings.hex = [].concat(_toConsumableArray(allowedNumericSeparatorSiblings.dec), [65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102]);\n\nvar Token = function Token(state) {\n  _classCallCheck(this, Token);\n\n  this.type = state.type;\n  this.value = state.value;\n  this.start = state.start;\n  this.end = state.end;\n  this.loc = new SourceLocation(state.startLoc, state.endLoc);\n};\n\nvar Tokenizer = /*#__PURE__*/function (_ParserError) {\n  _inherits(Tokenizer, _ParserError);\n\n  var _super13 = _createSuper(Tokenizer);\n\n  function Tokenizer(options, input) {\n    var _this39;\n\n    _classCallCheck(this, Tokenizer);\n\n    _this39 = _super13.call(this);\n    _this39.isLookahead = void 0;\n    _this39.tokens = [];\n    _this39.state = new State();\n\n    _this39.state.init(options);\n\n    _this39.input = input;\n    _this39.length = input.length;\n    _this39.isLookahead = false;\n    return _this39;\n  }\n\n  _createClass(Tokenizer, [{\n    key: \"pushToken\",\n    value: function pushToken(token) {\n      this.tokens.length = this.state.tokensLength;\n      this.tokens.push(token);\n      ++this.state.tokensLength;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (!this.isLookahead) {\n        this.checkKeywordEscapes();\n\n        if (this.options.tokens) {\n          this.pushToken(new Token(this.state));\n        }\n      }\n\n      this.state.lastTokEnd = this.state.end;\n      this.state.lastTokStart = this.state.start;\n      this.state.lastTokEndLoc = this.state.endLoc;\n      this.state.lastTokStartLoc = this.state.startLoc;\n      this.nextToken();\n    }\n  }, {\n    key: \"eat\",\n    value: function eat(type) {\n      if (this.match(type)) {\n        this.next();\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"match\",\n    value: function match(type) {\n      return this.state.type === type;\n    }\n  }, {\n    key: \"lookahead\",\n    value: function lookahead() {\n      var old = this.state;\n      this.state = old.clone(true);\n      this.isLookahead = true;\n      this.next();\n      this.isLookahead = false;\n      var curr = this.state;\n      this.state = old;\n      return curr;\n    }\n  }, {\n    key: \"nextTokenStart\",\n    value: function nextTokenStart() {\n      return this.nextTokenStartSince(this.state.pos);\n    }\n  }, {\n    key: \"nextTokenStartSince\",\n    value: function nextTokenStartSince(pos) {\n      skipWhiteSpace.lastIndex = pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      return pos + skip[0].length;\n    }\n  }, {\n    key: \"lookaheadCharCode\",\n    value: function lookaheadCharCode() {\n      return this.input.charCodeAt(this.nextTokenStart());\n    }\n  }, {\n    key: \"setStrict\",\n    value: function setStrict(strict) {\n      var _this40 = this;\n\n      this.state.strict = strict;\n\n      if (strict) {\n        this.state.strictErrors.forEach(function (message, pos) {\n          return _this40.raise(pos, message);\n        });\n        this.state.strictErrors.clear();\n      }\n    }\n  }, {\n    key: \"curContext\",\n    value: function curContext() {\n      return this.state.context[this.state.context.length - 1];\n    }\n  }, {\n    key: \"nextToken\",\n    value: function nextToken() {\n      var curContext = this.curContext();\n      if (!(curContext != null && curContext.preserveSpace)) this.skipSpace();\n      this.state.start = this.state.pos;\n      this.state.startLoc = this.state.curPosition();\n\n      if (this.state.pos >= this.length) {\n        this.finishToken(types.eof);\n        return;\n      }\n\n      var override = curContext == null ? void 0 : curContext.override;\n\n      if (override) {\n        override(this);\n      } else {\n        this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n      }\n    }\n  }, {\n    key: \"pushComment\",\n    value: function pushComment(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"CommentBlock\" : \"CommentLine\",\n        value: text,\n        start: start,\n        end: end,\n        loc: new SourceLocation(startLoc, endLoc)\n      };\n      if (this.options.tokens) this.pushToken(comment);\n      this.state.comments.push(comment);\n      this.addComment(comment);\n    }\n  }, {\n    key: \"skipBlockComment\",\n    value: function skipBlockComment() {\n      var startLoc = this.state.curPosition();\n      var start = this.state.pos;\n      var end = this.input.indexOf(\"*/\", this.state.pos + 2);\n      if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n      this.state.pos = end + 2;\n      lineBreakG.lastIndex = start;\n      var match;\n\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n        ++this.state.curLine;\n        this.state.lineStart = match.index + match[0].length;\n      }\n\n      if (this.isLookahead) return;\n      this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n    }\n  }, {\n    key: \"skipLineComment\",\n    value: function skipLineComment(startSkip) {\n      var start = this.state.pos;\n      var startLoc = this.state.curPosition();\n      var ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n      if (this.state.pos < this.length) {\n        while (!isNewLine(ch) && ++this.state.pos < this.length) {\n          ch = this.input.charCodeAt(this.state.pos);\n        }\n      }\n\n      if (this.isLookahead) return;\n      this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n    }\n  }, {\n    key: \"skipSpace\",\n    value: function skipSpace() {\n      loop: while (this.state.pos < this.length) {\n        var ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case 32:\n          case 160:\n          case 9:\n            ++this.state.pos;\n            break;\n\n          case 13:\n            if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n          case 8232:\n          case 8233:\n            ++this.state.pos;\n            ++this.state.curLine;\n            this.state.lineStart = this.state.pos;\n            break;\n\n          case 47:\n            switch (this.input.charCodeAt(this.state.pos + 1)) {\n              case 42:\n                this.skipBlockComment();\n                break;\n\n              case 47:\n                this.skipLineComment(2);\n                break;\n\n              default:\n                break loop;\n            }\n\n            break;\n\n          default:\n            if (isWhitespace(ch)) {\n              ++this.state.pos;\n            } else {\n              break loop;\n            }\n\n        }\n      }\n    }\n  }, {\n    key: \"finishToken\",\n    value: function finishToken(type, val) {\n      this.state.end = this.state.pos;\n      this.state.endLoc = this.state.curPosition();\n      var prevType = this.state.type;\n      this.state.type = type;\n      this.state.value = val;\n      if (!this.isLookahead) this.updateContext(prevType);\n    }\n  }, {\n    key: \"readToken_numberSign\",\n    value: function readToken_numberSign() {\n      if (this.state.pos === 0 && this.readToken_interpreter()) {\n        return;\n      }\n\n      var nextPos = this.state.pos + 1;\n      var next = this.input.charCodeAt(nextPos);\n\n      if (next >= 48 && next <= 57) {\n        throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n      }\n\n      if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n        this.expectPlugin(\"recordAndTuple\");\n\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n          throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n        }\n\n        if (next === 123) {\n          this.finishToken(types.braceHashL);\n        } else {\n          this.finishToken(types.bracketHashL);\n        }\n\n        this.state.pos += 2;\n      } else {\n        this.finishOp(types.hash, 1);\n      }\n    }\n  }, {\n    key: \"readToken_dot\",\n    value: function readToken_dot() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next >= 48 && next <= 57) {\n        this.readNumber(true);\n        return;\n      }\n\n      if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n        this.state.pos += 3;\n        this.finishToken(types.ellipsis);\n      } else {\n        ++this.state.pos;\n        this.finishToken(types.dot);\n      }\n    }\n  }, {\n    key: \"readToken_slash\",\n    value: function readToken_slash() {\n      if (this.state.exprAllowed && !this.state.inType) {\n        ++this.state.pos;\n        this.readRegexp();\n        return;\n      }\n\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === 61) {\n        this.finishOp(types.assign, 2);\n      } else {\n        this.finishOp(types.slash, 1);\n      }\n    }\n  }, {\n    key: \"readToken_interpreter\",\n    value: function readToken_interpreter() {\n      if (this.state.pos !== 0 || this.length < 2) return false;\n      var ch = this.input.charCodeAt(this.state.pos + 1);\n      if (ch !== 33) return false;\n      var start = this.state.pos;\n      this.state.pos += 1;\n\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n\n      var value = this.input.slice(start + 2, this.state.pos);\n      this.finishToken(types.interpreterDirective, value);\n      return true;\n    }\n  }, {\n    key: \"readToken_mult_modulo\",\n    value: function readToken_mult_modulo(code) {\n      var type = code === 42 ? types.star : types.modulo;\n      var width = 1;\n      var next = this.input.charCodeAt(this.state.pos + 1);\n      var exprAllowed = this.state.exprAllowed;\n\n      if (code === 42 && next === 42) {\n        width++;\n        next = this.input.charCodeAt(this.state.pos + 2);\n        type = types.exponent;\n      }\n\n      if (next === 61 && !exprAllowed) {\n        width++;\n        type = types.assign;\n      }\n\n      this.finishOp(type, width);\n    }\n  }, {\n    key: \"readToken_pipe_amp\",\n    value: function readToken_pipe_amp(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === code) {\n        if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n          this.finishOp(types.assign, 3);\n        } else {\n          this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n        }\n\n        return;\n      }\n\n      if (code === 124) {\n        if (next === 62) {\n          this.finishOp(types.pipeline, 2);\n          return;\n        }\n\n        if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n          }\n\n          this.finishOp(types.braceBarR, 2);\n          return;\n        }\n\n        if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n          }\n\n          this.finishOp(types.bracketBarR, 2);\n          return;\n        }\n      }\n\n      if (next === 61) {\n        this.finishOp(types.assign, 2);\n        return;\n      }\n\n      this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n    }\n  }, {\n    key: \"readToken_caret\",\n    value: function readToken_caret() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === 61) {\n        this.finishOp(types.assign, 2);\n      } else {\n        this.finishOp(types.bitwiseXOR, 1);\n      }\n    }\n  }, {\n    key: \"readToken_plus_min\",\n    value: function readToken_plus_min(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === code) {\n        if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n          this.skipLineComment(3);\n          this.skipSpace();\n          this.nextToken();\n          return;\n        }\n\n        this.finishOp(types.incDec, 2);\n        return;\n      }\n\n      if (next === 61) {\n        this.finishOp(types.assign, 2);\n      } else {\n        this.finishOp(types.plusMin, 1);\n      }\n    }\n  }, {\n    key: \"readToken_lt_gt\",\n    value: function readToken_lt_gt(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n      var size = 1;\n\n      if (next === code) {\n        size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n        if (this.input.charCodeAt(this.state.pos + size) === 61) {\n          this.finishOp(types.assign, size + 1);\n          return;\n        }\n\n        this.finishOp(types.bitShift, size);\n        return;\n      }\n\n      if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n        this.skipLineComment(4);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      if (next === 61) {\n        size = 2;\n      }\n\n      this.finishOp(types.relational, size);\n    }\n  }, {\n    key: \"readToken_eq_excl\",\n    value: function readToken_eq_excl(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === 61) {\n        this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n        return;\n      }\n\n      if (code === 61 && next === 62) {\n        this.state.pos += 2;\n        this.finishToken(types.arrow);\n        return;\n      }\n\n      this.finishOp(code === 61 ? types.eq : types.bang, 1);\n    }\n  }, {\n    key: \"readToken_question\",\n    value: function readToken_question() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n      var next2 = this.input.charCodeAt(this.state.pos + 2);\n\n      if (next === 63) {\n        if (next2 === 61) {\n          this.finishOp(types.assign, 3);\n        } else {\n          this.finishOp(types.nullishCoalescing, 2);\n        }\n      } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n        this.state.pos += 2;\n        this.finishToken(types.questionDot);\n      } else {\n        ++this.state.pos;\n        this.finishToken(types.question);\n      }\n    }\n  }, {\n    key: \"getTokenFromCode\",\n    value: function getTokenFromCode(code) {\n      switch (code) {\n        case 46:\n          this.readToken_dot();\n          return;\n\n        case 40:\n          ++this.state.pos;\n          this.finishToken(types.parenL);\n          return;\n\n        case 41:\n          ++this.state.pos;\n          this.finishToken(types.parenR);\n          return;\n\n        case 59:\n          ++this.state.pos;\n          this.finishToken(types.semi);\n          return;\n\n        case 44:\n          ++this.state.pos;\n          this.finishToken(types.comma);\n          return;\n\n        case 91:\n          if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n            if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n              throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n            }\n\n            this.finishToken(types.bracketBarL);\n            this.state.pos += 2;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.bracketL);\n          }\n\n          return;\n\n        case 93:\n          ++this.state.pos;\n          this.finishToken(types.bracketR);\n          return;\n\n        case 123:\n          if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n            if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n              throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n            }\n\n            this.finishToken(types.braceBarL);\n            this.state.pos += 2;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.braceL);\n          }\n\n          return;\n\n        case 125:\n          ++this.state.pos;\n          this.finishToken(types.braceR);\n          return;\n\n        case 58:\n          if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n            this.finishOp(types.doubleColon, 2);\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.colon);\n          }\n\n          return;\n\n        case 63:\n          this.readToken_question();\n          return;\n\n        case 96:\n          ++this.state.pos;\n          this.finishToken(types.backQuote);\n          return;\n\n        case 48:\n          {\n            var next = this.input.charCodeAt(this.state.pos + 1);\n\n            if (next === 120 || next === 88) {\n              this.readRadixNumber(16);\n              return;\n            }\n\n            if (next === 111 || next === 79) {\n              this.readRadixNumber(8);\n              return;\n            }\n\n            if (next === 98 || next === 66) {\n              this.readRadixNumber(2);\n              return;\n            }\n          }\n\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n          this.readNumber(false);\n          return;\n\n        case 34:\n        case 39:\n          this.readString(code);\n          return;\n\n        case 47:\n          this.readToken_slash();\n          return;\n\n        case 37:\n        case 42:\n          this.readToken_mult_modulo(code);\n          return;\n\n        case 124:\n        case 38:\n          this.readToken_pipe_amp(code);\n          return;\n\n        case 94:\n          this.readToken_caret();\n          return;\n\n        case 43:\n        case 45:\n          this.readToken_plus_min(code);\n          return;\n\n        case 60:\n        case 62:\n          this.readToken_lt_gt(code);\n          return;\n\n        case 61:\n        case 33:\n          this.readToken_eq_excl(code);\n          return;\n\n        case 126:\n          this.finishOp(types.tilde, 1);\n          return;\n\n        case 64:\n          ++this.state.pos;\n          this.finishToken(types.at);\n          return;\n\n        case 35:\n          this.readToken_numberSign();\n          return;\n\n        case 92:\n          this.readWord();\n          return;\n\n        default:\n          if (isIdentifierStart(code)) {\n            this.readWord();\n            return;\n          }\n\n      }\n\n      throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n    }\n  }, {\n    key: \"finishOp\",\n    value: function finishOp(type, size) {\n      var str = this.input.slice(this.state.pos, this.state.pos + size);\n      this.state.pos += size;\n      this.finishToken(type, str);\n    }\n  }, {\n    key: \"readRegexp\",\n    value: function readRegexp() {\n      var start = this.state.pos;\n      var escaped, inClass;\n\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n        }\n\n        var ch = this.input.charAt(this.state.pos);\n\n        if (lineBreak.test(ch)) {\n          throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n        }\n\n        if (escaped) {\n          escaped = false;\n        } else {\n          if (ch === \"[\") {\n            inClass = true;\n          } else if (ch === \"]\" && inClass) {\n            inClass = false;\n          } else if (ch === \"/\" && !inClass) {\n            break;\n          }\n\n          escaped = ch === \"\\\\\";\n        }\n\n        ++this.state.pos;\n      }\n\n      var content = this.input.slice(start, this.state.pos);\n      ++this.state.pos;\n      var mods = \"\";\n\n      while (this.state.pos < this.length) {\n        var char = this.input[this.state.pos];\n        var charCode = this.input.codePointAt(this.state.pos);\n\n        if (VALID_REGEX_FLAGS.has(char)) {\n          if (mods.indexOf(char) > -1) {\n            this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n          }\n        } else if (isIdentifierChar(charCode) || charCode === 92) {\n          this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n        } else {\n          break;\n        }\n\n        ++this.state.pos;\n        mods += char;\n      }\n\n      this.finishToken(types.regexp, {\n        pattern: content,\n        flags: mods\n      });\n    }\n  }, {\n    key: \"readInt\",\n    value: function readInt(radix, len, forceLen) {\n      var allowNumSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var start = this.state.pos;\n      var forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n      var allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n      var invalid = false;\n      var total = 0;\n\n      for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n        var code = this.input.charCodeAt(this.state.pos);\n        var val = void 0;\n\n        if (code === 95) {\n          var prev = this.input.charCodeAt(this.state.pos - 1);\n          var next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (allowedSiblings.indexOf(next) === -1) {\n            this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n          } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n            this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n          }\n\n          if (!allowNumSeparator) {\n            this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n          }\n\n          ++this.state.pos;\n          continue;\n        }\n\n        if (code >= 97) {\n          val = code - 97 + 10;\n        } else if (code >= 65) {\n          val = code - 65 + 10;\n        } else if (_isDigit(code)) {\n          val = code - 48;\n        } else {\n          val = Infinity;\n        }\n\n        if (val >= radix) {\n          if (this.options.errorRecovery && val <= 9) {\n            val = 0;\n            this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n          } else if (forceLen) {\n            val = 0;\n            invalid = true;\n          } else {\n            break;\n          }\n        }\n\n        ++this.state.pos;\n        total = total * radix + val;\n      }\n\n      if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n        return null;\n      }\n\n      return total;\n    }\n  }, {\n    key: \"readRadixNumber\",\n    value: function readRadixNumber(radix) {\n      var start = this.state.pos;\n      var isBigInt = false;\n      this.state.pos += 2;\n      var val = this.readInt(radix);\n\n      if (val == null) {\n        this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n      }\n\n      var next = this.input.charCodeAt(this.state.pos);\n\n      if (next === 110) {\n        ++this.state.pos;\n        isBigInt = true;\n      } else if (next === 109) {\n        throw this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n        throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n      }\n\n      if (isBigInt) {\n        var str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n        this.finishToken(types.bigint, str);\n        return;\n      }\n\n      this.finishToken(types.num, val);\n    }\n  }, {\n    key: \"readNumber\",\n    value: function readNumber(startsWithDot) {\n      var start = this.state.pos;\n      var isFloat = false;\n      var isBigInt = false;\n      var isDecimal = false;\n      var hasExponent = false;\n      var isOctal = false;\n\n      if (!startsWithDot && this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidNumber);\n      }\n\n      var hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n      if (hasLeadingZero) {\n        var integer = this.input.slice(start, this.state.pos);\n        this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n        if (!this.state.strict) {\n          var underscorePos = integer.indexOf(\"_\");\n\n          if (underscorePos > 0) {\n            this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n          }\n        }\n\n        isOctal = hasLeadingZero && !/[89]/.test(integer);\n      }\n\n      var next = this.input.charCodeAt(this.state.pos);\n\n      if (next === 46 && !isOctal) {\n        ++this.state.pos;\n        this.readInt(10);\n        isFloat = true;\n        next = this.input.charCodeAt(this.state.pos);\n      }\n\n      if ((next === 69 || next === 101) && !isOctal) {\n        next = this.input.charCodeAt(++this.state.pos);\n\n        if (next === 43 || next === 45) {\n          ++this.state.pos;\n        }\n\n        if (this.readInt(10) === null) {\n          this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n        }\n\n        isFloat = true;\n        hasExponent = true;\n        next = this.input.charCodeAt(this.state.pos);\n      }\n\n      if (next === 110) {\n        if (isFloat || hasLeadingZero) {\n          this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n        }\n\n        ++this.state.pos;\n        isBigInt = true;\n      }\n\n      if (next === 109) {\n        this.expectPlugin(\"decimal\", this.state.pos);\n\n        if (hasExponent || hasLeadingZero) {\n          this.raise(start, ErrorMessages.InvalidDecimal);\n        }\n\n        ++this.state.pos;\n        isDecimal = true;\n      }\n\n      if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n        throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n      }\n\n      var str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n      if (isBigInt) {\n        this.finishToken(types.bigint, str);\n        return;\n      }\n\n      if (isDecimal) {\n        this.finishToken(types.decimal, str);\n        return;\n      }\n\n      var val = isOctal ? parseInt(str, 8) : parseFloat(str);\n      this.finishToken(types.num, val);\n    }\n  }, {\n    key: \"readCodePoint\",\n    value: function readCodePoint(throwOnInvalid) {\n      var ch = this.input.charCodeAt(this.state.pos);\n      var code;\n\n      if (ch === 123) {\n        var codePos = ++this.state.pos;\n        code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n        ++this.state.pos;\n\n        if (code !== null && code > 0x10ffff) {\n          if (throwOnInvalid) {\n            this.raise(codePos, ErrorMessages.InvalidCodePoint);\n          } else {\n            return null;\n          }\n        }\n      } else {\n        code = this.readHexChar(4, false, throwOnInvalid);\n      }\n\n      return code;\n    }\n  }, {\n    key: \"readString\",\n    value: function readString(quote) {\n      var out = \"\",\n          chunkStart = ++this.state.pos;\n\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n        }\n\n        var ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n\n        if (ch === 92) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.readEscapedChar(false);\n          chunkStart = this.state.pos;\n        } else if (ch === 8232 || ch === 8233) {\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n        } else {\n          ++this.state.pos;\n        }\n      }\n\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(types.string, out);\n    }\n  }, {\n    key: \"readTmplToken\",\n    value: function readTmplToken() {\n      var out = \"\",\n          chunkStart = this.state.pos,\n          containsInvalid = false;\n\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n        }\n\n        var ch = this.input.charCodeAt(this.state.pos);\n\n        if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n          if (this.state.pos === this.state.start && this.match(types.template)) {\n            if (ch === 36) {\n              this.state.pos += 2;\n              this.finishToken(types.dollarBraceL);\n              return;\n            } else {\n              ++this.state.pos;\n              this.finishToken(types.backQuote);\n              return;\n            }\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          this.finishToken(types.template, containsInvalid ? null : out);\n          return;\n        }\n\n        if (ch === 92) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          var escaped = this.readEscapedChar(true);\n\n          if (escaped === null) {\n            containsInvalid = true;\n          } else {\n            out += escaped;\n          }\n\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          ++this.state.pos;\n\n          switch (ch) {\n            case 13:\n              if (this.input.charCodeAt(this.state.pos) === 10) {\n                ++this.state.pos;\n              }\n\n            case 10:\n              out += \"\\n\";\n              break;\n\n            default:\n              out += String.fromCharCode(ch);\n              break;\n          }\n\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n    }\n  }, {\n    key: \"recordStrictModeErrors\",\n    value: function recordStrictModeErrors(pos, message) {\n      if (this.state.strict && !this.state.strictErrors.has(pos)) {\n        this.raise(pos, message);\n      } else {\n        this.state.strictErrors.set(pos, message);\n      }\n    }\n  }, {\n    key: \"readEscapedChar\",\n    value: function readEscapedChar(inTemplate) {\n      var throwOnInvalid = !inTemplate;\n      var ch = this.input.charCodeAt(++this.state.pos);\n      ++this.state.pos;\n\n      switch (ch) {\n        case 110:\n          return \"\\n\";\n\n        case 114:\n          return \"\\r\";\n\n        case 120:\n          {\n            var code = this.readHexChar(2, false, throwOnInvalid);\n            return code === null ? null : String.fromCharCode(code);\n          }\n\n        case 117:\n          {\n            var _code = this.readCodePoint(throwOnInvalid);\n\n            return _code === null ? null : String.fromCodePoint(_code);\n          }\n\n        case 116:\n          return \"\\t\";\n\n        case 98:\n          return \"\\b\";\n\n        case 118:\n          return \"\\x0B\";\n\n        case 102:\n          return \"\\f\";\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n          this.state.lineStart = this.state.pos;\n          ++this.state.curLine;\n\n        case 8232:\n        case 8233:\n          return \"\";\n\n        case 56:\n        case 57:\n          if (inTemplate) {\n            return null;\n          } else {\n            this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n          }\n\n        default:\n          if (ch >= 48 && ch <= 55) {\n            var codePos = this.state.pos - 1;\n            var match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n            var octalStr = match[0];\n            var octal = parseInt(octalStr, 8);\n\n            if (octal > 255) {\n              octalStr = octalStr.slice(0, -1);\n              octal = parseInt(octalStr, 8);\n            }\n\n            this.state.pos += octalStr.length - 1;\n            var next = this.input.charCodeAt(this.state.pos);\n\n            if (octalStr !== \"0\" || next === 56 || next === 57) {\n              if (inTemplate) {\n                return null;\n              } else {\n                this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n              }\n            }\n\n            return String.fromCharCode(octal);\n          }\n\n          return String.fromCharCode(ch);\n      }\n    }\n  }, {\n    key: \"readHexChar\",\n    value: function readHexChar(len, forceLen, throwOnInvalid) {\n      var codePos = this.state.pos;\n      var n = this.readInt(16, len, forceLen, false);\n\n      if (n === null) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n        } else {\n          this.state.pos = codePos - 1;\n        }\n      }\n\n      return n;\n    }\n  }, {\n    key: \"readWord1\",\n    value: function readWord1() {\n      var word = \"\";\n      this.state.containsEsc = false;\n      var start = this.state.pos;\n      var chunkStart = this.state.pos;\n\n      while (this.state.pos < this.length) {\n        var ch = this.input.codePointAt(this.state.pos);\n\n        if (isIdentifierChar(ch)) {\n          this.state.pos += ch <= 0xffff ? 1 : 2;\n        } else if (this.state.isIterator && ch === 64) {\n          ++this.state.pos;\n        } else if (ch === 92) {\n          this.state.containsEsc = true;\n          word += this.input.slice(chunkStart, this.state.pos);\n          var escStart = this.state.pos;\n          var identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n          if (this.input.charCodeAt(++this.state.pos) !== 117) {\n            this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n            continue;\n          }\n\n          ++this.state.pos;\n          var esc = this.readCodePoint(true);\n\n          if (esc !== null) {\n            if (!identifierCheck(esc)) {\n              this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n            }\n\n            word += String.fromCodePoint(esc);\n          }\n\n          chunkStart = this.state.pos;\n        } else {\n          break;\n        }\n      }\n\n      return word + this.input.slice(chunkStart, this.state.pos);\n    }\n  }, {\n    key: \"isIterator\",\n    value: function isIterator(word) {\n      return word === \"@@iterator\" || word === \"@@asyncIterator\";\n    }\n  }, {\n    key: \"readWord\",\n    value: function readWord() {\n      var word = this.readWord1();\n      var type = keywords.get(word) || types.name;\n\n      if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n        this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n      }\n\n      this.finishToken(type, word);\n    }\n  }, {\n    key: \"checkKeywordEscapes\",\n    value: function checkKeywordEscapes() {\n      var kw = this.state.type.keyword;\n\n      if (kw && this.state.containsEsc) {\n        this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n      }\n    }\n  }, {\n    key: \"braceIsBlock\",\n    value: function braceIsBlock(prevType) {\n      var parent = this.curContext();\n\n      if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n        return true;\n      }\n\n      if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n        return !parent.isExpr;\n      }\n\n      if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n        return this.hasPrecedingLineBreak();\n      }\n\n      if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n        return true;\n      }\n\n      if (prevType === types.braceL) {\n        return parent === types$1.braceStatement;\n      }\n\n      if (prevType === types._var || prevType === types._const || prevType === types.name) {\n        return false;\n      }\n\n      if (prevType === types.relational) {\n        return true;\n      }\n\n      return !this.state.exprAllowed;\n    }\n  }, {\n    key: \"updateContext\",\n    value: function updateContext(prevType) {\n      var type = this.state.type;\n      var update;\n\n      if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n        this.state.exprAllowed = false;\n      } else if (update = type.updateContext) {\n        update.call(this, prevType);\n      } else {\n        this.state.exprAllowed = type.beforeExpr;\n      }\n    }\n  }]);\n\n  return Tokenizer;\n}(ParserError);\n\nvar ClassScope = function ClassScope() {\n  _classCallCheck(this, ClassScope);\n\n  this.privateNames = new Set();\n  this.loneAccessors = new Map();\n  this.undefinedPrivateNames = new Map();\n};\n\nvar ClassScopeHandler = /*#__PURE__*/function () {\n  function ClassScopeHandler(raise) {\n    _classCallCheck(this, ClassScopeHandler);\n\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  _createClass(ClassScopeHandler, [{\n    key: \"current\",\n    value: function current() {\n      return this.stack[this.stack.length - 1];\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.stack.push(new ClassScope());\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      var oldClassScope = this.stack.pop();\n      var current = this.current();\n\n      for (var _i3 = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i3 < _Array$from.length; _i3++) {\n        var _Array$from$_i = _slicedToArray(_Array$from[_i3], 2),\n            name = _Array$from$_i[0],\n            pos = _Array$from$_i[1];\n\n        if (current) {\n          if (!current.undefinedPrivateNames.has(name)) {\n            current.undefinedPrivateNames.set(name, pos);\n          }\n        } else {\n          this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n        }\n      }\n    }\n  }, {\n    key: \"declarePrivateName\",\n    value: function declarePrivateName(name, elementType, pos) {\n      var classScope = this.current();\n      var redefined = classScope.privateNames.has(name);\n\n      if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n        var accessor = redefined && classScope.loneAccessors.get(name);\n\n        if (accessor) {\n          var oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n          var newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n          var oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n          var newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n          redefined = oldKind === newKind || oldStatic !== newStatic;\n          if (!redefined) classScope.loneAccessors.delete(name);\n        } else if (!redefined) {\n          classScope.loneAccessors.set(name, elementType);\n        }\n      }\n\n      if (redefined) {\n        this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n      }\n\n      classScope.privateNames.add(name);\n      classScope.undefinedPrivateNames.delete(name);\n    }\n  }, {\n    key: \"usePrivateName\",\n    value: function usePrivateName(name, pos) {\n      var classScope;\n\n      var _iterator5 = _createForOfIteratorHelper(this.stack),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          classScope = _step5.value;\n          if (classScope.privateNames.has(name)) return;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      if (classScope) {\n        classScope.undefinedPrivateNames.set(name, pos);\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }]);\n\n  return ClassScopeHandler;\n}();\n\nvar kExpression = 0,\n    kMaybeArrowParameterDeclaration = 1,\n    kMaybeAsyncArrowParameterDeclaration = 2,\n    kParameterDeclaration = 3;\n\nvar ExpressionScope = /*#__PURE__*/function () {\n  function ExpressionScope() {\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : kExpression;\n\n    _classCallCheck(this, ExpressionScope);\n\n    this.type = void 0;\n    this.type = type;\n  }\n\n  _createClass(ExpressionScope, [{\n    key: \"canBeArrowParameterDeclaration\",\n    value: function canBeArrowParameterDeclaration() {\n      return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n    }\n  }, {\n    key: \"isCertainlyParameterDeclaration\",\n    value: function isCertainlyParameterDeclaration() {\n      return this.type === kParameterDeclaration;\n    }\n  }]);\n\n  return ExpressionScope;\n}();\n\nvar ArrowHeadParsingScope = /*#__PURE__*/function (_ExpressionScope) {\n  _inherits(ArrowHeadParsingScope, _ExpressionScope);\n\n  var _super14 = _createSuper(ArrowHeadParsingScope);\n\n  function ArrowHeadParsingScope(type) {\n    var _this41;\n\n    _classCallCheck(this, ArrowHeadParsingScope);\n\n    _this41 = _super14.call(this, type);\n    _this41.errors = new Map();\n    return _this41;\n  }\n\n  _createClass(ArrowHeadParsingScope, [{\n    key: \"recordDeclarationError\",\n    value: function recordDeclarationError(pos, message) {\n      this.errors.set(pos, message);\n    }\n  }, {\n    key: \"clearDeclarationError\",\n    value: function clearDeclarationError(pos) {\n      this.errors.delete(pos);\n    }\n  }, {\n    key: \"iterateErrors\",\n    value: function iterateErrors(iterator) {\n      this.errors.forEach(iterator);\n    }\n  }]);\n\n  return ArrowHeadParsingScope;\n}(ExpressionScope);\n\nvar ExpressionScopeHandler = /*#__PURE__*/function () {\n  function ExpressionScopeHandler(raise) {\n    _classCallCheck(this, ExpressionScopeHandler);\n\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  _createClass(ExpressionScopeHandler, [{\n    key: \"enter\",\n    value: function enter(scope) {\n      this.stack.push(scope);\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      this.stack.pop();\n    }\n  }, {\n    key: \"recordParameterInitializerError\",\n    value: function recordParameterInitializerError(pos, message) {\n      var stack = this.stack;\n      var i = stack.length - 1;\n      var scope = stack[i];\n\n      while (!scope.isCertainlyParameterDeclaration()) {\n        if (scope.canBeArrowParameterDeclaration()) {\n          scope.recordDeclarationError(pos, message);\n        } else {\n          return;\n        }\n\n        scope = stack[--i];\n      }\n\n      this.raise(pos, message);\n    }\n  }, {\n    key: \"recordParenthesizedIdentifierError\",\n    value: function recordParenthesizedIdentifierError(pos, message) {\n      var stack = this.stack;\n      var scope = stack[stack.length - 1];\n\n      if (scope.isCertainlyParameterDeclaration()) {\n        this.raise(pos, message);\n      } else if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n    }\n  }, {\n    key: \"recordAsyncArrowParametersError\",\n    value: function recordAsyncArrowParametersError(pos, message) {\n      var stack = this.stack;\n      var i = stack.length - 1;\n      var scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n          scope.recordDeclarationError(pos, message);\n        }\n\n        scope = stack[--i];\n      }\n    }\n  }, {\n    key: \"validateAsPattern\",\n    value: function validateAsPattern() {\n      var _this42 = this;\n\n      var stack = this.stack;\n      var currentScope = stack[stack.length - 1];\n      if (!currentScope.canBeArrowParameterDeclaration()) return;\n      currentScope.iterateErrors(function (message, pos) {\n        _this42.raise(pos, message);\n\n        var i = stack.length - 2;\n        var scope = stack[i];\n\n        while (scope.canBeArrowParameterDeclaration()) {\n          scope.clearDeclarationError(pos);\n          scope = stack[--i];\n        }\n      });\n    }\n  }]);\n\n  return ExpressionScopeHandler;\n}();\n\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nvar UtilParser = /*#__PURE__*/function (_Tokenizer) {\n  _inherits(UtilParser, _Tokenizer);\n\n  var _super15 = _createSuper(UtilParser);\n\n  function UtilParser() {\n    _classCallCheck(this, UtilParser);\n\n    return _super15.apply(this, arguments);\n  }\n\n  _createClass(UtilParser, [{\n    key: \"addExtra\",\n    value: function addExtra(node, key, val) {\n      if (!node) return;\n      var extra = node.extra = node.extra || {};\n      extra[key] = val;\n    }\n  }, {\n    key: \"isRelational\",\n    value: function isRelational(op) {\n      return this.match(types.relational) && this.state.value === op;\n    }\n  }, {\n    key: \"expectRelational\",\n    value: function expectRelational(op) {\n      if (this.isRelational(op)) {\n        this.next();\n      } else {\n        this.unexpected(null, types.relational);\n      }\n    }\n  }, {\n    key: \"isContextual\",\n    value: function isContextual(name) {\n      return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n    }\n  }, {\n    key: \"isUnparsedContextual\",\n    value: function isUnparsedContextual(nameStart, name) {\n      var nameEnd = nameStart + name.length;\n      return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n    }\n  }, {\n    key: \"isLookaheadContextual\",\n    value: function isLookaheadContextual(name) {\n      var next = this.nextTokenStart();\n      return this.isUnparsedContextual(next, name);\n    }\n  }, {\n    key: \"eatContextual\",\n    value: function eatContextual(name) {\n      return this.isContextual(name) && this.eat(types.name);\n    }\n  }, {\n    key: \"expectContextual\",\n    value: function expectContextual(name, message) {\n      if (!this.eatContextual(name)) this.unexpected(null, message);\n    }\n  }, {\n    key: \"canInsertSemicolon\",\n    value: function canInsertSemicolon() {\n      return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n    }\n  }, {\n    key: \"hasPrecedingLineBreak\",\n    value: function hasPrecedingLineBreak() {\n      return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n    }\n  }, {\n    key: \"hasFollowingLineBreak\",\n    value: function hasFollowingLineBreak() {\n      return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n    }\n  }, {\n    key: \"isLineTerminator\",\n    value: function isLineTerminator() {\n      return this.eat(types.semi) || this.canInsertSemicolon();\n    }\n  }, {\n    key: \"semicolon\",\n    value: function semicolon() {\n      var allowAsi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (allowAsi ? this.isLineTerminator() : this.eat(types.semi)) return;\n      this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n    }\n  }, {\n    key: \"expect\",\n    value: function expect(type, pos) {\n      this.eat(type) || this.unexpected(pos, type);\n    }\n  }, {\n    key: \"assertNoSpace\",\n    value: function assertNoSpace() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected space.\";\n\n      if (this.state.start > this.state.lastTokEnd) {\n        this.raise(this.state.lastTokEnd, message);\n      }\n    }\n  }, {\n    key: \"unexpected\",\n    value: function unexpected(pos) {\n      var messageOrType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Unexpected token\";\n\n      if (typeof messageOrType !== \"string\") {\n        messageOrType = \"Unexpected token, expected \\\"\".concat(messageOrType.label, \"\\\"\");\n      }\n\n      throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    }\n  }, {\n    key: \"expectPlugin\",\n    value: function expectPlugin(name, pos) {\n      if (!this.hasPlugin(name)) {\n        throw this.raiseWithData(pos != null ? pos : this.state.start, {\n          missingPlugin: [name]\n        }, \"This experimental syntax requires enabling the parser plugin: '\".concat(name, \"'\"));\n      }\n\n      return true;\n    }\n  }, {\n    key: \"expectOnePlugin\",\n    value: function expectOnePlugin(names, pos) {\n      var _this43 = this;\n\n      if (!names.some(function (n) {\n        return _this43.hasPlugin(n);\n      })) {\n        throw this.raiseWithData(pos != null ? pos : this.state.start, {\n          missingPlugin: names\n        }, \"This experimental syntax requires enabling one of the following parser plugin(s): '\".concat(names.join(\", \"), \"'\"));\n      }\n    }\n  }, {\n    key: \"tryParse\",\n    value: function tryParse(fn) {\n      var oldState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.clone();\n      var abortSignal = {\n        node: null\n      };\n\n      try {\n        var node = fn(function () {\n          var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          abortSignal.node = node;\n          throw abortSignal;\n        });\n\n        if (this.state.errors.length > oldState.errors.length) {\n          var failState = this.state;\n          this.state = oldState;\n          return {\n            node: node,\n            error: failState.errors[oldState.errors.length],\n            thrown: false,\n            aborted: false,\n            failState: failState\n          };\n        }\n\n        return {\n          node: node,\n          error: null,\n          thrown: false,\n          aborted: false,\n          failState: null\n        };\n      } catch (error) {\n        var _failState = this.state;\n        this.state = oldState;\n\n        if (error instanceof SyntaxError) {\n          return {\n            node: null,\n            error: error,\n            thrown: true,\n            aborted: false,\n            failState: _failState\n          };\n        }\n\n        if (error === abortSignal) {\n          return {\n            node: abortSignal.node,\n            error: null,\n            thrown: false,\n            aborted: true,\n            failState: _failState\n          };\n        }\n\n        throw error;\n      }\n    }\n  }, {\n    key: \"checkExpressionErrors\",\n    value: function checkExpressionErrors(refExpressionErrors, andThrow) {\n      if (!refExpressionErrors) return false;\n      var shorthandAssign = refExpressionErrors.shorthandAssign,\n          doubleProto = refExpressionErrors.doubleProto;\n      if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n      if (shorthandAssign >= 0) {\n        this.unexpected(shorthandAssign);\n      }\n\n      if (doubleProto >= 0) {\n        this.raise(doubleProto, ErrorMessages.DuplicateProto);\n      }\n    }\n  }, {\n    key: \"isLiteralPropertyName\",\n    value: function isLiteralPropertyName() {\n      return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n    }\n  }, {\n    key: \"isPrivateName\",\n    value: function isPrivateName(node) {\n      return node.type === \"PrivateName\";\n    }\n  }, {\n    key: \"getPrivateNameSV\",\n    value: function getPrivateNameSV(node) {\n      return node.id.name;\n    }\n  }, {\n    key: \"hasPropertyAsPrivateName\",\n    value: function hasPropertyAsPrivateName(node) {\n      return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n    }\n  }, {\n    key: \"isOptionalChain\",\n    value: function isOptionalChain(node) {\n      return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n    }\n  }, {\n    key: \"isObjectProperty\",\n    value: function isObjectProperty(node) {\n      return node.type === \"ObjectProperty\";\n    }\n  }, {\n    key: \"isObjectMethod\",\n    value: function isObjectMethod(node) {\n      return node.type === \"ObjectMethod\";\n    }\n  }, {\n    key: \"initializeScopes\",\n    value: function initializeScopes() {\n      var _this44 = this;\n\n      var inModule = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.sourceType === \"module\";\n      var oldLabels = this.state.labels;\n      this.state.labels = [];\n      var oldExportedIdentifiers = this.state.exportedIdentifiers;\n      this.state.exportedIdentifiers = [];\n      var oldInModule = this.inModule;\n      this.inModule = inModule;\n      var oldScope = this.scope;\n      var ScopeHandler = this.getScopeHandler();\n      this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n      var oldProdParam = this.prodParam;\n      this.prodParam = new ProductionParameterHandler();\n      var oldClassScope = this.classScope;\n      this.classScope = new ClassScopeHandler(this.raise.bind(this));\n      var oldExpressionScope = this.expressionScope;\n      this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n      return function () {\n        _this44.state.labels = oldLabels;\n        _this44.state.exportedIdentifiers = oldExportedIdentifiers;\n        _this44.inModule = oldInModule;\n        _this44.scope = oldScope;\n        _this44.prodParam = oldProdParam;\n        _this44.classScope = oldClassScope;\n        _this44.expressionScope = oldExpressionScope;\n      };\n    }\n  }, {\n    key: \"enterInitialScopes\",\n    value: function enterInitialScopes() {\n      var paramFlags = PARAM;\n\n      if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n        paramFlags |= PARAM_AWAIT;\n      }\n\n      this.scope.enter(SCOPE_PROGRAM);\n      this.prodParam.enter(paramFlags);\n    }\n  }]);\n\n  return UtilParser;\n}(Tokenizer);\n\nvar ExpressionErrors = function ExpressionErrors() {\n  _classCallCheck(this, ExpressionErrors);\n\n  this.shorthandAssign = -1;\n  this.doubleProto = -1;\n};\n\nvar Node = /*#__PURE__*/function () {\n  function Node(parser, pos, loc) {\n    _classCallCheck(this, Node);\n\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  _createClass(Node, [{\n    key: \"__clone\",\n    value: function __clone() {\n      var newNode = new Node();\n      var keys = Object.keys(this);\n\n      for (var i = 0, length = keys.length; i < length; i++) {\n        var key = keys[i];\n\n        if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n          newNode[key] = this[key];\n        }\n      }\n\n      return newNode;\n    }\n  }]);\n\n  return Node;\n}();\n\nvar NodeUtils = /*#__PURE__*/function (_UtilParser) {\n  _inherits(NodeUtils, _UtilParser);\n\n  var _super16 = _createSuper(NodeUtils);\n\n  function NodeUtils() {\n    _classCallCheck(this, NodeUtils);\n\n    return _super16.apply(this, arguments);\n  }\n\n  _createClass(NodeUtils, [{\n    key: \"startNode\",\n    value: function startNode() {\n      return new Node(this, this.state.start, this.state.startLoc);\n    }\n  }, {\n    key: \"startNodeAt\",\n    value: function startNodeAt(pos, loc) {\n      return new Node(this, pos, loc);\n    }\n  }, {\n    key: \"startNodeAtNode\",\n    value: function startNodeAtNode(type) {\n      return this.startNodeAt(type.start, type.loc.start);\n    }\n  }, {\n    key: \"finishNode\",\n    value: function finishNode(node, type) {\n      return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n    }\n  }, {\n    key: \"finishNodeAt\",\n    value: function finishNodeAt(node, type, pos, loc) {\n      node.type = type;\n      node.end = pos;\n      node.loc.end = loc;\n      if (this.options.ranges) node.range[1] = pos;\n      this.processComment(node);\n      return node;\n    }\n  }, {\n    key: \"resetStartLocation\",\n    value: function resetStartLocation(node, start, startLoc) {\n      node.start = start;\n      node.loc.start = startLoc;\n      if (this.options.ranges) node.range[0] = start;\n    }\n  }, {\n    key: \"resetEndLocation\",\n    value: function resetEndLocation(node) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.lastTokEnd;\n      var endLoc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.state.lastTokEndLoc;\n      node.end = end;\n      node.loc.end = endLoc;\n      if (this.options.ranges) node.range[1] = end;\n    }\n  }, {\n    key: \"resetStartLocationFromNode\",\n    value: function resetStartLocationFromNode(node, locationNode) {\n      this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n    }\n  }]);\n\n  return NodeUtils;\n}(UtilParser);\n\nvar unwrapParenthesizedExpression = function unwrapParenthesizedExpression(node) {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nvar LValParser = /*#__PURE__*/function (_NodeUtils) {\n  _inherits(LValParser, _NodeUtils);\n\n  var _super17 = _createSuper(LValParser);\n\n  function LValParser() {\n    _classCallCheck(this, LValParser);\n\n    return _super17.apply(this, arguments);\n  }\n\n  _createClass(LValParser, [{\n    key: \"toAssignable\",\n    value: function toAssignable(node) {\n      var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var _node$extra, _node$extra3;\n\n      var parenthesized = undefined;\n\n      if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n        parenthesized = unwrapParenthesizedExpression(node);\n\n        if (isLHS) {\n          if (parenthesized.type === \"Identifier\") {\n            this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n          } else if (parenthesized.type !== \"MemberExpression\") {\n            this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n          }\n        } else {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      }\n\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          break;\n\n        case \"ObjectExpression\":\n          node.type = \"ObjectPattern\";\n\n          for (var i = 0, length = node.properties.length, _last2 = length - 1; i < length; i++) {\n            var _node$extra2;\n\n            var prop = node.properties[i];\n            var isLast = i === _last2;\n            this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n            if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n              this.raiseRestNotLast(node.extra.trailingComma);\n            }\n          }\n\n          break;\n\n        case \"ObjectProperty\":\n          this.toAssignable(node.value, isLHS);\n          break;\n\n        case \"SpreadElement\":\n          {\n            this.checkToRestConversion(node);\n            node.type = \"RestElement\";\n            var arg = node.argument;\n            this.toAssignable(arg, isLHS);\n            break;\n          }\n\n        case \"ArrayExpression\":\n          node.type = \"ArrayPattern\";\n          this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n          break;\n\n        case \"AssignmentExpression\":\n          if (node.operator !== \"=\") {\n            this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n          }\n\n          node.type = \"AssignmentPattern\";\n          delete node.operator;\n          this.toAssignable(node.left, isLHS);\n          break;\n\n        case \"ParenthesizedExpression\":\n          this.toAssignable(parenthesized, isLHS);\n          break;\n      }\n\n      return node;\n    }\n  }, {\n    key: \"toAssignableObjectExpressionProp\",\n    value: function toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n      if (prop.type === \"ObjectMethod\") {\n        var error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n        this.raise(prop.key.start, error);\n      } else if (prop.type === \"SpreadElement\" && !isLast) {\n        this.raiseRestNotLast(prop.start);\n      } else {\n        this.toAssignable(prop, isLHS);\n      }\n    }\n  }, {\n    key: \"toAssignableList\",\n    value: function toAssignableList(exprList, trailingCommaPos, isLHS) {\n      var end = exprList.length;\n\n      if (end) {\n        var _last3 = exprList[end - 1];\n\n        if ((_last3 == null ? void 0 : _last3.type) === \"RestElement\") {\n          --end;\n        } else if ((_last3 == null ? void 0 : _last3.type) === \"SpreadElement\") {\n          _last3.type = \"RestElement\";\n          var arg = _last3.argument;\n          this.toAssignable(arg, isLHS);\n          arg = unwrapParenthesizedExpression(arg);\n\n          if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n            this.unexpected(arg.start);\n          }\n\n          if (trailingCommaPos) {\n            this.raiseTrailingCommaAfterRest(trailingCommaPos);\n          }\n\n          --end;\n        }\n      }\n\n      for (var i = 0; i < end; i++) {\n        var elt = exprList[i];\n\n        if (elt) {\n          this.toAssignable(elt, isLHS);\n\n          if (elt.type === \"RestElement\") {\n            this.raiseRestNotLast(elt.start);\n          }\n        }\n      }\n\n      return exprList;\n    }\n  }, {\n    key: \"toReferencedList\",\n    value: function toReferencedList(exprList, isParenthesizedExpr) {\n      return exprList;\n    }\n  }, {\n    key: \"toReferencedListDeep\",\n    value: function toReferencedListDeep(exprList, isParenthesizedExpr) {\n      this.toReferencedList(exprList, isParenthesizedExpr);\n\n      var _iterator6 = _createForOfIteratorHelper(exprList),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var expr = _step6.value;\n\n          if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n            this.toReferencedListDeep(expr.elements);\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"parseSpread\",\n    value: function parseSpread(refExpressionErrors, refNeedsArrowPos) {\n      var node = this.startNode();\n      this.next();\n      node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n      return this.finishNode(node, \"SpreadElement\");\n    }\n  }, {\n    key: \"parseRestBinding\",\n    value: function parseRestBinding() {\n      var node = this.startNode();\n      this.next();\n      node.argument = this.parseBindingAtom();\n      return this.finishNode(node, \"RestElement\");\n    }\n  }, {\n    key: \"parseBindingAtom\",\n    value: function parseBindingAtom() {\n      switch (this.state.type) {\n        case types.bracketL:\n          {\n            var node = this.startNode();\n            this.next();\n            node.elements = this.parseBindingList(types.bracketR, 93, true);\n            return this.finishNode(node, \"ArrayPattern\");\n          }\n\n        case types.braceL:\n          return this.parseObjectLike(types.braceR, true);\n      }\n\n      return this.parseIdentifier();\n    }\n  }, {\n    key: \"parseBindingList\",\n    value: function parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n      var elts = [];\n      var first = true;\n\n      while (!this.eat(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n        }\n\n        if (allowEmpty && this.match(types.comma)) {\n          elts.push(null);\n        } else if (this.eat(close)) {\n          break;\n        } else if (this.match(types.ellipsis)) {\n          elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n          this.checkCommaAfterRest(closeCharCode);\n          this.expect(close);\n          break;\n        } else {\n          var decorators = [];\n\n          if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n            this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n          }\n\n          while (this.match(types.at)) {\n            decorators.push(this.parseDecorator());\n          }\n\n          elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n        }\n      }\n\n      return elts;\n    }\n  }, {\n    key: \"parseAssignableListItem\",\n    value: function parseAssignableListItem(allowModifiers, decorators) {\n      var left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      var elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n  }, {\n    key: \"parseAssignableListItemTypes\",\n    value: function parseAssignableListItemTypes(param) {\n      return param;\n    }\n  }, {\n    key: \"parseMaybeDefault\",\n    value: function parseMaybeDefault(startPos, startLoc, left) {\n      var _startLoc, _startPos, _left;\n\n      startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n      startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n      left = (_left = left) != null ? _left : this.parseBindingAtom();\n      if (!this.eat(types.eq)) return left;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.left = left;\n      node.right = this.parseMaybeAssignAllowIn();\n      return this.finishNode(node, \"AssignmentPattern\");\n    }\n  }, {\n    key: \"checkLVal\",\n    value: function checkLVal(expr, contextDescription) {\n      var bindingType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BIND_NONE;\n      var checkClashes = arguments.length > 3 ? arguments[3] : undefined;\n      var disallowLetBinding = arguments.length > 4 ? arguments[4] : undefined;\n      var strictModeChanged = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n      switch (expr.type) {\n        case \"Identifier\":\n          {\n            var name = expr.name;\n\n            if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n              this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n            }\n\n            if (checkClashes) {\n              if (checkClashes.has(name)) {\n                this.raise(expr.start, ErrorMessages.ParamDupe);\n              } else {\n                checkClashes.add(name);\n              }\n            }\n\n            if (disallowLetBinding && name === \"let\") {\n              this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n            }\n\n            if (!(bindingType & BIND_NONE)) {\n              this.scope.declareName(name, bindingType, expr.start);\n            }\n\n            break;\n          }\n\n        case \"MemberExpression\":\n          if (bindingType !== BIND_NONE) {\n            this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n          }\n\n          break;\n\n        case \"ObjectPattern\":\n          var _iterator7 = _createForOfIteratorHelper(expr.properties),\n              _step7;\n\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var prop = _step7.value;\n              if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n              this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n\n          break;\n\n        case \"ArrayPattern\":\n          var _iterator8 = _createForOfIteratorHelper(expr.elements),\n              _step8;\n\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var elem = _step8.value;\n\n              if (elem) {\n                this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n              }\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n\n          break;\n\n        case \"AssignmentPattern\":\n          this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n          break;\n\n        case \"RestElement\":\n          this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n          break;\n\n        case \"ParenthesizedExpression\":\n          this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n          break;\n\n        default:\n          {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n          }\n      }\n    }\n  }, {\n    key: \"checkToRestConversion\",\n    value: function checkToRestConversion(node) {\n      if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n        this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n      }\n    }\n  }, {\n    key: \"checkCommaAfterRest\",\n    value: function checkCommaAfterRest(close) {\n      if (this.match(types.comma)) {\n        if (this.lookaheadCharCode() === close) {\n          this.raiseTrailingCommaAfterRest(this.state.start);\n        } else {\n          this.raiseRestNotLast(this.state.start);\n        }\n      }\n    }\n  }, {\n    key: \"raiseRestNotLast\",\n    value: function raiseRestNotLast(pos) {\n      throw this.raise(pos, ErrorMessages.ElementAfterRest);\n    }\n  }, {\n    key: \"raiseTrailingCommaAfterRest\",\n    value: function raiseTrailingCommaAfterRest(pos) {\n      this.raise(pos, ErrorMessages.RestTrailingComma);\n    }\n  }]);\n\n  return LValParser;\n}(NodeUtils);\n\nvar ExpressionParser = /*#__PURE__*/function (_LValParser) {\n  _inherits(ExpressionParser, _LValParser);\n\n  var _super18 = _createSuper(ExpressionParser);\n\n  function ExpressionParser() {\n    _classCallCheck(this, ExpressionParser);\n\n    return _super18.apply(this, arguments);\n  }\n\n  _createClass(ExpressionParser, [{\n    key: \"checkProto\",\n    value: function checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n      if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n        return;\n      }\n\n      var key = prop.key;\n      var name = key.type === \"Identifier\" ? key.name : key.value;\n\n      if (name === \"__proto__\") {\n        if (isRecord) {\n          this.raise(key.start, ErrorMessages.RecordNoProto);\n          return;\n        }\n\n        if (protoRef.used) {\n          if (refExpressionErrors) {\n            if (refExpressionErrors.doubleProto === -1) {\n              refExpressionErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raise(key.start, ErrorMessages.DuplicateProto);\n          }\n        }\n\n        protoRef.used = true;\n      }\n    }\n  }, {\n    key: \"shouldExitDescending\",\n    value: function shouldExitDescending(expr, potentialArrowAt) {\n      return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n    }\n  }, {\n    key: \"getExpression\",\n    value: function getExpression() {\n      var paramFlags = PARAM;\n\n      if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n        paramFlags |= PARAM_AWAIT;\n      }\n\n      this.scope.enter(SCOPE_PROGRAM);\n      this.prodParam.enter(paramFlags);\n      this.nextToken();\n      var expr = this.parseExpression();\n\n      if (!this.match(types.eof)) {\n        this.unexpected();\n      }\n\n      expr.comments = this.state.comments;\n      expr.errors = this.state.errors;\n\n      if (this.options.tokens) {\n        expr.tokens = this.tokens;\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseExpression\",\n    value: function parseExpression(disallowIn, refExpressionErrors) {\n      var _this45 = this;\n\n      if (disallowIn) {\n        return this.disallowInAnd(function () {\n          return _this45.parseExpressionBase(refExpressionErrors);\n        });\n      }\n\n      return this.allowInAnd(function () {\n        return _this45.parseExpressionBase(refExpressionErrors);\n      });\n    }\n  }, {\n    key: \"parseExpressionBase\",\n    value: function parseExpressionBase(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var expr = this.parseMaybeAssign(refExpressionErrors);\n\n      if (this.match(types.comma)) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.expressions = [expr];\n\n        while (this.eat(types.comma)) {\n          node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n        }\n\n        this.toReferencedList(node.expressions);\n        return this.finishNode(node, \"SequenceExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseMaybeAssignDisallowIn\",\n    value: function parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _this46 = this;\n\n      return this.disallowInAnd(function () {\n        return _this46.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n      });\n    }\n  }, {\n    key: \"parseMaybeAssignAllowIn\",\n    value: function parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _this47 = this;\n\n      return this.allowInAnd(function () {\n        return _this47.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n      });\n    }\n  }, {\n    key: \"parseMaybeAssign\",\n    value: function parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n\n      if (this.isContextual(\"yield\")) {\n        if (this.prodParam.hasYield) {\n          this.state.exprAllowed = true;\n\n          var _left2 = this.parseYield();\n\n          if (afterLeftParse) {\n            _left2 = afterLeftParse.call(this, _left2, startPos, startLoc);\n          }\n\n          return _left2;\n        }\n      }\n\n      var ownExpressionErrors;\n\n      if (refExpressionErrors) {\n        ownExpressionErrors = false;\n      } else {\n        refExpressionErrors = new ExpressionErrors();\n        ownExpressionErrors = true;\n      }\n\n      if (this.match(types.parenL) || this.match(types.name)) {\n        this.state.potentialArrowAt = this.state.start;\n      }\n\n      var left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n      if (afterLeftParse) {\n        left = afterLeftParse.call(this, left, startPos, startLoc);\n      }\n\n      if (this.state.type.isAssign) {\n        var node = this.startNodeAt(startPos, startLoc);\n        var operator = this.state.value;\n        node.operator = operator;\n\n        if (this.match(types.eq)) {\n          node.left = this.toAssignable(left, true);\n          refExpressionErrors.doubleProto = -1;\n        } else {\n          node.left = left;\n        }\n\n        if (refExpressionErrors.shorthandAssign >= node.left.start) {\n          refExpressionErrors.shorthandAssign = -1;\n        }\n\n        this.checkLVal(left, \"assignment expression\");\n        this.next();\n        node.right = this.parseMaybeAssign();\n        return this.finishNode(node, \"AssignmentExpression\");\n      } else if (ownExpressionErrors) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n      }\n\n      return left;\n    }\n  }, {\n    key: \"parseMaybeConditional\",\n    value: function parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var potentialArrowAt = this.state.potentialArrowAt;\n      var expr = this.parseExprOps(refExpressionErrors);\n\n      if (this.shouldExitDescending(expr, potentialArrowAt)) {\n        return expr;\n      }\n\n      return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n  }, {\n    key: \"parseConditional\",\n    value: function parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (this.eat(types.question)) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.test = expr;\n        node.consequent = this.parseMaybeAssignAllowIn();\n        this.expect(types.colon);\n        node.alternate = this.parseMaybeAssign();\n        return this.finishNode(node, \"ConditionalExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseExprOps\",\n    value: function parseExprOps(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var potentialArrowAt = this.state.potentialArrowAt;\n      var expr = this.parseMaybeUnary(refExpressionErrors);\n\n      if (this.shouldExitDescending(expr, potentialArrowAt)) {\n        return expr;\n      }\n\n      return this.parseExprOp(expr, startPos, startLoc, -1);\n    }\n  }, {\n    key: \"parseExprOp\",\n    value: function parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n      var prec = this.state.type.binop;\n\n      if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n        if (prec > minPrec) {\n          var op = this.state.type;\n\n          if (op === types.pipeline) {\n            this.expectPlugin(\"pipelineOperator\");\n\n            if (this.state.inFSharpPipelineDirectBody) {\n              return left;\n            }\n\n            this.state.inPipeline = true;\n            this.checkPipelineAtInfixOperator(left, leftStartPos);\n          }\n\n          var node = this.startNodeAt(leftStartPos, leftStartLoc);\n          node.left = left;\n          node.operator = this.state.value;\n          var logical = op === types.logicalOR || op === types.logicalAND;\n          var coalesce = op === types.nullishCoalescing;\n\n          if (coalesce) {\n            prec = types.logicalAND.binop;\n          }\n\n          this.next();\n\n          if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n            if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n              throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n            }\n          }\n\n          node.right = this.parseExprOpRightExpr(op, prec);\n          this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n          var nextOp = this.state.type;\n\n          if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n            throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n          }\n\n          return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n        }\n      }\n\n      return left;\n    }\n  }, {\n    key: \"parseExprOpRightExpr\",\n    value: function parseExprOpRightExpr(op, prec) {\n      var _this48 = this;\n\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n\n      switch (op) {\n        case types.pipeline:\n          switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n            case \"smart\":\n              return this.withTopicPermittingContext(function () {\n                return _this48.parseSmartPipelineBody(_this48.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n              });\n\n            case \"fsharp\":\n              return this.withSoloAwaitPermittingContext(function () {\n                return _this48.parseFSharpPipelineBody(prec);\n              });\n          }\n\n        default:\n          return this.parseExprOpBaseRightExpr(op, prec);\n      }\n    }\n  }, {\n    key: \"parseExprOpBaseRightExpr\",\n    value: function parseExprOpBaseRightExpr(op, prec) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n    }\n  }, {\n    key: \"checkExponentialAfterUnary\",\n    value: function checkExponentialAfterUnary(node) {\n      if (this.match(types.exponent)) {\n        this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n      }\n    }\n  }, {\n    key: \"parseMaybeUnary\",\n    value: function parseMaybeUnary(refExpressionErrors, sawUnary) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var isAwait = this.isContextual(\"await\");\n\n      if (isAwait && this.isAwaitAllowed()) {\n        this.next();\n\n        var _expr = this.parseAwait(startPos, startLoc);\n\n        if (!sawUnary) this.checkExponentialAfterUnary(_expr);\n        return _expr;\n      }\n\n      if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n        return this.parseModuleExpression();\n      }\n\n      var update = this.match(types.incDec);\n      var node = this.startNode();\n\n      if (this.state.type.prefix) {\n        node.operator = this.state.value;\n        node.prefix = true;\n\n        if (this.match(types._throw)) {\n          this.expectPlugin(\"throwExpressions\");\n        }\n\n        var isDelete = this.match(types._delete);\n        this.next();\n        node.argument = this.parseMaybeUnary(null, true);\n        this.checkExpressionErrors(refExpressionErrors, true);\n\n        if (this.state.strict && isDelete) {\n          var arg = node.argument;\n\n          if (arg.type === \"Identifier\") {\n            this.raise(node.start, ErrorMessages.StrictDelete);\n          } else if (this.hasPropertyAsPrivateName(arg)) {\n            this.raise(node.start, ErrorMessages.DeletePrivateField);\n          }\n        }\n\n        if (!update) {\n          if (!sawUnary) this.checkExponentialAfterUnary(node);\n          return this.finishNode(node, \"UnaryExpression\");\n        }\n      }\n\n      var expr = this.parseUpdate(node, update, refExpressionErrors);\n\n      if (isAwait) {\n        var _startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types.modulo);\n\n        if (_startsExpr && !this.isAmbiguousAwait()) {\n          this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n          return this.parseAwait(startPos, startLoc);\n        }\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseUpdate\",\n    value: function parseUpdate(node, update, refExpressionErrors) {\n      if (update) {\n        this.checkLVal(node.argument, \"prefix operation\");\n        return this.finishNode(node, \"UpdateExpression\");\n      }\n\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var expr = this.parseExprSubscripts(refExpressionErrors);\n      if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n      while (this.state.type.postfix && !this.canInsertSemicolon()) {\n        var _node9 = this.startNodeAt(startPos, startLoc);\n\n        _node9.operator = this.state.value;\n        _node9.prefix = false;\n        _node9.argument = expr;\n        this.checkLVal(expr, \"postfix operation\");\n        this.next();\n        expr = this.finishNode(_node9, \"UpdateExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseExprSubscripts\",\n    value: function parseExprSubscripts(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var potentialArrowAt = this.state.potentialArrowAt;\n      var expr = this.parseExprAtom(refExpressionErrors);\n\n      if (this.shouldExitDescending(expr, potentialArrowAt)) {\n        return expr;\n      }\n\n      return this.parseSubscripts(expr, startPos, startLoc);\n    }\n  }, {\n    key: \"parseSubscripts\",\n    value: function parseSubscripts(base, startPos, startLoc, noCalls) {\n      var state = {\n        optionalChainMember: false,\n        maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n        stop: false\n      };\n\n      do {\n        base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n        state.maybeAsyncArrow = false;\n      } while (!state.stop);\n\n      return base;\n    }\n  }, {\n    key: \"parseSubscript\",\n    value: function parseSubscript(base, startPos, startLoc, noCalls, state) {\n      if (!noCalls && this.eat(types.doubleColon)) {\n        return this.parseBind(base, startPos, startLoc, noCalls, state);\n      } else if (this.match(types.backQuote)) {\n        return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n      }\n\n      var optional = false;\n\n      if (this.match(types.questionDot)) {\n        if (noCalls && this.lookaheadCharCode() === 40) {\n          state.stop = true;\n          return base;\n        }\n\n        state.optionalChainMember = optional = true;\n        this.next();\n      }\n\n      if (!noCalls && this.match(types.parenL)) {\n        return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n      } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n        return this.parseMember(base, startPos, startLoc, state, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }, {\n    key: \"parseMember\",\n    value: function parseMember(base, startPos, startLoc, state, optional) {\n      var node = this.startNodeAt(startPos, startLoc);\n      var computed = this.eat(types.bracketL);\n      node.object = base;\n      node.computed = computed;\n      var property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n      if (this.isPrivateName(property)) {\n        if (node.object.type === \"Super\") {\n          this.raise(startPos, ErrorMessages.SuperPrivateField);\n        }\n\n        this.classScope.usePrivateName(this.getPrivateNameSV(property), property.start);\n      }\n\n      node.property = property;\n\n      if (computed) {\n        this.expect(types.bracketR);\n      }\n\n      if (state.optionalChainMember) {\n        node.optional = optional;\n        return this.finishNode(node, \"OptionalMemberExpression\");\n      } else {\n        return this.finishNode(node, \"MemberExpression\");\n      }\n    }\n  }, {\n    key: \"parseBind\",\n    value: function parseBind(base, startPos, startLoc, noCalls, state) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.callee = this.parseNoCallExpr();\n      state.stop = true;\n      return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n    }\n  }, {\n    key: \"parseCoverCallAndAsyncArrowHead\",\n    value: function parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n      this.next();\n      var node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.enter(newAsyncArrowScope());\n      }\n\n      if (state.optionalChainMember) {\n        node.optional = optional;\n      }\n\n      if (optional) {\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      } else {\n        node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n      }\n\n      this.finishCallExpression(node, state.optionalChainMember);\n\n      if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n        state.stop = true;\n        this.expressionScope.validateAsPattern();\n        this.expressionScope.exit();\n        node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n      } else {\n        if (state.maybeAsyncArrow) {\n          this.expressionScope.exit();\n        }\n\n        this.toReferencedArguments(node);\n      }\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      return node;\n    }\n  }, {\n    key: \"toReferencedArguments\",\n    value: function toReferencedArguments(node, isParenthesizedExpr) {\n      this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n    }\n  }, {\n    key: \"parseTaggedTemplateExpression\",\n    value: function parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.tag = base;\n      node.quasi = this.parseTemplate(true);\n\n      if (state.optionalChainMember) {\n        this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n      }\n\n      return this.finishNode(node, \"TaggedTemplateExpression\");\n    }\n  }, {\n    key: \"atPossibleAsyncArrow\",\n    value: function atPossibleAsyncArrow(base) {\n      return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n    }\n  }, {\n    key: \"finishCallExpression\",\n    value: function finishCallExpression(node, optional) {\n      if (node.callee.type === \"Import\") {\n        if (node.arguments.length === 2) {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n\n        if (node.arguments.length === 0 || node.arguments.length > 2) {\n          this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n        } else {\n          var _iterator9 = _createForOfIteratorHelper(node.arguments),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var arg = _step9.value;\n\n              if (arg.type === \"SpreadElement\") {\n                this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n              }\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n        }\n      }\n\n      return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n    }\n  }, {\n    key: \"parseCallExpressionArguments\",\n    value: function parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n      var elts = [];\n      var first = true;\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = false;\n\n      while (!this.eat(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n\n          if (this.match(close)) {\n            if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n              this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n            }\n\n            if (nodeForExtra) {\n              this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n            }\n\n            this.next();\n            break;\n          }\n        }\n\n        elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n          start: 0\n        } : undefined, allowPlaceholder));\n      }\n\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      return elts;\n    }\n  }, {\n    key: \"shouldParseAsyncArrow\",\n    value: function shouldParseAsyncArrow() {\n      return this.match(types.arrow) && !this.canInsertSemicolon();\n    }\n  }, {\n    key: \"parseAsyncArrowFromCallExpression\",\n    value: function parseAsyncArrowFromCallExpression(node, call) {\n      var _call$extra;\n\n      this.expect(types.arrow);\n      this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n      return node;\n    }\n  }, {\n    key: \"parseNoCallExpr\",\n    value: function parseNoCallExpr() {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    }\n  }, {\n    key: \"parseExprAtom\",\n    value: function parseExprAtom(refExpressionErrors) {\n      if (this.state.type === types.slash) this.readRegexp();\n      var canBeArrow = this.state.potentialArrowAt === this.state.start;\n      var node;\n\n      switch (this.state.type) {\n        case types._super:\n          return this.parseSuper();\n\n        case types._import:\n          node = this.startNode();\n          this.next();\n\n          if (this.match(types.dot)) {\n            return this.parseImportMetaProperty(node);\n          }\n\n          if (!this.match(types.parenL)) {\n            this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n          }\n\n          return this.finishNode(node, \"Import\");\n\n        case types._this:\n          node = this.startNode();\n          this.next();\n          return this.finishNode(node, \"ThisExpression\");\n\n        case types.name:\n          {\n            var containsEsc = this.state.containsEsc;\n            var id = this.parseIdentifier();\n\n            if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n              if (this.match(types._function)) {\n                var _last4 = this.state.context.length - 1;\n\n                if (this.state.context[_last4] !== types$1.functionStatement) {\n                  throw new Error(\"Internal error\");\n                }\n\n                this.state.context[_last4] = types$1.functionExpression;\n                this.next();\n                return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n              } else if (this.match(types.name)) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              }\n            }\n\n            if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n              this.next();\n              return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n            }\n\n            return id;\n          }\n\n        case types._do:\n          {\n            return this.parseDo();\n          }\n\n        case types.regexp:\n          {\n            var value = this.state.value;\n            node = this.parseLiteral(value.value, \"RegExpLiteral\");\n            node.pattern = value.pattern;\n            node.flags = value.flags;\n            return node;\n          }\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n        case types.decimal:\n          return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n        case types._null:\n          node = this.startNode();\n          this.next();\n          return this.finishNode(node, \"NullLiteral\");\n\n        case types._true:\n        case types._false:\n          return this.parseBooleanLiteral();\n\n        case types.parenL:\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n\n        case types.bracketBarL:\n        case types.bracketHashL:\n          {\n            return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n          }\n\n        case types.bracketL:\n          {\n            return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n          }\n\n        case types.braceBarL:\n        case types.braceHashL:\n          {\n            return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n          }\n\n        case types.braceL:\n          {\n            return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n          }\n\n        case types._function:\n          return this.parseFunctionOrFunctionSent();\n\n        case types.at:\n          this.parseDecorators();\n\n        case types._class:\n          node = this.startNode();\n          this.takeDecorators(node);\n          return this.parseClass(node, false);\n\n        case types._new:\n          return this.parseNewOrNewTarget();\n\n        case types.backQuote:\n          return this.parseTemplate(false);\n\n        case types.doubleColon:\n          {\n            node = this.startNode();\n            this.next();\n            node.object = null;\n            var callee = node.callee = this.parseNoCallExpr();\n\n            if (callee.type === \"MemberExpression\") {\n              return this.finishNode(node, \"BindExpression\");\n            } else {\n              throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n            }\n          }\n\n        case types.hash:\n          {\n            if (this.state.inPipeline) {\n              node = this.startNode();\n\n              if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n                this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n              }\n\n              this.next();\n\n              if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n                this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n              }\n\n              this.registerTopicReference();\n              return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n            }\n\n            var nextCh = this.input.codePointAt(this.state.end);\n\n            if (isIdentifierStart(nextCh) || nextCh === 92) {\n              var start = this.state.start;\n              node = this.parseMaybePrivateName(true);\n\n              if (this.match(types._in)) {\n                this.expectPlugin(\"privateIn\");\n                this.classScope.usePrivateName(this.getPrivateNameSV(node), node.start);\n              } else if (this.hasPlugin(\"privateIn\")) {\n                this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.getPrivateNameSV(node));\n              } else {\n                throw this.unexpected(start);\n              }\n\n              return node;\n            }\n          }\n\n        case types.relational:\n          {\n            if (this.state.value === \"<\") {\n              var lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n              if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n            }\n          }\n\n        default:\n          throw this.unexpected();\n      }\n    }\n  }, {\n    key: \"parseAsyncArrowUnaryFunction\",\n    value: function parseAsyncArrowUnaryFunction(id) {\n      var node = this.startNodeAtNode(id);\n      this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n      var params = [this.parseIdentifier()];\n      this.prodParam.exit();\n\n      if (this.hasPrecedingLineBreak()) {\n        this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n      }\n\n      this.expect(types.arrow);\n      this.parseArrowExpression(node, params, true);\n      return node;\n    }\n  }, {\n    key: \"parseDo\",\n    value: function parseDo() {\n      this.expectPlugin(\"doExpressions\");\n      var node = this.startNode();\n      this.next();\n      var oldLabels = this.state.labels;\n      this.state.labels = [];\n      node.body = this.parseBlock();\n      this.state.labels = oldLabels;\n      return this.finishNode(node, \"DoExpression\");\n    }\n  }, {\n    key: \"parseSuper\",\n    value: function parseSuper() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n        this.raise(node.start, ErrorMessages.SuperNotAllowed);\n      } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n        this.raise(node.start, ErrorMessages.UnexpectedSuper);\n      }\n\n      if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n        this.raise(node.start, ErrorMessages.UnsupportedSuper);\n      }\n\n      return this.finishNode(node, \"Super\");\n    }\n  }, {\n    key: \"parseBooleanLiteral\",\n    value: function parseBooleanLiteral() {\n      var node = this.startNode();\n      node.value = this.match(types._true);\n      this.next();\n      return this.finishNode(node, \"BooleanLiteral\");\n    }\n  }, {\n    key: \"parseMaybePrivateName\",\n    value: function parseMaybePrivateName(isPrivateNameAllowed) {\n      var isPrivate = this.match(types.hash);\n\n      if (isPrivate) {\n        this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n        if (!isPrivateNameAllowed) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n        }\n\n        var node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space between # and identifier\");\n        node.id = this.parseIdentifier(true);\n        return this.finishNode(node, \"PrivateName\");\n      } else {\n        return this.parseIdentifier(true);\n      }\n    }\n  }, {\n    key: \"parseFunctionOrFunctionSent\",\n    value: function parseFunctionOrFunctionSent() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.prodParam.hasYield && this.match(types.dot)) {\n        var meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n        this.next();\n        return this.parseMetaProperty(node, meta, \"sent\");\n      }\n\n      return this.parseFunction(node);\n    }\n  }, {\n    key: \"parseMetaProperty\",\n    value: function parseMetaProperty(node, meta, propertyName) {\n      node.meta = meta;\n\n      if (meta.name === \"function\" && propertyName === \"sent\") {\n        if (this.isContextual(propertyName)) {\n          this.expectPlugin(\"functionSent\");\n        } else if (!this.hasPlugin(\"functionSent\")) {\n          this.unexpected();\n        }\n      }\n\n      var containsEsc = this.state.containsEsc;\n      node.property = this.parseIdentifier(true);\n\n      if (node.property.name !== propertyName || containsEsc) {\n        this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n      }\n\n      return this.finishNode(node, \"MetaProperty\");\n    }\n  }, {\n    key: \"parseImportMetaProperty\",\n    value: function parseImportMetaProperty(node) {\n      var id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n      this.next();\n\n      if (this.isContextual(\"meta\")) {\n        if (!this.inModule) {\n          this.raiseWithData(id.start, {\n            code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n          }, ErrorMessages.ImportMetaOutsideModule);\n        }\n\n        this.sawUnambiguousESM = true;\n      }\n\n      return this.parseMetaProperty(node, id, \"meta\");\n    }\n  }, {\n    key: \"parseLiteral\",\n    value: function parseLiteral(value, type, startPos, startLoc) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      var node = this.startNodeAt(startPos, startLoc);\n      this.addExtra(node, \"rawValue\", value);\n      this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n      node.value = value;\n      this.next();\n      return this.finishNode(node, type);\n    }\n  }, {\n    key: \"parseParenAndDistinguishExpression\",\n    value: function parseParenAndDistinguishExpression(canBeArrow) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var val;\n      this.next();\n      this.expressionScope.enter(newArrowHeadScope());\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.maybeInArrowParameters = true;\n      this.state.inFSharpPipelineDirectBody = false;\n      var innerStartPos = this.state.start;\n      var innerStartLoc = this.state.startLoc;\n      var exprList = [];\n      var refExpressionErrors = new ExpressionErrors();\n      var refNeedsArrowPos = {\n        start: 0\n      };\n      var first = true;\n      var spreadStart;\n      var optionalCommaStart;\n\n      while (!this.match(types.parenR)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma, refNeedsArrowPos.start || null);\n\n          if (this.match(types.parenR)) {\n            optionalCommaStart = this.state.start;\n            break;\n          }\n        }\n\n        if (this.match(types.ellipsis)) {\n          var spreadNodeStartPos = this.state.start;\n          var spreadNodeStartLoc = this.state.startLoc;\n          spreadStart = this.state.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n          this.checkCommaAfterRest(41);\n          break;\n        } else {\n          exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n        }\n      }\n\n      var innerEndPos = this.state.lastTokEnd;\n      var innerEndLoc = this.state.lastTokEndLoc;\n      this.expect(types.parenR);\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      var arrowNode = this.startNodeAt(startPos, startLoc);\n\n      if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n        this.expressionScope.validateAsPattern();\n        this.expressionScope.exit();\n        this.parseArrowExpression(arrowNode, exprList, false);\n        return arrowNode;\n      }\n\n      this.expressionScope.exit();\n\n      if (!exprList.length) {\n        this.unexpected(this.state.lastTokStart);\n      }\n\n      if (optionalCommaStart) this.unexpected(optionalCommaStart);\n      if (spreadStart) this.unexpected(spreadStart);\n      this.checkExpressionErrors(refExpressionErrors, true);\n      if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n      this.toReferencedListDeep(exprList, true);\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n\n      if (!this.options.createParenthesizedExpressions) {\n        this.addExtra(val, \"parenthesized\", true);\n        this.addExtra(val, \"parenStart\", startPos);\n        return val;\n      }\n\n      var parenExpression = this.startNodeAt(startPos, startLoc);\n      parenExpression.expression = val;\n      this.finishNode(parenExpression, \"ParenthesizedExpression\");\n      return parenExpression;\n    }\n  }, {\n    key: \"shouldParseArrow\",\n    value: function shouldParseArrow() {\n      return !this.canInsertSemicolon();\n    }\n  }, {\n    key: \"parseArrow\",\n    value: function parseArrow(node) {\n      if (this.eat(types.arrow)) {\n        return node;\n      }\n    }\n  }, {\n    key: \"parseParenItem\",\n    value: function parseParenItem(node, startPos, startLoc) {\n      return node;\n    }\n  }, {\n    key: \"parseNewOrNewTarget\",\n    value: function parseNewOrNewTarget() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.match(types.dot)) {\n        var meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n        this.next();\n        var metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n        if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n          var error = ErrorMessages.UnexpectedNewTarget;\n\n          if (this.hasPlugin(\"classProperties\")) {\n            error += \" or class properties\";\n          }\n\n          this.raise(metaProp.start, error);\n        }\n\n        return metaProp;\n      }\n\n      return this.parseNew(node);\n    }\n  }, {\n    key: \"parseNew\",\n    value: function parseNew(node) {\n      node.callee = this.parseNoCallExpr();\n\n      if (node.callee.type === \"Import\") {\n        this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n      } else if (this.isOptionalChain(node.callee)) {\n        this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n      } else if (this.eat(types.questionDot)) {\n        this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n      }\n\n      this.parseNewArguments(node);\n      return this.finishNode(node, \"NewExpression\");\n    }\n  }, {\n    key: \"parseNewArguments\",\n    value: function parseNewArguments(node) {\n      if (this.eat(types.parenL)) {\n        var args = this.parseExprList(types.parenR);\n        this.toReferencedList(args);\n        node.arguments = args;\n      } else {\n        node.arguments = [];\n      }\n    }\n  }, {\n    key: \"parseTemplateElement\",\n    value: function parseTemplateElement(isTagged) {\n      var elem = this.startNode();\n\n      if (this.state.value === null) {\n        if (!isTagged) {\n          this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n        }\n      }\n\n      elem.value = {\n        raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.state.value\n      };\n      this.next();\n      elem.tail = this.match(types.backQuote);\n      return this.finishNode(elem, \"TemplateElement\");\n    }\n  }, {\n    key: \"parseTemplate\",\n    value: function parseTemplate(isTagged) {\n      var node = this.startNode();\n      this.next();\n      node.expressions = [];\n      var curElt = this.parseTemplateElement(isTagged);\n      node.quasis = [curElt];\n\n      while (!curElt.tail) {\n        this.expect(types.dollarBraceL);\n        node.expressions.push(this.parseTemplateSubstitution());\n        this.expect(types.braceR);\n        node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n      }\n\n      this.next();\n      return this.finishNode(node, \"TemplateLiteral\");\n    }\n  }, {\n    key: \"parseTemplateSubstitution\",\n    value: function parseTemplateSubstitution() {\n      return this.parseExpression();\n    }\n  }, {\n    key: \"parseObjectLike\",\n    value: function parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n      if (isRecord) {\n        this.expectPlugin(\"recordAndTuple\");\n      }\n\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = false;\n      var propHash = Object.create(null);\n      var first = true;\n      var node = this.startNode();\n      node.properties = [];\n      this.next();\n\n      while (!this.match(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n\n          if (this.match(close)) {\n            this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n            break;\n          }\n        }\n\n        var prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n        if (!isPattern) {\n          this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n        }\n\n        if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n          this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n        }\n\n        if (prop.shorthand) {\n          this.addExtra(prop, \"shorthand\", true);\n        }\n\n        node.properties.push(prop);\n      }\n\n      this.state.exprAllowed = false;\n      this.next();\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      var type = \"ObjectExpression\";\n\n      if (isPattern) {\n        type = \"ObjectPattern\";\n      } else if (isRecord) {\n        type = \"RecordExpression\";\n      }\n\n      return this.finishNode(node, type);\n    }\n  }, {\n    key: \"maybeAsyncOrAccessorProp\",\n    value: function maybeAsyncOrAccessorProp(prop) {\n      return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n    }\n  }, {\n    key: \"parsePropertyDefinition\",\n    value: function parsePropertyDefinition(isPattern, refExpressionErrors) {\n      var decorators = [];\n\n      if (this.match(types.at)) {\n        if (this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n      }\n\n      var prop = this.startNode();\n      var isGenerator = false;\n      var isAsync = false;\n      var isAccessor = false;\n      var startPos;\n      var startLoc;\n\n      if (this.match(types.ellipsis)) {\n        if (decorators.length) this.unexpected();\n\n        if (isPattern) {\n          this.next();\n          prop.argument = this.parseIdentifier();\n          this.checkCommaAfterRest(125);\n          return this.finishNode(prop, \"RestElement\");\n        }\n\n        return this.parseSpread();\n      }\n\n      if (decorators.length) {\n        prop.decorators = decorators;\n        decorators = [];\n      }\n\n      prop.method = false;\n\n      if (isPattern || refExpressionErrors) {\n        startPos = this.state.start;\n        startLoc = this.state.startLoc;\n      }\n\n      if (!isPattern) {\n        isGenerator = this.eat(types.star);\n      }\n\n      var containsEsc = this.state.containsEsc;\n      var key = this.parsePropertyName(prop, false);\n\n      if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n        var keyName = key.name;\n\n        if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n          isAsync = true;\n          isGenerator = this.eat(types.star);\n          this.parsePropertyName(prop, false);\n        }\n\n        if (keyName === \"get\" || keyName === \"set\") {\n          isAccessor = true;\n          prop.kind = keyName;\n\n          if (this.match(types.star)) {\n            isGenerator = true;\n            this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n            this.next();\n          }\n\n          this.parsePropertyName(prop, false);\n        }\n      }\n\n      this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n      return prop;\n    }\n  }, {\n    key: \"getGetterSetterExpectedParamCount\",\n    value: function getGetterSetterExpectedParamCount(method) {\n      return method.kind === \"get\" ? 0 : 1;\n    }\n  }, {\n    key: \"getObjectOrClassMethodParams\",\n    value: function getObjectOrClassMethodParams(method) {\n      return method.params;\n    }\n  }, {\n    key: \"checkGetterSetterParams\",\n    value: function checkGetterSetterParams(method) {\n      var _params;\n\n      var paramCount = this.getGetterSetterExpectedParamCount(method);\n      var params = this.getObjectOrClassMethodParams(method);\n      var start = method.start;\n\n      if (params.length !== paramCount) {\n        if (method.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n  }, {\n    key: \"parseObjectMethod\",\n    value: function parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n      if (isAccessor) {\n        this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n        this.checkGetterSetterParams(prop);\n        return prop;\n      }\n\n      if (isAsync || isGenerator || this.match(types.parenL)) {\n        if (isPattern) this.unexpected();\n        prop.kind = \"method\";\n        prop.method = true;\n        return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n      }\n    }\n  }, {\n    key: \"parseObjectProperty\",\n    value: function parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n      prop.shorthand = false;\n\n      if (this.eat(types.colon)) {\n        prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n        return this.finishNode(prop, \"ObjectProperty\");\n      }\n\n      if (!prop.computed && prop.key.type === \"Identifier\") {\n        this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n        if (isPattern) {\n          prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n        } else if (this.match(types.eq) && refExpressionErrors) {\n          if (refExpressionErrors.shorthandAssign === -1) {\n            refExpressionErrors.shorthandAssign = this.state.start;\n          }\n\n          prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n        } else {\n          prop.value = prop.key.__clone();\n        }\n\n        prop.shorthand = true;\n        return this.finishNode(prop, \"ObjectProperty\");\n      }\n    }\n  }, {\n    key: \"parseObjPropValue\",\n    value: function parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      var node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n      if (!node) this.unexpected();\n      return node;\n    }\n  }, {\n    key: \"parsePropertyName\",\n    value: function parsePropertyName(prop, isPrivateNameAllowed) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssignAllowIn();\n        this.expect(types.bracketR);\n      } else {\n        var oldInPropertyName = this.state.inPropertyName;\n        this.state.inPropertyName = true;\n        prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n        if (!this.isPrivateName(prop.key)) {\n          prop.computed = false;\n        }\n\n        this.state.inPropertyName = oldInPropertyName;\n      }\n\n      return prop.key;\n    }\n  }, {\n    key: \"initFunction\",\n    value: function initFunction(node, isAsync) {\n      node.id = null;\n      node.generator = false;\n      node.async = !!isAsync;\n    }\n  }, {\n    key: \"parseMethod\",\n    value: function parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type) {\n      var inClassScope = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n      this.initFunction(node, isAsync);\n      node.generator = !!isGenerator;\n      var allowModifiers = isConstructor;\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n      this.prodParam.enter(functionFlags(isAsync, node.generator));\n      this.parseFunctionParams(node, allowModifiers);\n      this.parseFunctionBodyAndFinish(node, type, true);\n      this.prodParam.exit();\n      this.scope.exit();\n      return node;\n    }\n  }, {\n    key: \"parseArrayLike\",\n    value: function parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      if (isTuple) {\n        this.expectPlugin(\"recordAndTuple\");\n      }\n\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = false;\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n    }\n  }, {\n    key: \"parseArrowExpression\",\n    value: function parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      var flags = functionFlags(isAsync, false);\n\n      if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n        flags |= PARAM_IN;\n      }\n\n      this.prodParam.enter(flags);\n      this.initFunction(node, isAsync);\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n      if (params) {\n        this.state.maybeInArrowParameters = true;\n        this.setArrowFunctionParameters(node, params, trailingCommaPos);\n      }\n\n      this.state.maybeInArrowParameters = false;\n      this.parseFunctionBody(node, true);\n      this.prodParam.exit();\n      this.scope.exit();\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      return this.finishNode(node, \"ArrowFunctionExpression\");\n    }\n  }, {\n    key: \"setArrowFunctionParameters\",\n    value: function setArrowFunctionParameters(node, params, trailingCommaPos) {\n      node.params = this.toAssignableList(params, trailingCommaPos, false);\n    }\n  }, {\n    key: \"parseFunctionBodyAndFinish\",\n    value: function parseFunctionBodyAndFinish(node, type) {\n      var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this.parseFunctionBody(node, false, isMethod);\n      this.finishNode(node, type);\n    }\n  }, {\n    key: \"parseFunctionBody\",\n    value: function parseFunctionBody(node, allowExpression) {\n      var _this49 = this;\n\n      var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var isExpression = allowExpression && !this.match(types.braceL);\n      this.expressionScope.enter(newExpressionScope());\n\n      if (isExpression) {\n        node.body = this.parseMaybeAssign();\n        this.checkParams(node, false, allowExpression, false);\n      } else {\n        var oldStrict = this.state.strict;\n        var oldLabels = this.state.labels;\n        this.state.labels = [];\n        this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n        node.body = this.parseBlock(true, false, function (hasStrictModeDirective) {\n          var nonSimple = !_this49.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            var errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n\n            _this49.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n          }\n\n          var strictModeChanged = !oldStrict && _this49.state.strict;\n\n          _this49.checkParams(node, !_this49.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n          if (_this49.state.strict && node.id) {\n            _this49.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n          }\n        });\n        this.prodParam.exit();\n        this.expressionScope.exit();\n        this.state.labels = oldLabels;\n      }\n    }\n  }, {\n    key: \"isSimpleParamList\",\n    value: function isSimpleParamList(params) {\n      for (var i = 0, len = params.length; i < len; i++) {\n        if (params[i].type !== \"Identifier\") return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkParams\",\n    value: function checkParams(node, allowDuplicates, isArrowFunction) {\n      var strictModeChanged = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var checkClashes = new Set();\n\n      var _iterator10 = _createForOfIteratorHelper(node.params),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var param = _step10.value;\n          this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }, {\n    key: \"parseExprList\",\n    value: function parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n      var elts = [];\n      var first = true;\n\n      while (!this.eat(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n\n          if (this.match(close)) {\n            if (nodeForExtra) {\n              this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n            }\n\n            this.next();\n            break;\n          }\n        }\n\n        elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n      }\n\n      return elts;\n    }\n  }, {\n    key: \"parseExprListItem\",\n    value: function parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n      var elt;\n\n      if (this.match(types.comma)) {\n        if (!allowEmpty) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n        }\n\n        elt = null;\n      } else if (this.match(types.ellipsis)) {\n        var spreadNodeStartPos = this.state.start;\n        var spreadNodeStartLoc = this.state.startLoc;\n        elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n      } else if (this.match(types.question)) {\n        this.expectPlugin(\"partialApplication\");\n\n        if (!allowPlaceholder) {\n          this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n        }\n\n        var node = this.startNode();\n        this.next();\n        elt = this.finishNode(node, \"ArgumentPlaceholder\");\n      } else {\n        elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n      }\n\n      return elt;\n    }\n  }, {\n    key: \"parseIdentifier\",\n    value: function parseIdentifier(liberal) {\n      var node = this.startNode();\n      var name = this.parseIdentifierName(node.start, liberal);\n      return this.createIdentifier(node, name);\n    }\n  }, {\n    key: \"createIdentifier\",\n    value: function createIdentifier(node, name) {\n      node.name = name;\n      node.loc.identifierName = name;\n      return this.finishNode(node, \"Identifier\");\n    }\n  }, {\n    key: \"parseIdentifierName\",\n    value: function parseIdentifierName(pos, liberal) {\n      var name;\n      var _this$state2 = this.state,\n          start = _this$state2.start,\n          type = _this$state2.type;\n\n      if (type === types.name) {\n        name = this.state.value;\n      } else if (type.keyword) {\n        name = type.keyword;\n        var curContext = this.curContext();\n\n        if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n          this.state.context.pop();\n        }\n      } else {\n        throw this.unexpected();\n      }\n\n      if (liberal) {\n        this.state.type = types.name;\n      } else {\n        this.checkReservedWord(name, start, !!type.keyword, false);\n      }\n\n      this.next();\n      return name;\n    }\n  }, {\n    key: \"checkReservedWord\",\n    value: function checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n      if (this.prodParam.hasYield && word === \"yield\") {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n\n      if (word === \"await\") {\n        if (this.prodParam.hasAwait) {\n          this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n          return;\n        } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n          this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n          return;\n        } else {\n          this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        }\n      }\n\n      if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n\n      if (checkKeywords && isKeyword(word)) {\n        this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n        return;\n      }\n\n      var reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n      if (reservedTest(word, this.inModule)) {\n        this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n      }\n    }\n  }, {\n    key: \"isAwaitAllowed\",\n    value: function isAwaitAllowed() {\n      if (this.prodParam.hasAwait) return true;\n\n      if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseAwait\",\n    value: function parseAwait(startPos, startLoc) {\n      var node = this.startNodeAt(startPos, startLoc);\n      this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n      if (this.eat(types.star)) {\n        this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n      }\n\n      if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n        if (this.isAmbiguousAwait()) {\n          this.ambiguousScriptDifferentAst = true;\n        } else {\n          this.sawUnambiguousESM = true;\n        }\n      }\n\n      if (!this.state.soloAwait) {\n        node.argument = this.parseMaybeUnary(null, true);\n      }\n\n      return this.finishNode(node, \"AwaitExpression\");\n    }\n  }, {\n    key: \"isAmbiguousAwait\",\n    value: function isAmbiguousAwait() {\n      return this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo);\n    }\n  }, {\n    key: \"parseYield\",\n    value: function parseYield() {\n      var node = this.startNode();\n      this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n      this.next();\n\n      if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n        node.delegate = false;\n        node.argument = null;\n      } else {\n        node.delegate = this.eat(types.star);\n        node.argument = this.parseMaybeAssign();\n      }\n\n      return this.finishNode(node, \"YieldExpression\");\n    }\n  }, {\n    key: \"checkPipelineAtInfixOperator\",\n    value: function checkPipelineAtInfixOperator(left, leftStartPos) {\n      if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n        if (left.type === \"SequenceExpression\") {\n          this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n        }\n      }\n    }\n  }, {\n    key: \"parseSmartPipelineBody\",\n    value: function parseSmartPipelineBody(childExpression, startPos, startLoc) {\n      this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n      return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n    }\n  }, {\n    key: \"checkSmartPipelineBodyEarlyErrors\",\n    value: function checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n      if (this.match(types.arrow)) {\n        throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n      } else if (childExpression.type === \"SequenceExpression\") {\n        this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n      }\n    }\n  }, {\n    key: \"parseSmartPipelineBodyInStyle\",\n    value: function parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n      var bodyNode = this.startNodeAt(startPos, startLoc);\n      var isSimpleReference = this.isSimpleReference(childExpression);\n\n      if (isSimpleReference) {\n        bodyNode.callee = childExpression;\n      } else {\n        if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n          this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n        }\n\n        bodyNode.expression = childExpression;\n      }\n\n      return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n    }\n  }, {\n    key: \"isSimpleReference\",\n    value: function isSimpleReference(expression) {\n      switch (expression.type) {\n        case \"MemberExpression\":\n          return !expression.computed && this.isSimpleReference(expression.object);\n\n        case \"Identifier\":\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"withTopicPermittingContext\",\n    value: function withTopicPermittingContext(callback) {\n      var outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 1,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    }\n  }, {\n    key: \"withTopicForbiddingContext\",\n    value: function withTopicForbiddingContext(callback) {\n      var outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    }\n  }, {\n    key: \"withSoloAwaitPermittingContext\",\n    value: function withSoloAwaitPermittingContext(callback) {\n      var outerContextSoloAwaitState = this.state.soloAwait;\n      this.state.soloAwait = true;\n\n      try {\n        return callback();\n      } finally {\n        this.state.soloAwait = outerContextSoloAwaitState;\n      }\n    }\n  }, {\n    key: \"allowInAnd\",\n    value: function allowInAnd(callback) {\n      var flags = this.prodParam.currentFlags();\n      var prodParamToSet = PARAM_IN & ~flags;\n\n      if (prodParamToSet) {\n        this.prodParam.enter(flags | PARAM_IN);\n\n        try {\n          return callback();\n        } finally {\n          this.prodParam.exit();\n        }\n      }\n\n      return callback();\n    }\n  }, {\n    key: \"disallowInAnd\",\n    value: function disallowInAnd(callback) {\n      var flags = this.prodParam.currentFlags();\n      var prodParamToClear = PARAM_IN & flags;\n\n      if (prodParamToClear) {\n        this.prodParam.enter(flags & ~PARAM_IN);\n\n        try {\n          return callback();\n        } finally {\n          this.prodParam.exit();\n        }\n      }\n\n      return callback();\n    }\n  }, {\n    key: \"registerTopicReference\",\n    value: function registerTopicReference() {\n      this.state.topicContext.maxTopicIndex = 0;\n    }\n  }, {\n    key: \"primaryTopicReferenceIsAllowedInCurrentTopicContext\",\n    value: function primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n      return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n    }\n  }, {\n    key: \"topicReferenceWasUsedInCurrentTopicContext\",\n    value: function topicReferenceWasUsedInCurrentTopicContext() {\n      return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n    }\n  }, {\n    key: \"parseFSharpPipelineBody\",\n    value: function parseFSharpPipelineBody(prec) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      this.state.potentialArrowAt = this.state.start;\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = true;\n      var ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      return ret;\n    }\n  }, {\n    key: \"parseModuleExpression\",\n    value: function parseModuleExpression() {\n      this.expectPlugin(\"moduleBlocks\");\n      var node = this.startNode();\n      this.next();\n      this.eat(types.braceL);\n      var revertScopes = this.initializeScopes(true);\n      this.enterInitialScopes();\n      var program = this.startNode();\n\n      try {\n        node.body = this.parseProgram(program, types.braceR, \"module\");\n      } finally {\n        revertScopes();\n      }\n\n      this.eat(types.braceR);\n      return this.finishNode(node, \"ModuleExpression\");\n    }\n  }]);\n\n  return ExpressionParser;\n}(LValParser);\n\nvar loopLabel = {\n  kind: \"loop\"\n},\n    switchLabel = {\n  kind: \"switch\"\n};\nvar FUNC_NO_FLAGS = 0,\n    FUNC_STATEMENT = 1,\n    FUNC_HANGING_STATEMENT = 2,\n    FUNC_NULLABLE_ID = 4;\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\nvar StatementParser = /*#__PURE__*/function (_ExpressionParser) {\n  _inherits(StatementParser, _ExpressionParser);\n\n  var _super19 = _createSuper(StatementParser);\n\n  function StatementParser() {\n    _classCallCheck(this, StatementParser);\n\n    return _super19.apply(this, arguments);\n  }\n\n  _createClass(StatementParser, [{\n    key: \"parseTopLevel\",\n    value: function parseTopLevel(file, program) {\n      file.program = this.parseProgram(program);\n      file.comments = this.state.comments;\n      if (this.options.tokens) file.tokens = this.tokens;\n      return this.finishNode(file, \"File\");\n    }\n  }, {\n    key: \"parseProgram\",\n    value: function parseProgram(program) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : types.eof;\n      var sourceType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.options.sourceType;\n      program.sourceType = sourceType;\n      program.interpreter = this.parseInterpreterDirective();\n      this.parseBlockBody(program, true, true, end);\n\n      if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n        for (var _i4 = 0, _Array$from2 = Array.from(this.scope.undefinedExports); _i4 < _Array$from2.length; _i4++) {\n          var _Array$from2$_i = _slicedToArray(_Array$from2[_i4], 1),\n              name = _Array$from2$_i[0];\n\n          var pos = this.scope.undefinedExports.get(name);\n          this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n        }\n      }\n\n      return this.finishNode(program, \"Program\");\n    }\n  }, {\n    key: \"stmtToDirective\",\n    value: function stmtToDirective(stmt) {\n      var expr = stmt.expression;\n      var directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n      var directive = this.startNodeAt(stmt.start, stmt.loc.start);\n      var raw = this.input.slice(expr.start, expr.end);\n      var val = directiveLiteral.value = raw.slice(1, -1);\n      this.addExtra(directiveLiteral, \"raw\", raw);\n      this.addExtra(directiveLiteral, \"rawValue\", val);\n      directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n      return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n    }\n  }, {\n    key: \"parseInterpreterDirective\",\n    value: function parseInterpreterDirective() {\n      if (!this.match(types.interpreterDirective)) {\n        return null;\n      }\n\n      var node = this.startNode();\n      node.value = this.state.value;\n      this.next();\n      return this.finishNode(node, \"InterpreterDirective\");\n    }\n  }, {\n    key: \"isLet\",\n    value: function isLet(context) {\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n\n      return this.isLetKeyword(context);\n    }\n  }, {\n    key: \"isLetKeyword\",\n    value: function isLetKeyword(context) {\n      var next = this.nextTokenStart();\n      var nextCh = this.input.charCodeAt(next);\n      if (nextCh === 91) return true;\n      if (context) return false;\n      if (nextCh === 123) return true;\n\n      if (isIdentifierStart(nextCh)) {\n        var pos = next + 1;\n\n        while (isIdentifierChar(this.input.charCodeAt(pos))) {\n          ++pos;\n        }\n\n        var ident = this.input.slice(next, pos);\n        if (!keywordRelationalOperator.test(ident)) return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseStatement\",\n    value: function parseStatement(context, topLevel) {\n      if (this.match(types.at)) {\n        this.parseDecorators(true);\n      }\n\n      return this.parseStatementContent(context, topLevel);\n    }\n  }, {\n    key: \"parseStatementContent\",\n    value: function parseStatementContent(context, topLevel) {\n      var starttype = this.state.type;\n      var node = this.startNode();\n      var kind;\n\n      if (this.isLet(context)) {\n        starttype = types._var;\n        kind = \"let\";\n      }\n\n      switch (starttype) {\n        case types._break:\n        case types._continue:\n          return this.parseBreakContinueStatement(node, starttype.keyword);\n\n        case types._debugger:\n          return this.parseDebuggerStatement(node);\n\n        case types._do:\n          return this.parseDoStatement(node);\n\n        case types._for:\n          return this.parseForStatement(node);\n\n        case types._function:\n          if (this.lookaheadCharCode() === 46) break;\n\n          if (context) {\n            if (this.state.strict) {\n              this.raise(this.state.start, ErrorMessages.StrictFunction);\n            } else if (context !== \"if\" && context !== \"label\") {\n              this.raise(this.state.start, ErrorMessages.SloppyFunction);\n            }\n          }\n\n          return this.parseFunctionStatement(node, false, !context);\n\n        case types._class:\n          if (context) this.unexpected();\n          return this.parseClass(node, true);\n\n        case types._if:\n          return this.parseIfStatement(node);\n\n        case types._return:\n          return this.parseReturnStatement(node);\n\n        case types._switch:\n          return this.parseSwitchStatement(node);\n\n        case types._throw:\n          return this.parseThrowStatement(node);\n\n        case types._try:\n          return this.parseTryStatement(node);\n\n        case types._const:\n        case types._var:\n          kind = kind || this.state.value;\n\n          if (context && kind !== \"var\") {\n            this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n          }\n\n          return this.parseVarStatement(node, kind);\n\n        case types._while:\n          return this.parseWhileStatement(node);\n\n        case types._with:\n          return this.parseWithStatement(node);\n\n        case types.braceL:\n          return this.parseBlock();\n\n        case types.semi:\n          return this.parseEmptyStatement(node);\n\n        case types._import:\n          {\n            var nextTokenCharCode = this.lookaheadCharCode();\n\n            if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n          }\n\n        case types._export:\n          {\n            if (!this.options.allowImportExportEverywhere && !topLevel) {\n              this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n            }\n\n            this.next();\n            var result;\n\n            if (starttype === types._import) {\n              result = this.parseImport(node);\n\n              if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n                this.sawUnambiguousESM = true;\n              }\n            } else {\n              result = this.parseExport(node);\n\n              if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n                this.sawUnambiguousESM = true;\n              }\n            }\n\n            this.assertModuleNodeAllowed(node);\n            return result;\n          }\n\n        default:\n          {\n            if (this.isAsyncFunction()) {\n              if (context) {\n                this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n              }\n\n              this.next();\n              return this.parseFunctionStatement(node, true, !context);\n            }\n          }\n      }\n\n      var maybeName = this.state.value;\n      var expr = this.parseExpression();\n\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n        return this.parseLabeledStatement(node, maybeName, expr, context);\n      } else {\n        return this.parseExpressionStatement(node, expr);\n      }\n    }\n  }, {\n    key: \"assertModuleNodeAllowed\",\n    value: function assertModuleNodeAllowed(node) {\n      if (!this.options.allowImportExportEverywhere && !this.inModule) {\n        this.raiseWithData(node.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportOutsideModule);\n      }\n    }\n  }, {\n    key: \"takeDecorators\",\n    value: function takeDecorators(node) {\n      var decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n      if (decorators.length) {\n        node.decorators = decorators;\n        this.resetStartLocationFromNode(node, decorators[0]);\n        this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n      }\n    }\n  }, {\n    key: \"canHaveLeadingDecorator\",\n    value: function canHaveLeadingDecorator() {\n      return this.match(types._class);\n    }\n  }, {\n    key: \"parseDecorators\",\n    value: function parseDecorators(allowExport) {\n      var currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n      while (this.match(types.at)) {\n        var decorator = this.parseDecorator();\n        currentContextDecorators.push(decorator);\n      }\n\n      if (this.match(types._export)) {\n        if (!allowExport) {\n          this.unexpected();\n        }\n\n        if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n        }\n      } else if (!this.canHaveLeadingDecorator()) {\n        throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n      }\n    }\n  }, {\n    key: \"parseDecorator\",\n    value: function parseDecorator() {\n      this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n      var node = this.startNode();\n      this.next();\n\n      if (this.hasPlugin(\"decorators\")) {\n        this.state.decoratorStack.push([]);\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var expr;\n\n        if (this.eat(types.parenL)) {\n          expr = this.parseExpression();\n          this.expect(types.parenR);\n        } else {\n          expr = this.parseIdentifier(false);\n\n          while (this.eat(types.dot)) {\n            var _node10 = this.startNodeAt(startPos, startLoc);\n\n            _node10.object = expr;\n            _node10.property = this.parseIdentifier(true);\n            _node10.computed = false;\n            expr = this.finishNode(_node10, \"MemberExpression\");\n          }\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        this.state.decoratorStack.pop();\n      } else {\n        node.expression = this.parseExprSubscripts();\n      }\n\n      return this.finishNode(node, \"Decorator\");\n    }\n  }, {\n    key: \"parseMaybeDecoratorArguments\",\n    value: function parseMaybeDecoratorArguments(expr) {\n      if (this.eat(types.parenL)) {\n        var node = this.startNodeAtNode(expr);\n        node.callee = expr;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        this.toReferencedList(node.arguments);\n        return this.finishNode(node, \"CallExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseBreakContinueStatement\",\n    value: function parseBreakContinueStatement(node, keyword) {\n      var isBreak = keyword === \"break\";\n      this.next();\n\n      if (this.isLineTerminator()) {\n        node.label = null;\n      } else {\n        node.label = this.parseIdentifier();\n        this.semicolon();\n      }\n\n      this.verifyBreakContinue(node, keyword);\n      return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n    }\n  }, {\n    key: \"verifyBreakContinue\",\n    value: function verifyBreakContinue(node, keyword) {\n      var isBreak = keyword === \"break\";\n      var i;\n\n      for (i = 0; i < this.state.labels.length; ++i) {\n        var lab = this.state.labels[i];\n\n        if (node.label == null || lab.name === node.label.name) {\n          if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n          if (node.label && isBreak) break;\n        }\n      }\n\n      if (i === this.state.labels.length) {\n        this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n      }\n    }\n  }, {\n    key: \"parseDebuggerStatement\",\n    value: function parseDebuggerStatement(node) {\n      this.next();\n      this.semicolon();\n      return this.finishNode(node, \"DebuggerStatement\");\n    }\n  }, {\n    key: \"parseHeaderExpression\",\n    value: function parseHeaderExpression() {\n      this.expect(types.parenL);\n      var val = this.parseExpression();\n      this.expect(types.parenR);\n      return val;\n    }\n  }, {\n    key: \"parseDoStatement\",\n    value: function parseDoStatement(node) {\n      var _this50 = this;\n\n      this.next();\n      this.state.labels.push(loopLabel);\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this50.parseStatement(\"do\");\n      });\n      this.state.labels.pop();\n      this.expect(types._while);\n      node.test = this.parseHeaderExpression();\n      this.eat(types.semi);\n      return this.finishNode(node, \"DoWhileStatement\");\n    }\n  }, {\n    key: \"parseForStatement\",\n    value: function parseForStatement(node) {\n      this.next();\n      this.state.labels.push(loopLabel);\n      var awaitAt = -1;\n\n      if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n        awaitAt = this.state.lastTokStart;\n      }\n\n      this.scope.enter(SCOPE_OTHER);\n      this.expect(types.parenL);\n\n      if (this.match(types.semi)) {\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n\n        return this.parseFor(node, null);\n      }\n\n      var startsWithLet = this.isContextual(\"let\");\n      var isLet = startsWithLet && this.isLetKeyword();\n\n      if (this.match(types._var) || this.match(types._const) || isLet) {\n        var _init = this.startNode();\n\n        var kind = isLet ? \"let\" : this.state.value;\n        this.next();\n        this.parseVar(_init, true, kind);\n        this.finishNode(_init, \"VariableDeclaration\");\n\n        if ((this.match(types._in) || this.isContextual(\"of\")) && _init.declarations.length === 1) {\n          return this.parseForIn(node, _init, awaitAt);\n        }\n\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n\n        return this.parseFor(node, _init);\n      }\n\n      var refExpressionErrors = new ExpressionErrors();\n      var init = this.parseExpression(true, refExpressionErrors);\n      var isForOf = this.isContextual(\"of\");\n\n      if (isForOf || this.match(types._in)) {\n        if (isForOf && startsWithLet) {\n          this.raise(init.start, ErrorMessages.ForOfLet);\n        }\n\n        this.toAssignable(init, true);\n        var description = isForOf ? \"for-of statement\" : \"for-in statement\";\n        this.checkLVal(init, description);\n        return this.parseForIn(node, init, awaitAt);\n      } else {\n        this.checkExpressionErrors(refExpressionErrors, true);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n  }, {\n    key: \"parseFunctionStatement\",\n    value: function parseFunctionStatement(node, isAsync, declarationPosition) {\n      this.next();\n      return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n    }\n  }, {\n    key: \"parseIfStatement\",\n    value: function parseIfStatement(node) {\n      this.next();\n      node.test = this.parseHeaderExpression();\n      node.consequent = this.parseStatement(\"if\");\n      node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n      return this.finishNode(node, \"IfStatement\");\n    }\n  }, {\n    key: \"parseReturnStatement\",\n    value: function parseReturnStatement(node) {\n      if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n        this.raise(this.state.start, ErrorMessages.IllegalReturn);\n      }\n\n      this.next();\n\n      if (this.isLineTerminator()) {\n        node.argument = null;\n      } else {\n        node.argument = this.parseExpression();\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"ReturnStatement\");\n    }\n  }, {\n    key: \"parseSwitchStatement\",\n    value: function parseSwitchStatement(node) {\n      this.next();\n      node.discriminant = this.parseHeaderExpression();\n      var cases = node.cases = [];\n      this.expect(types.braceL);\n      this.state.labels.push(switchLabel);\n      this.scope.enter(SCOPE_OTHER);\n      var cur;\n\n      for (var sawDefault; !this.match(types.braceR);) {\n        if (this.match(types._case) || this.match(types._default)) {\n          var isCase = this.match(types._case);\n          if (cur) this.finishNode(cur, \"SwitchCase\");\n          cases.push(cur = this.startNode());\n          cur.consequent = [];\n          this.next();\n\n          if (isCase) {\n            cur.test = this.parseExpression();\n          } else {\n            if (sawDefault) {\n              this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n            }\n\n            sawDefault = true;\n            cur.test = null;\n          }\n\n          this.expect(types.colon);\n        } else {\n          if (cur) {\n            cur.consequent.push(this.parseStatement(null));\n          } else {\n            this.unexpected();\n          }\n        }\n      }\n\n      this.scope.exit();\n      if (cur) this.finishNode(cur, \"SwitchCase\");\n      this.next();\n      this.state.labels.pop();\n      return this.finishNode(node, \"SwitchStatement\");\n    }\n  }, {\n    key: \"parseThrowStatement\",\n    value: function parseThrowStatement(node) {\n      this.next();\n\n      if (this.hasPrecedingLineBreak()) {\n        this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n      }\n\n      node.argument = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(node, \"ThrowStatement\");\n    }\n  }, {\n    key: \"parseCatchClauseParam\",\n    value: function parseCatchClauseParam() {\n      var param = this.parseBindingAtom();\n      var simple = param.type === \"Identifier\";\n      this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n      return param;\n    }\n  }, {\n    key: \"parseTryStatement\",\n    value: function parseTryStatement(node) {\n      var _this51 = this;\n\n      this.next();\n      node.block = this.parseBlock();\n      node.handler = null;\n\n      if (this.match(types._catch)) {\n        var clause = this.startNode();\n        this.next();\n\n        if (this.match(types.parenL)) {\n          this.expect(types.parenL);\n          clause.param = this.parseCatchClauseParam();\n          this.expect(types.parenR);\n        } else {\n          clause.param = null;\n          this.scope.enter(SCOPE_OTHER);\n        }\n\n        clause.body = this.withTopicForbiddingContext(function () {\n          return _this51.parseBlock(false, false);\n        });\n        this.scope.exit();\n        node.handler = this.finishNode(clause, \"CatchClause\");\n      }\n\n      node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n      if (!node.handler && !node.finalizer) {\n        this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n      }\n\n      return this.finishNode(node, \"TryStatement\");\n    }\n  }, {\n    key: \"parseVarStatement\",\n    value: function parseVarStatement(node, kind) {\n      this.next();\n      this.parseVar(node, false, kind);\n      this.semicolon();\n      return this.finishNode(node, \"VariableDeclaration\");\n    }\n  }, {\n    key: \"parseWhileStatement\",\n    value: function parseWhileStatement(node) {\n      var _this52 = this;\n\n      this.next();\n      node.test = this.parseHeaderExpression();\n      this.state.labels.push(loopLabel);\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this52.parseStatement(\"while\");\n      });\n      this.state.labels.pop();\n      return this.finishNode(node, \"WhileStatement\");\n    }\n  }, {\n    key: \"parseWithStatement\",\n    value: function parseWithStatement(node) {\n      var _this53 = this;\n\n      if (this.state.strict) {\n        this.raise(this.state.start, ErrorMessages.StrictWith);\n      }\n\n      this.next();\n      node.object = this.parseHeaderExpression();\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this53.parseStatement(\"with\");\n      });\n      return this.finishNode(node, \"WithStatement\");\n    }\n  }, {\n    key: \"parseEmptyStatement\",\n    value: function parseEmptyStatement(node) {\n      this.next();\n      return this.finishNode(node, \"EmptyStatement\");\n    }\n  }, {\n    key: \"parseLabeledStatement\",\n    value: function parseLabeledStatement(node, maybeName, expr, context) {\n      var _iterator11 = _createForOfIteratorHelper(this.state.labels),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var _label = _step11.value;\n\n          if (_label.name === maybeName) {\n            this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      var kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n      for (var i = this.state.labels.length - 1; i >= 0; i--) {\n        var label = this.state.labels[i];\n\n        if (label.statementStart === node.start) {\n          label.statementStart = this.state.start;\n          label.kind = kind;\n        } else {\n          break;\n        }\n      }\n\n      this.state.labels.push({\n        name: maybeName,\n        kind: kind,\n        statementStart: this.state.start\n      });\n      node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n      this.state.labels.pop();\n      node.label = expr;\n      return this.finishNode(node, \"LabeledStatement\");\n    }\n  }, {\n    key: \"parseExpressionStatement\",\n    value: function parseExpressionStatement(node, expr) {\n      node.expression = expr;\n      this.semicolon();\n      return this.finishNode(node, \"ExpressionStatement\");\n    }\n  }, {\n    key: \"parseBlock\",\n    value: function parseBlock() {\n      var allowDirectives = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var createNewLexicalScope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var afterBlockParse = arguments.length > 2 ? arguments[2] : undefined;\n      var node = this.startNode();\n\n      if (allowDirectives) {\n        this.state.strictErrors.clear();\n      }\n\n      this.expect(types.braceL);\n\n      if (createNewLexicalScope) {\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n      if (createNewLexicalScope) {\n        this.scope.exit();\n      }\n\n      return this.finishNode(node, \"BlockStatement\");\n    }\n  }, {\n    key: \"isValidDirective\",\n    value: function isValidDirective(stmt) {\n      return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n    }\n  }, {\n    key: \"parseBlockBody\",\n    value: function parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n      var body = node.body = [];\n      var directives = node.directives = [];\n      this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n    }\n  }, {\n    key: \"parseBlockOrModuleBlockBody\",\n    value: function parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n      var oldStrict = this.state.strict;\n      var hasStrictModeDirective = false;\n      var parsedNonDirective = false;\n\n      while (!this.match(end)) {\n        var stmt = this.parseStatement(null, topLevel);\n\n        if (directives && !parsedNonDirective) {\n          if (this.isValidDirective(stmt)) {\n            var directive = this.stmtToDirective(stmt);\n            directives.push(directive);\n\n            if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n              hasStrictModeDirective = true;\n              this.setStrict(true);\n            }\n\n            continue;\n          }\n\n          parsedNonDirective = true;\n          this.state.strictErrors.clear();\n        }\n\n        body.push(stmt);\n      }\n\n      if (afterBlockParse) {\n        afterBlockParse.call(this, hasStrictModeDirective);\n      }\n\n      if (!oldStrict) {\n        this.setStrict(false);\n      }\n\n      this.next();\n    }\n  }, {\n    key: \"parseFor\",\n    value: function parseFor(node, init) {\n      var _this54 = this;\n\n      node.init = init;\n      this.semicolon(false);\n      node.test = this.match(types.semi) ? null : this.parseExpression();\n      this.semicolon(false);\n      node.update = this.match(types.parenR) ? null : this.parseExpression();\n      this.expect(types.parenR);\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this54.parseStatement(\"for\");\n      });\n      this.scope.exit();\n      this.state.labels.pop();\n      return this.finishNode(node, \"ForStatement\");\n    }\n  }, {\n    key: \"parseForIn\",\n    value: function parseForIn(node, init, awaitAt) {\n      var _this55 = this;\n\n      var isForIn = this.match(types._in);\n      this.next();\n\n      if (isForIn) {\n        if (awaitAt > -1) this.unexpected(awaitAt);\n      } else {\n        node.await = awaitAt > -1;\n      }\n\n      if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n        this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n      } else if (init.type === \"AssignmentPattern\") {\n        this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n      }\n\n      node.left = init;\n      node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n      this.expect(types.parenR);\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this55.parseStatement(\"for\");\n      });\n      this.scope.exit();\n      this.state.labels.pop();\n      return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n    }\n  }, {\n    key: \"parseVar\",\n    value: function parseVar(node, isFor, kind) {\n      var declarations = node.declarations = [];\n      var isTypescript = this.hasPlugin(\"typescript\");\n      node.kind = kind;\n\n      for (;;) {\n        var decl = this.startNode();\n        this.parseVarId(decl, kind);\n\n        if (this.eat(types.eq)) {\n          decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n        } else {\n          if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n            if (!isTypescript) {\n              this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n            }\n          } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n          }\n\n          decl.init = null;\n        }\n\n        declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n        if (!this.eat(types.comma)) break;\n      }\n\n      return node;\n    }\n  }, {\n    key: \"parseVarId\",\n    value: function parseVarId(decl, kind) {\n      decl.id = this.parseBindingAtom();\n      this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n    }\n  }, {\n    key: \"parseFunction\",\n    value: function parseFunction(node) {\n      var _this56 = this;\n\n      var statement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FUNC_NO_FLAGS;\n      var isAsync = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var isStatement = statement & FUNC_STATEMENT;\n      var isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n      var requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n      this.initFunction(node, isAsync);\n\n      if (this.match(types.star) && isHangingStatement) {\n        this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n      }\n\n      node.generator = this.eat(types.star);\n\n      if (isStatement) {\n        node.id = this.parseFunctionId(requireId);\n      }\n\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = false;\n      this.scope.enter(SCOPE_FUNCTION);\n      this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n      if (!isStatement) {\n        node.id = this.parseFunctionId();\n      }\n\n      this.parseFunctionParams(node, false);\n      this.withTopicForbiddingContext(function () {\n        _this56.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n      });\n      this.prodParam.exit();\n      this.scope.exit();\n\n      if (isStatement && !isHangingStatement) {\n        this.registerFunctionStatementId(node);\n      }\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      return node;\n    }\n  }, {\n    key: \"parseFunctionId\",\n    value: function parseFunctionId(requireId) {\n      return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n    }\n  }, {\n    key: \"parseFunctionParams\",\n    value: function parseFunctionParams(node, allowModifiers) {\n      this.expect(types.parenL);\n      this.expressionScope.enter(newParameterDeclarationScope());\n      node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n      this.expressionScope.exit();\n    }\n  }, {\n    key: \"registerFunctionStatementId\",\n    value: function registerFunctionStatementId(node) {\n      if (!node.id) return;\n      this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n    }\n  }, {\n    key: \"parseClass\",\n    value: function parseClass(node, isStatement, optionalId) {\n      this.next();\n      this.takeDecorators(node);\n      var oldStrict = this.state.strict;\n      this.state.strict = true;\n      this.parseClassId(node, isStatement, optionalId);\n      this.parseClassSuper(node);\n      node.body = this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n    }\n  }, {\n    key: \"isClassProperty\",\n    value: function isClassProperty() {\n      return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n    }\n  }, {\n    key: \"isClassMethod\",\n    value: function isClassMethod() {\n      return this.match(types.parenL);\n    }\n  }, {\n    key: \"isNonstaticConstructor\",\n    value: function isNonstaticConstructor(method) {\n      return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n    }\n  }, {\n    key: \"parseClassBody\",\n    value: function parseClassBody(constructorAllowsSuper, oldStrict) {\n      var _this57 = this;\n\n      this.classScope.enter();\n      var state = {\n        constructorAllowsSuper: constructorAllowsSuper,\n        hadConstructor: false\n      };\n      var decorators = [];\n      var classBody = this.startNode();\n      classBody.body = [];\n      this.expect(types.braceL);\n      this.withTopicForbiddingContext(function () {\n        while (!_this57.match(types.braceR)) {\n          if (_this57.eat(types.semi)) {\n            if (decorators.length > 0) {\n              throw _this57.raise(_this57.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n            }\n\n            continue;\n          }\n\n          if (_this57.match(types.at)) {\n            decorators.push(_this57.parseDecorator());\n            continue;\n          }\n\n          var member = _this57.startNode();\n\n          if (decorators.length) {\n            member.decorators = decorators;\n\n            _this57.resetStartLocationFromNode(member, decorators[0]);\n\n            decorators = [];\n          }\n\n          _this57.parseClassMember(classBody, member, state);\n\n          if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n            _this57.raise(member.start, ErrorMessages.DecoratorConstructor);\n          }\n        }\n      });\n      this.state.strict = oldStrict;\n      this.next();\n\n      if (decorators.length) {\n        throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n      }\n\n      this.classScope.exit();\n      return this.finishNode(classBody, \"ClassBody\");\n    }\n  }, {\n    key: \"parseClassMemberFromModifier\",\n    value: function parseClassMemberFromModifier(classBody, member) {\n      var key = this.parseIdentifier(true);\n\n      if (this.isClassMethod()) {\n        var method = member;\n        method.kind = \"method\";\n        method.computed = false;\n        method.key = key;\n        method.static = false;\n        this.pushClassMethod(classBody, method, false, false, false, false);\n        return true;\n      } else if (this.isClassProperty()) {\n        var prop = member;\n        prop.computed = false;\n        prop.key = key;\n        prop.static = false;\n        classBody.body.push(this.parseClassProperty(prop));\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseClassMember\",\n    value: function parseClassMember(classBody, member, state) {\n      var isStatic = this.isContextual(\"static\");\n\n      if (isStatic) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        if (this.eat(types.braceL)) {\n          this.parseClassStaticBlock(classBody, member);\n          return;\n        }\n      }\n\n      this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n  }, {\n    key: \"parseClassMemberWithIsStatic\",\n    value: function parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n      var publicMethod = member;\n      var privateMethod = member;\n      var publicProp = member;\n      var privateProp = member;\n      var method = publicMethod;\n      var publicMember = publicMethod;\n      member.static = isStatic;\n\n      if (this.eat(types.star)) {\n        method.kind = \"method\";\n        this.parseClassElementName(method);\n\n        if (this.isPrivateName(method.key)) {\n          this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n          return;\n        }\n\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n        return;\n      }\n\n      var containsEsc = this.state.containsEsc;\n      var key = this.parseClassElementName(member);\n      var isPrivate = this.isPrivateName(key);\n      var isSimple = key.type === \"Identifier\";\n      var maybeQuestionTokenStart = this.state.start;\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isClassMethod()) {\n        method.kind = \"method\";\n\n        if (isPrivate) {\n          this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n          return;\n        }\n\n        var isConstructor = this.isNonstaticConstructor(publicMethod);\n        var allowsDirectSuper = false;\n\n        if (isConstructor) {\n          publicMethod.kind = \"constructor\";\n\n          if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n            this.raise(key.start, ErrorMessages.DuplicateConstructor);\n          }\n\n          state.hadConstructor = true;\n          allowsDirectSuper = state.constructorAllowsSuper;\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n      } else if (this.isClassProperty()) {\n        if (isPrivate) {\n          this.pushClassPrivateProperty(classBody, privateProp);\n        } else {\n          this.pushClassProperty(classBody, publicProp);\n        }\n      } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n        var isGenerator = this.eat(types.star);\n\n        if (publicMember.optional) {\n          this.unexpected(maybeQuestionTokenStart);\n        }\n\n        method.kind = \"method\";\n        this.parseClassElementName(method);\n        this.parsePostMemberNameModifiers(publicMember);\n\n        if (this.isPrivateName(method.key)) {\n          this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n        } else {\n          if (this.isNonstaticConstructor(publicMethod)) {\n            this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n          }\n\n          this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n        }\n      } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n        method.kind = key.name;\n        this.parseClassElementName(publicMethod);\n\n        if (this.isPrivateName(method.key)) {\n          this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        } else {\n          if (this.isNonstaticConstructor(publicMethod)) {\n            this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n          }\n\n          this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n        }\n\n        this.checkGetterSetterParams(publicMethod);\n      } else if (this.isLineTerminator()) {\n        if (isPrivate) {\n          this.pushClassPrivateProperty(classBody, privateProp);\n        } else {\n          this.pushClassProperty(classBody, publicProp);\n        }\n      } else {\n        this.unexpected();\n      }\n    }\n  }, {\n    key: \"parseClassElementName\",\n    value: function parseClassElementName(member) {\n      var key = this.parsePropertyName(member, true);\n\n      if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n        this.raise(key.start, ErrorMessages.StaticPrototype);\n      }\n\n      if (this.isPrivateName(key) && this.getPrivateNameSV(key) === \"constructor\") {\n        this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n      }\n\n      return key;\n    }\n  }, {\n    key: \"parseClassStaticBlock\",\n    value: function parseClassStaticBlock(classBody, member) {\n      var _member$decorators;\n\n      this.expectPlugin(\"classStaticBlock\", member.start);\n      this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n      var oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(PARAM);\n      var body = member.body = [];\n      this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n      this.prodParam.exit();\n      this.scope.exit();\n      this.state.labels = oldLabels;\n      classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n      if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n        this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n      }\n    }\n  }, {\n    key: \"pushClassProperty\",\n    value: function pushClassProperty(classBody, prop) {\n      if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n        this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n      }\n\n      classBody.body.push(this.parseClassProperty(prop));\n    }\n  }, {\n    key: \"pushClassPrivateProperty\",\n    value: function pushClassPrivateProperty(classBody, prop) {\n      this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n      var node = this.parseClassPrivateProperty(prop);\n      classBody.body.push(node);\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n    }\n  }, {\n    key: \"pushClassMethod\",\n    value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n    }\n  }, {\n    key: \"pushClassPrivateMethod\",\n    value: function pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      this.expectPlugin(\"classPrivateMethods\", method.key.start);\n      var node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n      classBody.body.push(node);\n      var kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n    }\n  }, {\n    key: \"parsePostMemberNameModifiers\",\n    value: function parsePostMemberNameModifiers(methodOrProp) {}\n  }, {\n    key: \"parseClassPrivateProperty\",\n    value: function parseClassPrivateProperty(node) {\n      this.parseInitializer(node);\n      this.semicolon();\n      return this.finishNode(node, \"ClassPrivateProperty\");\n    }\n  }, {\n    key: \"parseClassProperty\",\n    value: function parseClassProperty(node) {\n      if (!node.typeAnnotation || this.match(types.eq)) {\n        this.expectPlugin(\"classProperties\");\n      }\n\n      this.parseInitializer(node);\n      this.semicolon();\n      return this.finishNode(node, \"ClassProperty\");\n    }\n  }, {\n    key: \"parseInitializer\",\n    value: function parseInitializer(node) {\n      this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n      this.expressionScope.enter(newExpressionScope());\n      this.prodParam.enter(PARAM);\n      node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n      this.expressionScope.exit();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n  }, {\n    key: \"parseClassId\",\n    value: function parseClassId(node, isStatement, optionalId) {\n      var bindingType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : BIND_CLASS;\n\n      if (this.match(types.name)) {\n        node.id = this.parseIdentifier();\n\n        if (isStatement) {\n          this.checkLVal(node.id, \"class name\", bindingType);\n        }\n      } else {\n        if (optionalId || !isStatement) {\n          node.id = null;\n        } else {\n          this.unexpected(null, ErrorMessages.MissingClassName);\n        }\n      }\n    }\n  }, {\n    key: \"parseClassSuper\",\n    value: function parseClassSuper(node) {\n      node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n    }\n  }, {\n    key: \"parseExport\",\n    value: function parseExport(node) {\n      var hasDefault = this.maybeParseExportDefaultSpecifier(node);\n      var parseAfterDefault = !hasDefault || this.eat(types.comma);\n      var hasStar = parseAfterDefault && this.eatExportStar(node);\n      var hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n      var parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n      var isFromRequired = hasDefault || hasStar;\n\n      if (hasStar && !hasNamespace) {\n        if (hasDefault) this.unexpected();\n        this.parseExportFrom(node, true);\n        return this.finishNode(node, \"ExportAllDeclaration\");\n      }\n\n      var hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n      if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n        throw this.unexpected(null, types.braceL);\n      }\n\n      var hasDeclaration;\n\n      if (isFromRequired || hasSpecifiers) {\n        hasDeclaration = false;\n        this.parseExportFrom(node, isFromRequired);\n      } else {\n        hasDeclaration = this.maybeParseExportDeclaration(node);\n      }\n\n      if (isFromRequired || hasSpecifiers || hasDeclaration) {\n        this.checkExport(node, true, false, !!node.source);\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      if (this.eat(types._default)) {\n        node.declaration = this.parseExportDefaultExpression();\n        this.checkExport(node, true, true);\n        return this.finishNode(node, \"ExportDefaultDeclaration\");\n      }\n\n      throw this.unexpected(null, types.braceL);\n    }\n  }, {\n    key: \"eatExportStar\",\n    value: function eatExportStar(node) {\n      return this.eat(types.star);\n    }\n  }, {\n    key: \"maybeParseExportDefaultSpecifier\",\n    value: function maybeParseExportDefaultSpecifier(node) {\n      if (this.isExportDefaultSpecifier()) {\n        this.expectPlugin(\"exportDefaultFrom\");\n        var specifier = this.startNode();\n        specifier.exported = this.parseIdentifier(true);\n        node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseExportNamespaceSpecifier\",\n    value: function maybeParseExportNamespaceSpecifier(node) {\n      if (this.isContextual(\"as\")) {\n        if (!node.specifiers) node.specifiers = [];\n        var specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n        this.next();\n        specifier.exported = this.parseModuleExportName();\n        node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseExportNamedSpecifiers\",\n    value: function maybeParseExportNamedSpecifiers(node) {\n      if (this.match(types.braceL)) {\n        var _node$specifiers;\n\n        if (!node.specifiers) node.specifiers = [];\n\n        (_node$specifiers = node.specifiers).push.apply(_node$specifiers, _toConsumableArray(this.parseExportSpecifiers()));\n\n        node.source = null;\n        node.declaration = null;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseExportDeclaration\",\n    value: function maybeParseExportDeclaration(node) {\n      if (this.shouldParseExportDeclaration()) {\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.parseExportDeclaration(node);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isAsyncFunction\",\n    value: function isAsyncFunction() {\n      if (!this.isContextual(\"async\")) return false;\n      var next = this.nextTokenStart();\n      return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n    }\n  }, {\n    key: \"parseExportDefaultExpression\",\n    value: function parseExportDefaultExpression() {\n      var expr = this.startNode();\n      var isAsync = this.isAsyncFunction();\n\n      if (this.match(types._function) || isAsync) {\n        this.next();\n\n        if (isAsync) {\n          this.next();\n        }\n\n        return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n      } else if (this.match(types._class)) {\n        return this.parseClass(expr, true, true);\n      } else if (this.match(types.at)) {\n        if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        }\n\n        this.parseDecorators(false);\n        return this.parseClass(expr, true, true);\n      } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n        throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n      } else {\n        var res = this.parseMaybeAssignAllowIn();\n        this.semicolon();\n        return res;\n      }\n    }\n  }, {\n    key: \"parseExportDeclaration\",\n    value: function parseExportDeclaration(node) {\n      return this.parseStatement(null);\n    }\n  }, {\n    key: \"isExportDefaultSpecifier\",\n    value: function isExportDefaultSpecifier() {\n      if (this.match(types.name)) {\n        var value = this.state.value;\n\n        if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n          return false;\n        }\n\n        if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n          var l = this.lookahead();\n\n          if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n            this.expectOnePlugin([\"flow\", \"typescript\"]);\n            return false;\n          }\n        }\n      } else if (!this.match(types._default)) {\n        return false;\n      }\n\n      var next = this.nextTokenStart();\n      var hasFrom = this.isUnparsedContextual(next, \"from\");\n\n      if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n        return true;\n      }\n\n      if (this.match(types._default) && hasFrom) {\n        var nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n        return nextAfterFrom === 34 || nextAfterFrom === 39;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseExportFrom\",\n    value: function parseExportFrom(node, expect) {\n      if (this.eatContextual(\"from\")) {\n        node.source = this.parseImportSource();\n        this.checkExport(node);\n        var assertions = this.maybeParseImportAssertions();\n\n        if (assertions) {\n          node.assertions = assertions;\n        }\n      } else {\n        if (expect) {\n          this.unexpected();\n        } else {\n          node.source = null;\n        }\n      }\n\n      this.semicolon();\n    }\n  }, {\n    key: \"shouldParseExportDeclaration\",\n    value: function shouldParseExportDeclaration() {\n      if (this.match(types.at)) {\n        this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n        if (this.hasPlugin(\"decorators\")) {\n          if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n            this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n          } else {\n            return true;\n          }\n        }\n      }\n\n      return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n    }\n  }, {\n    key: \"checkExport\",\n    value: function checkExport(node, checkNames, isDefault, isFrom) {\n      if (checkNames) {\n        if (isDefault) {\n          this.checkDuplicateExports(node, \"default\");\n\n          if (this.hasPlugin(\"exportDefaultFrom\")) {\n            var _declaration$extra;\n\n            var declaration = node.declaration;\n\n            if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n              this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n            }\n          }\n        } else if (node.specifiers && node.specifiers.length) {\n          var _iterator12 = _createForOfIteratorHelper(node.specifiers),\n              _step12;\n\n          try {\n            for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n              var specifier = _step12.value;\n              var exported = specifier.exported;\n              var exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n              this.checkDuplicateExports(specifier, exportedName);\n\n              if (!isFrom && specifier.local) {\n                var local = specifier.local;\n\n                if (local.type === \"StringLiteral\") {\n                  this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n                } else {\n                  this.checkReservedWord(local.name, local.start, true, false);\n                  this.scope.checkLocalExport(local);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator12.e(err);\n          } finally {\n            _iterator12.f();\n          }\n        } else if (node.declaration) {\n          if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n            var id = node.declaration.id;\n            if (!id) throw new Error(\"Assertion failure\");\n            this.checkDuplicateExports(node, id.name);\n          } else if (node.declaration.type === \"VariableDeclaration\") {\n            var _iterator13 = _createForOfIteratorHelper(node.declaration.declarations),\n                _step13;\n\n            try {\n              for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                var _declaration = _step13.value;\n                this.checkDeclaration(_declaration.id);\n              }\n            } catch (err) {\n              _iterator13.e(err);\n            } finally {\n              _iterator13.f();\n            }\n          }\n        }\n      }\n\n      var currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n      if (currentContextDecorators.length) {\n        throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n      }\n    }\n  }, {\n    key: \"checkDeclaration\",\n    value: function checkDeclaration(node) {\n      if (node.type === \"Identifier\") {\n        this.checkDuplicateExports(node, node.name);\n      } else if (node.type === \"ObjectPattern\") {\n        var _iterator14 = _createForOfIteratorHelper(node.properties),\n            _step14;\n\n        try {\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            var prop = _step14.value;\n            this.checkDeclaration(prop);\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n      } else if (node.type === \"ArrayPattern\") {\n        var _iterator15 = _createForOfIteratorHelper(node.elements),\n            _step15;\n\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var elem = _step15.value;\n\n            if (elem) {\n              this.checkDeclaration(elem);\n            }\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n      } else if (node.type === \"ObjectProperty\") {\n        this.checkDeclaration(node.value);\n      } else if (node.type === \"RestElement\") {\n        this.checkDeclaration(node.argument);\n      } else if (node.type === \"AssignmentPattern\") {\n        this.checkDeclaration(node.left);\n      }\n    }\n  }, {\n    key: \"checkDuplicateExports\",\n    value: function checkDuplicateExports(node, name) {\n      if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n        this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n      }\n\n      this.state.exportedIdentifiers.push(name);\n    }\n  }, {\n    key: \"parseExportSpecifiers\",\n    value: function parseExportSpecifiers() {\n      var nodes = [];\n      var first = true;\n      this.expect(types.braceL);\n\n      while (!this.eat(types.braceR)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n          if (this.eat(types.braceR)) break;\n        }\n\n        var node = this.startNode();\n        node.local = this.parseModuleExportName();\n        node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n        nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n      }\n\n      return nodes;\n    }\n  }, {\n    key: \"parseModuleExportName\",\n    value: function parseModuleExportName() {\n      if (this.match(types.string)) {\n        this.expectPlugin(\"moduleStringNames\");\n        var result = this.parseLiteral(this.state.value, \"StringLiteral\");\n        var surrogate = result.value.match(loneSurrogate);\n\n        if (surrogate) {\n          this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n        }\n\n        return result;\n      }\n\n      return this.parseIdentifier(true);\n    }\n  }, {\n    key: \"parseImport\",\n    value: function parseImport(node) {\n      node.specifiers = [];\n\n      if (!this.match(types.string)) {\n        var hasDefault = this.maybeParseDefaultImportSpecifier(node);\n        var parseNext = !hasDefault || this.eat(types.comma);\n        var hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n        if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n        this.expectContextual(\"from\");\n      }\n\n      node.source = this.parseImportSource();\n      var assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      } else {\n        var attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n  }, {\n    key: \"parseImportSource\",\n    value: function parseImportSource() {\n      if (!this.match(types.string)) this.unexpected();\n      return this.parseExprAtom();\n    }\n  }, {\n    key: \"shouldParseDefaultImport\",\n    value: function shouldParseDefaultImport(node) {\n      return this.match(types.name);\n    }\n  }, {\n    key: \"parseImportSpecifierLocal\",\n    value: function parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n  }, {\n    key: \"parseAssertEntries\",\n    value: function parseAssertEntries() {\n      var attrs = [];\n      var attrNames = new Set();\n\n      do {\n        if (this.match(types.braceR)) {\n          break;\n        }\n\n        var node = this.startNode();\n        var keyName = this.state.value;\n\n        if (this.match(types.string)) {\n          node.key = this.parseLiteral(keyName, \"StringLiteral\");\n        } else {\n          node.key = this.parseIdentifier(true);\n        }\n\n        this.expect(types.colon);\n\n        if (keyName !== \"type\") {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n        }\n\n        if (attrNames.has(keyName)) {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n        }\n\n        attrNames.add(keyName);\n\n        if (!this.match(types.string)) {\n          throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n        }\n\n        node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n        this.finishNode(node, \"ImportAttribute\");\n        attrs.push(node);\n      } while (this.eat(types.comma));\n\n      return attrs;\n    }\n  }, {\n    key: \"maybeParseModuleAttributes\",\n    value: function maybeParseModuleAttributes() {\n      if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n        this.expectPlugin(\"moduleAttributes\");\n        this.next();\n      } else {\n        if (this.hasPlugin(\"moduleAttributes\")) return [];\n        return null;\n      }\n\n      var attrs = [];\n      var attributes = new Set();\n\n      do {\n        var node = this.startNode();\n        node.key = this.parseIdentifier(true);\n\n        if (node.key.name !== \"type\") {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n        }\n\n        if (attributes.has(node.key.name)) {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n        }\n\n        attributes.add(node.key.name);\n        this.expect(types.colon);\n\n        if (!this.match(types.string)) {\n          throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n        }\n\n        node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n        this.finishNode(node, \"ImportAttribute\");\n        attrs.push(node);\n      } while (this.eat(types.comma));\n\n      return attrs;\n    }\n  }, {\n    key: \"maybeParseImportAssertions\",\n    value: function maybeParseImportAssertions() {\n      if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n        this.expectPlugin(\"importAssertions\");\n        this.next();\n      } else {\n        if (this.hasPlugin(\"importAssertions\")) return [];\n        return null;\n      }\n\n      this.eat(types.braceL);\n      var attrs = this.parseAssertEntries();\n      this.eat(types.braceR);\n      return attrs;\n    }\n  }, {\n    key: \"maybeParseDefaultImportSpecifier\",\n    value: function maybeParseDefaultImportSpecifier(node) {\n      if (this.shouldParseDefaultImport(node)) {\n        this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseStarImportSpecifier\",\n    value: function maybeParseStarImportSpecifier(node) {\n      if (this.match(types.star)) {\n        var specifier = this.startNode();\n        this.next();\n        this.expectContextual(\"as\");\n        this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseNamedImportSpecifiers\",\n    value: function parseNamedImportSpecifiers(node) {\n      var first = true;\n      this.expect(types.braceL);\n\n      while (!this.eat(types.braceR)) {\n        if (first) {\n          first = false;\n        } else {\n          if (this.eat(types.colon)) {\n            throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n          }\n\n          this.expect(types.comma);\n          if (this.eat(types.braceR)) break;\n        }\n\n        this.parseImportSpecifier(node);\n      }\n    }\n  }, {\n    key: \"parseImportSpecifier\",\n    value: function parseImportSpecifier(node) {\n      var specifier = this.startNode();\n      specifier.imported = this.parseModuleExportName();\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        var imported = specifier.imported;\n\n        if (imported.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n        }\n\n        this.checkReservedWord(imported.name, specifier.start, true, true);\n        specifier.local = imported.__clone();\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n  }]);\n\n  return StatementParser;\n}(ExpressionParser);\n\nvar Parser = /*#__PURE__*/function (_StatementParser) {\n  _inherits(Parser, _StatementParser);\n\n  var _super20 = _createSuper(Parser);\n\n  function Parser(options, input) {\n    var _this58;\n\n    _classCallCheck(this, Parser);\n\n    options = getOptions(options);\n    _this58 = _super20.call(this, options, input);\n    _this58.options = options;\n\n    _this58.initializeScopes();\n\n    _this58.plugins = pluginsMap(_this58.options.plugins);\n    _this58.filename = options.sourceFilename;\n    return _this58;\n  }\n\n  _createClass(Parser, [{\n    key: \"getScopeHandler\",\n    value: function getScopeHandler() {\n      return ScopeHandler;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      this.enterInitialScopes();\n      var file = this.startNode();\n      var program = this.startNode();\n      this.nextToken();\n      file.errors = null;\n      this.parseTopLevel(file, program);\n      file.errors = this.state.errors;\n      return file;\n    }\n  }]);\n\n  return Parser;\n}(StatementParser);\n\nfunction pluginsMap(plugins) {\n  var pluginMap = new Map();\n\n  var _iterator16 = _createForOfIteratorHelper(plugins),\n      _step16;\n\n  try {\n    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n      var plugin = _step16.value;\n\n      var _ref15 = Array.isArray(plugin) ? plugin : [plugin, {}],\n          _ref16 = _slicedToArray(_ref15, 2),\n          name = _ref16[0],\n          options = _ref16[1];\n\n      if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n    }\n  } catch (err) {\n    _iterator16.e(err);\n  } finally {\n    _iterator16.f();\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      var parser = getParser(options, input);\n      var ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nfunction parseExpression(input, options) {\n  var parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  var cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nvar parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  var pluginList = mixinPluginNames.filter(function (name) {\n    return hasPlugin(pluginsFromOptions, name);\n  });\n  var key = pluginList.join(\"/\");\n  var cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    var _iterator17 = _createForOfIteratorHelper(pluginList),\n        _step17;\n\n    try {\n      for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n        var plugin = _step17.value;\n        cls = mixinPlugins[plugin](cls);\n      }\n    } catch (err) {\n      _iterator17.e(err);\n    } finally {\n      _iterator17.f();\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;"],"sourceRoot":""}