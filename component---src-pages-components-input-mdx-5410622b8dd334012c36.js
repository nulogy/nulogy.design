(self.webpackChunknulogy_design=self.webpackChunknulogy_design||[]).push([[7161],{94510:function(t,e,n){"use strict";n.r(e),n.d(e,{_frontmatter:function(){return i},default:function(){return f}});var o=n(12265),p=(n(67294),n(64983)),l=n(97933),u=n(3153),r=n(23314),i={},s=function(t){return function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,p.kt)("div",e)}},a=s("Playground"),m=s("Example"),c=s("PropsTable"),d={_frontmatter:i},h=l.Z;function f(t){var e=t.components,n=(0,o.Z)(t,["components"]);return(0,p.kt)(h,Object.assign({},d,n,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("h1",null,"Input"),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"An input field that users type into.")),(0,p.kt)(a,Object.assign({},r.v,{mdxType:"Playground"})),(0,p.kt)("h2",null,"Variations"),(0,p.kt)("h3",null,"Disabled"),(0,p.kt)(m,{componentName:"input",scope:{Input:u.II},example:"DisabledInput",mdxType:"Example"}),(0,p.kt)("h3",null,"Error"),(0,p.kt)(m,{componentName:"input",scope:{Input:u.II},example:"ErrorInput",mdxType:"Example"}),(0,p.kt)("h3",null,"With prefix and suffix"),(0,p.kt)(m,{componentName:"input",scope:{Input:u.II},example:"PrefixSuffixInput",mdxType:"Example"}),(0,p.kt)("h2",null,"Props"),(0,p.kt)(c,{propsConfig:r.v.props,mdxType:"PropsTable"}),(0,p.kt)("h2",null,"Content Guidelines"),(0,p.kt)("p",null,"Whenever possible match the width of the input field with the expected length of the input. If that is not possible then fill the entire width of the container."),(0,p.kt)("h2",null,"Props"))}f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-input-mdx-5410622b8dd334012c36.js.map