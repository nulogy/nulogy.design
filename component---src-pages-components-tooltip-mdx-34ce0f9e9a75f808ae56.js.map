{"version":3,"sources":["webpack://nulogy.design/./src/pages/components/tooltip.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Playground","Example","PropsTable","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","config","componentName","scope","Tooltip","Button","example","parentName","propsConfig","isMDXComponent"],"mappings":"yQAUaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAaL,EAAc,cAC3BM,EAAUN,EAAc,WACxBO,EAAaP,EAAc,cAC3BQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGV,GACF,yBACD,OAAO,QAACO,EAAD,iBAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,eAI5E,8BACA,yLACA,QAACR,EAAD,iBAAgBS,IAAhB,CAAwBD,QAAQ,iBAChC,+BACA,qFACA,qCACA,6EACA,iCACA,4CACA,QAACP,EAAD,CAASS,cAAc,UAAUC,MAAO,CACtCC,YACAC,aACCC,QAAQ,gBAAgBN,QAAQ,aACnC,uCACA,mBACE,cAAIO,WAAW,MAAf,kEACA,cAAIA,WAAW,MAAf,6DAEF,4BACA,QAACb,EAAD,CAAYc,YAAaP,UAAcD,QAAQ,gBAC/C,yCACA,mBACE,cAAIO,WAAW,OAAK,2BAAGA,WAAW,MAAS,CACvC,KAAQ,8BADQ,kBAGpB,cAAIA,WAAW,OAAK,2BAAGA,WAAW,MAAS,CACvC,KAAQ,+BADQ,oBAQ1BT,EAAWW,gBAAiB","file":"component---src-pages-components-tooltip-mdx-34ce0f9e9a75f808ae56.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nulogy.design/nulogy.design/src/components/MarkdownRenderer.js\";\nimport { Tooltip, Button } from \"@nulogy/components\";\nimport { config } from \"../../playgrounds/tooltip\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Playground = makeShortcode(\"Playground\");\nconst Example = makeShortcode(\"Example\");\nconst PropsTable = makeShortcode(\"PropsTable\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Tooltip`}</h1>\n    <p>{`User-triggered messages that provide additional information about something on a page. Tooltips are accessed by hovering with a mouse or tapping on a touch screen.`}</p>\n    <Playground {...config} mdxType=\"Playground\" />\n    <h2>{`Use when`}</h2>\n    <p>{`There is additional information that could be helpful to a user`}</p>\n    <h2>{`Don't use when`}</h2>\n    <p>{`The information contained is vital to completing a task`}</p>\n    <h2>{`Variations`}</h2>\n    <h3>{`With non-text content`}</h3>\n    <Example componentName=\"tooltip\" scope={{\n      Tooltip,\n      Button\n    }} example=\"CustomContent\" mdxType=\"Example\" />\n    <h2>{`Usage Guidelines`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The Tooltip component is only supported for Buttons and Links`}</li>\n      <li parentName=\"ul\">{`Only add a Tooltip to other elements that are focusable`}</li>\n    </ul>\n    <h2>{`Props`}</h2>\n    <PropsTable propsConfig={config.props} mdxType=\"PropsTable\" />\n    <h2>{`Related Components`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/components/iconic-button\"\n        }}>{`IconicButton`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/components/truncated-text\"\n        }}>{`TruncatedText`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}