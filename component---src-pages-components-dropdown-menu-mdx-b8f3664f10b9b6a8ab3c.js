(self.webpackChunknulogy_design=self.webpackChunknulogy_design||[]).push([[9718],{90589:function(o,e,n){"use strict";n.r(e),n.d(e,{_frontmatter:function(){return d},default:function(){return w}});var t=n(12265),r=(n(67294),n(64983)),p=n(97933),s=n(3153),l=n(40756),d={},u=function(o){return function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)}},a=u("Playground"),c=u("Example"),m=u("PropsTable"),i={_frontmatter:d},h=p.Z;function w(o){var e=o.components,n=(0,t.Z)(o,["components"]);return(0,r.kt)(h,Object.assign({},i,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",null,"DropdownMenu"),(0,r.kt)("p",null,"Dropdown Menus are used to collapse a group of associated actions together."),(0,r.kt)(a,Object.assign({},l.v,{mdxType:"Playground"})),(0,r.kt)("h2",null,"Variations"),(0,r.kt)("h3",null,"Custom Trigger"),(0,r.kt)("p",null,"A custom trigger element can be passed to change the trigger that opens the dropdowns."),(0,r.kt)(c,{componentName:"dropdownMenu",scope:{DropdownMenu:s.h_,DropdownLink:s._2,DropdownButton:s.PS,Button:s.zx},example:"CustomTrigger",mdxType:"Example"}),(0,r.kt)("h3",null,"Custom Colors"),(0,r.kt)("p",null,"A custom trigger element can be passed to change the trigger that opens the dropdowns."),(0,r.kt)(c,{componentName:"dropdownMenu",scope:{DropdownMenu:s.h_,DropdownLink:s._2,DropdownButton:s.PS,Box:s.xu},example:"CustomColours",mdxType:"Example"}),(0,r.kt)("h3",null,"DropdownItem"),(0,r.kt)("p",null,"Using the Dropdown Link and DropdownButton components with the DropdownMenu are recommended as they provide the correct link and button styles for the dropdown. However, wrapping another component with DropdownItem will also apply correct styling for the DropdownMenu."),(0,r.kt)(c,{componentName:"dropdownMenu",scope:{DropdownMenu:s.h_,DropdownLink:s._2,DropdownButton:s.PS,DropdownItem:s.hP},example:"DropdownLink",showEditor:!0,mdxType:"Example"}),(0,r.kt)("h3",null,"As a Controlled Component"),(0,r.kt)("p",null,"The DropdownMenu is currently to be used as an uncontrolled component. However, the component does come with hooks to use to close the menu when elements within the menu are clicked. Use the closeMenu function provided by the DropdownMenu component via the ",(0,r.kt)("a",Object.assign({parentName:"p"},{href:"https://reactjs.org/docs/render-props.html"}),"render props")," React pattern as shown below. Note: event must be passed in to closeMenu."),(0,r.kt)(c,{componentName:"dropdownMenu",scope:{DropdownMenu:s.h_,DropdownButton:s.PS},example:"Controlled",showEditor:!0,mdxType:"Example"}),(0,r.kt)("h2",null,"Props"),(0,r.kt)(m,{propsConfig:l.v.props,mdxType:"PropsTable"}),(0,r.kt)("h2",null,"Related Components"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",Object.assign({parentName:"li"},{href:"/components/iconic-button"}),"IconicButton"))))}w.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-dropdown-menu-mdx-b8f3664f10b9b6a8ab3c.js.map