{"version":3,"sources":["webpack://nulogy.design/./src/pages/components/dropdown-menu.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Playground","Example","PropsTable","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","config","componentName","scope","DropdownMenu","DropdownLink","DropdownButton","Button","example","Box","DropdownItem","showEditor","parentName","propsConfig","isMDXComponent"],"mappings":"yQAUaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAaL,EAAc,cAC3BM,EAAUN,EAAc,WACxBO,EAAaP,EAAc,cAC3BQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGV,GACF,yBACD,OAAO,QAACO,EAAD,iBAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,eAI5E,mCACA,iGACA,QAACR,EAAD,iBAAgBS,IAAhB,CAAwBD,QAAQ,iBAChC,iCACA,qCACA,4GACA,QAACP,EAAD,CAASS,cAAc,eAAeC,MAAO,CAC3CC,kBACAC,kBACAC,oBACAC,aACCC,QAAQ,gBAAgBR,QAAQ,aACnC,oCACA,4GACA,QAACP,EAAD,CAASS,cAAc,eAAeC,MAAO,CAC3CC,kBACAC,kBACAC,oBACAG,UACCD,QAAQ,gBAAgBR,QAAQ,aACnC,mCACA,kSACA,QAACP,EAAD,CAASS,cAAc,eAAeC,MAAO,CAC3CC,kBACAC,kBACAC,oBACAI,mBACCF,QAAQ,eAAeG,YAAU,EAACX,QAAQ,aAC7C,gDACA,sRAAwQ,2BAAGY,WAAW,KAAQ,CAC1R,KAAQ,+CAD4P,gBAAxQ,+EAGA,QAACnB,EAAD,CAASS,cAAc,eAAeC,MAAO,CAC3CC,kBACAE,qBACCE,QAAQ,aAAaG,YAAU,EAACX,QAAQ,aAC3C,4BACA,QAACN,EAAD,CAAYmB,YAAaZ,UAAcD,QAAQ,gBAC/C,yCACA,mBACE,cAAIY,WAAW,OAAK,2BAAGA,WAAW,MAAS,CACvC,KAAQ,8BADQ,mBAQ1Bd,EAAWgB,gBAAiB","file":"component---src-pages-components-dropdown-menu-mdx-b8f3664f10b9b6a8ab3c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nulogy.design/nulogy.design/src/components/MarkdownRenderer.js\";\nimport { DropdownMenu, DropdownLink, DropdownButton, Button, Box, DropdownItem } from \"@nulogy/components\";\nimport { config } from \"../../playgrounds/dropdown-menu\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Playground = makeShortcode(\"Playground\");\nconst Example = makeShortcode(\"Example\");\nconst PropsTable = makeShortcode(\"PropsTable\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`DropdownMenu`}</h1>\n    <p>{`Dropdown Menus are used to collapse a group of associated actions together.`}</p>\n    <Playground {...config} mdxType=\"Playground\" />\n    <h2>{`Variations`}</h2>\n    <h3>{`Custom Trigger`}</h3>\n    <p>{`A custom trigger element can be passed to change the trigger that opens the dropdowns.`}</p>\n    <Example componentName=\"dropdownMenu\" scope={{\n      DropdownMenu,\n      DropdownLink,\n      DropdownButton,\n      Button\n    }} example=\"CustomTrigger\" mdxType=\"Example\" />\n    <h3>{`Custom Colors`}</h3>\n    <p>{`A custom trigger element can be passed to change the trigger that opens the dropdowns.`}</p>\n    <Example componentName=\"dropdownMenu\" scope={{\n      DropdownMenu,\n      DropdownLink,\n      DropdownButton,\n      Box\n    }} example=\"CustomColours\" mdxType=\"Example\" />\n    <h3>{`DropdownItem`}</h3>\n    <p>{`Using the Dropdown Link and DropdownButton components with the DropdownMenu are recommended as they provide the correct link and button styles for the dropdown. However, wrapping another component with DropdownItem will also apply correct styling for the DropdownMenu.`}</p>\n    <Example componentName=\"dropdownMenu\" scope={{\n      DropdownMenu,\n      DropdownLink,\n      DropdownButton,\n      DropdownItem\n    }} example=\"DropdownLink\" showEditor mdxType=\"Example\" />\n    <h3>{`As a Controlled Component`}</h3>\n    <p>{`The DropdownMenu is currently to be used as an uncontrolled component. However, the component does come with hooks to use to close the menu when elements within the menu are clicked. Use the closeMenu function provided by the DropdownMenu component via the `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/render-props.html\"\n      }}>{`render props`}</a>{` React pattern as shown below. Note: event must be passed in to closeMenu.`}</p>\n    <Example componentName=\"dropdownMenu\" scope={{\n      DropdownMenu,\n      DropdownButton\n    }} example=\"Controlled\" showEditor mdxType=\"Example\" />\n    <h2>{`Props`}</h2>\n    <PropsTable propsConfig={config.props} mdxType=\"PropsTable\" />\n    <h2>{`Related Components`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/components/iconic-button\"\n        }}>{`IconicButton`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}