(self.webpackChunknulogy_design=self.webpackChunknulogy_design||[]).push([[5418],{19099:function(e,n,t){"use strict";t.r(n),t.d(n,{_frontmatter:function(){return l},default:function(){return c}});var a=t(12265),o=(t(67294),t(64983)),i=t(97933),r=(t(3153),t(12905)),s=t(17553),l={},p=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)}},u=p("Playground"),d=p("PropsTable"),m={_frontmatter:l},h=i.Z;function c(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)(h,Object.assign({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",null,"BrandedNavBar"),(0,o.kt)("p",null,"A light navigation bar that can optionally support a customer's logo."),(0,o.kt)(u,Object.assign({},s.v,{mdxType:"Playground"})),(0,o.kt)("h2",null,"Props"),(0,o.kt)(d,{propsConfig:s.v.props,mdxType:"PropsTable"}),(0,o.kt)("h2",null,"MenuData PropsTable"),(0,o.kt)("p",null,"The menuData prop is used to provide links to the NavBar and assemble their heirarchy. The direct children in the menuData object are shown below:"),(0,o.kt)(d,{propsConfig:{primaryMenu:{type:r.n.Array,value:"",description:"Data to the main navigation menu, aligned to the left of the NavBar."},secondaryMenu:{type:r.n.Array,value:"",description:"Data to the secondary navigation menu, aligned to the right of the NavBar."}},mdxType:"PropsTable"}),(0,o.kt)("h2",null,"Adding Menu Items"),(0,o.kt)("p",null,"Both primaryMenu and secondaryMenu expect an array of objects. Each object represents a link or a heading to a group of links under it, with the following shape:"),(0,o.kt)("pre",null,(0,o.kt)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'const primaryMenu = [\n  {\n    name = "string",\n    href = "/",      // optional\n    render = ()=>(), // optional\n    items = [],      // optional\n  },\n]\n')),(0,o.kt)("p",null,'Each menu item object requires a "name" key. The "name" key will be used as the label for the menu item unless a "render" key is used. Adding "items" to the menu item object will render a dropdown with the specified items.'),(0,o.kt)("p",null,"Menu items can be nested within eachother using the items key for as many levels of heirarchy that is needed."),(0,o.kt)(d,{propsConfig:{name:{type:r.n.ReactNode,value:"",description:"Unique identifier for the menu item."},ariaLabel:{type:r.n.String,value:"",description:"Add an aria-label if the `name` value is not a readable label, like an icon."},href:{type:r.n.String,value:"",description:"URL or link to an element similar to a standard <a> tag, this causes the menu item to render as a link within the NavBar."},items:{type:r.n.Array,value:"",description:"Array of menu item objects. This causes the menu item to render as a dropdown in desktop view or as a heading in mobile view."},render:{type:r.n.Function,value:"",description:"Function that returns JSX. This causes the menu item to render as the JSX provided wrapped in a component that provides styling and an onClick handler to close the menu. NOTE: Do not use `href` and `items` keys if you intend to use the render function."}},mdxType:"PropsTable"}),(0,o.kt)("h2",null,"Related Components"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",Object.assign({parentName:"li"},{href:"/components/page"}),"Page")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",Object.assign({parentName:"li"},{href:"/components/application-frame"}),"ApplicationFrame"))))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-branded-nav-bar-mdx-bffc6430a0b57d3f7a54.js.map